# Automatically generated by Pynguin.
import caso_covertura_175 as module0


def test_case_0():
    try:
        var0 = 1720.17527
        var1 = module0.contains_unique_day(var0, var0)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = -1951.268313
        var1 = '-hJySJdP}'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = 1283
        var1 = 'xi8Or\nv'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'A1FOj!w\rc'
        var10 = -1395.69218
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 3355.0
        var10 = module0.contains_unique_day(var9, var6)
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'XT@65&e"-X_0b8b8&='
        var10 = 762.936018
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '>cP0tvF'
        var10 = module0.unique_day(var4, var9)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 597.5
        var19 = module0.unique_day(var18, var3)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.contains_unique_day(var4, var3)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = 1862
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -2042.419
        var13 = -179.0265
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = 3363.4
        var1 = 'Y(/aMIS'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = '45qYz<O'
        var1 = True
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = True
        var1 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '6lRM_T[Ta\tuJ#^+0'
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = module0.unique_day(var12, var6)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -922.0
        var19 = 'F\t:XX-<'
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = 'xQ&Sk*'
        var1 = True
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 912.2606
        var10 = module0.unique_month(var0, var9)
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = 'bs6eVJ$-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'L>6*8g\nlbw\t{'
        var25 = None
        var26 = module0.unique_month(var24, var25)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = module0.unique_month(var6, var3)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'e\rTCz*HEe!G!m'
        var19 = 3746
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_22():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = -66.31887
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_23():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -304
        var25 = module0.unique_day(var24, var6)
    except BaseException:
        pass


def test_case_24():
    try:
        var0 = None
        var1 = module0.unique_day(var0, var0)
    except BaseException:
        pass


def test_case_25():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'ea>s.7W`Od/}Q`'
        var4 = None
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_26():
    try:
        var0 = 'CB&\r7yH'
        var1 = None
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_27():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -504.0
        var16 = 2177
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_28():
    try:
        var0 = True
        var1 = -2155.0
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_29():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = module0.contains_unique_day(var12, var12)
    except BaseException:
        pass


def test_case_30():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -420
        var4 = True
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_31():
    try:
        var0 = 299.83968
        var1 = 1379
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_32():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '!'
        var19 = ';\ri'
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_33():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -932
        var25 = False
        var26 = module0.contains_unique_day(var24, var25)
    except BaseException:
        pass


def test_case_34():
    try:
        var0 = '\rU@C\\\\'
        var1 = -1546
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_35():
    try:
        var0 = '~warQ('
        var1 = 3218
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_36():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = 'bs6eVJ$-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = "'oQV[lh{\n5O "
        var25 = 1703.1
        var26 = module0.unique_day(var24, var25)
    except BaseException:
        pass


def test_case_37():
    try:
        var0 = None
        var1 = -1342
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_38():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = "Q^NRc#'"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 366
        var28 = module0.contains_unique_day(var18, var27)
    except BaseException:
        pass


def test_case_39():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '^]V\x0b@iq^[`/,+8S'
        var13 = -265.74789
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_40():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 2148
        var10 = False
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_41():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 266
        var19 = module0.contains_unique_day(var18, var6)
    except BaseException:
        pass


def test_case_42():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = False
        var26 = module0.contains_unique_day(var24, var25)
    except BaseException:
        pass


def test_case_43():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '(EbK_P[Ey'
        var13 = False
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_44():
    try:
        var0 = -709
        var1 = module0.contains_unique_day(var0, var0)
    except BaseException:
        pass


def test_case_45():
    try:
        var0 = '\n=@o=*'
        var1 = -479.3984
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_46():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 2201.68
        var7 = 1913.851
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_47():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -773.9922
        var4 = module0.unique_month(var0, var3)
    except BaseException:
        pass


def test_case_48():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_day(var13, var10)
    except BaseException:
        pass


def test_case_49():
    try:
        var0 = -3536.5
        var1 = True
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_50():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = "Q^NRc#'"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 211.0
        var28 = -1444.113557
        var29 = module0.unique_day(var27, var28)
    except BaseException:
        pass


def test_case_51():
    try:
        var0 = "^Y:&>tcB.i'BYPgsF"
        var1 = True
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_52():
    try:
        var0 = False
        var1 = 3683
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_53():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'e(\x0cFv\n[<q2&RK'
        var16 = -311
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_54():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1304
        var10 = module0.unique_day(var9, var9)
    except BaseException:
        pass


def test_case_55():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -252.0
        var25 = True
        var26 = module0.unique_day(var24, var25)
    except BaseException:
        pass


def test_case_56():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = -1033
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_57():
    try:
        var0 = False
        var1 = 2708
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_58():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1703.515
        var19 = None
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_59():
    try:
        var0 = 'T03ff0-w2o\t,`GS'
        var1 = False
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_60():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 2625.7306
        var4 = module0.contains_unique_day(var3, var3)
    except BaseException:
        pass


def test_case_61():
    try:
        var0 = None
        var1 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_62():
    try:
        var0 = 213
        var1 = None
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_63():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1798
        var16 = module0.contains_unique_day(var12, var15)
    except BaseException:
        pass


def test_case_64():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = True
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_65():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = -622.07
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_66():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = -3373
        var26 = module0.unique_month(var24, var25)
    except BaseException:
        pass


def test_case_67():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 295
        var19 = module0.unique_day(var12, var18)
    except BaseException:
        pass


def test_case_68():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = True
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_69():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 225.278702
        var19 = None
        var20 = module0.unique_month(var18, var19)
    except BaseException:
        pass


def test_case_70():
    try:
        var0 = 221.797247
        var1 = -864
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_71():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'VV&g'
        var22 = -1020
        var23 = module0.contains_unique_day(var21, var22)
    except BaseException:
        pass


def test_case_72():
    try:
        var0 = -83.0
        var1 = -175
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_73():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = "Q^NRc#'"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '77'
        var31 = None
        var32 = module0.unique_month(var30, var31)
    except BaseException:
        pass


def test_case_74():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'prIG&fpGR'
        var13 = None
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_75():
    try:
        var0 = 'hX`'
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_76():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = 'bs6eVJ$-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = None
        var32 = module0.unique_day(var30, var31)
    except BaseException:
        pass


def test_case_77():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = -1082
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_78():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = 127.2727
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_79():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -2329.0
        var10 = module0.contains_unique_day(var6, var9)
    except BaseException:
        pass


def test_case_80():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -2264.5403
        var4 = module0.unique_month(var3, var3)
    except BaseException:
        pass


def test_case_81():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = "Q^NRc#'"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 3472.336049
        var28 = module0.contains_unique_day(var27, var3)
    except BaseException:
        pass


def test_case_82():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 95.2
        var10 = 2348.846477
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_83():
    try:
        var0 = None
        var1 = -1259
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_84():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = "Q^NRc#'"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -498.149994
        var28 = module0.contains_unique_day(var27, var27)
    except BaseException:
        pass


def test_case_85():
    try:
        var0 = 3427.75367
        var1 = None
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_86():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -115.0
        var31 = True
        var32 = module0.unique_day(var30, var31)
    except BaseException:
        pass


def test_case_87():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'c[kmJ&wX\n@E8\tKH'
        var13 = module0.unique_day(var12, var9)
    except BaseException:
        pass


def test_case_88():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = 'bs6eVJ$-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = "fwK;4A:\r@?(aNbF3\x0b^'"
        var31 = module0.unique_day(var30, var6)
    except BaseException:
        pass


def test_case_89():
    try:
        var0 = True
        var1 = -1237
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_90():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = 'bs6eVJ$-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '|9d1]'
        var34 = 'D|kg\twl'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 687
        var37 = 'Y.)d\r|'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = '&"\x0b2UaV'
        var40 = False
        var41 = module0.unique_day(var39, var40)
    except BaseException:
        pass


def test_case_91():
    try:
        var0 = 1193.0
        var1 = -406
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_92():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 51
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_93():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 888.669
        var28 = True
        var29 = module0.unique_month(var27, var28)
    except BaseException:
        pass


def test_case_94():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = module0.unique_day(var3, var3)
    except BaseException:
        pass


def test_case_95():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 161.0
        var25 = -663
        var26 = module0.unique_day(var24, var25)
    except BaseException:
        pass


def test_case_96():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 836.16888
        var7 = module0.unique_day(var0, var6)
    except BaseException:
        pass


def test_case_97():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = module0.contains_unique_day(var10, var30)
    except BaseException:
        pass


def test_case_98():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 687
        var31 = 'Y.)d\r|'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -4803
        var34 = module0.unique_month(var9, var33)
    except BaseException:
        pass


def test_case_99():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\x0bP?%vd)V[jM\\Ks%dH'
        var19 = 'cg-7;s4|XB1A'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 3543.93
        var22 = module0.unique_day(var21, var12)
    except BaseException:
        pass


def test_case_100():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '%0fP'
        var13 = module0.unique_day(var0, var12)
    except BaseException:
        pass


def test_case_101():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -868
        var22 = 1434.0
        var23 = module0.unique_month(var21, var22)
    except BaseException:
        pass


def test_case_102():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = 'bs6eVJ$-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\x0bP?%vd)V[jM\\Ks%dH'
        var25 = 'cg-7;s4|XB1A'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 1514.1
        var28 = module0.unique_day(var27, var3)
    except BaseException:
        pass


def test_case_103():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 687
        var16 = 'Y.)d\r|'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = True
        var34 = 'o1@,!$!-'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 1104
        var37 = '0!(N+\tTrOU$Zk}'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '|9d1]'
        var40 = 'D|kg\twl'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = ''
        var43 = module0.unique_day(var42, var36)
    except BaseException:
        pass


def test_case_104():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 687
        var25 = 'Y.)d\r|'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = 'o1@,!$!-'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '\x0bP?%vd)V[jM\\Ks%dH'
        var37 = 'cg-7;s4|XB1A'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = '|9d1]'
        var40 = 'D|kg\twl'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = 'jk.t'
        var43 = None
        var44 = module0.unique_day(var42, var43)
    except BaseException:
        pass


def test_case_105():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = 'o1@,!$!-'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = 'bs6eVJ$-'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '|9d1]'
        var37 = 'D|kg\twl'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '\x0bP?%vd)V[jM\\Ks%dH'
        var40 = 'cg-7;s4|XB1A'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = '#{?'
        var43 = module0.unique_day(var33, var42)
    except BaseException:
        pass


def test_case_106():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = 'bs6eVJ$-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = "Q^NRc#'"
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '|9d1]'
        var37 = 'D|kg\twl'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 687
        var40 = 'Y.)d\r|'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = '4RD[%d`1C\x0cS 32'
        var43 = None
        var44 = module0.unique_day(var42, var43)
    except BaseException:
        pass


def test_case_107():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 186
        var4 = False
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_108():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 2840.31311
        var10 = module0.unique_day(var9, var3)
    except BaseException:
        pass


def test_case_109():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = module0.contains_unique_day(var19, var18)
    except BaseException:
        pass


def test_case_110():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\x0bP?%vd)V[jM\\Ks%dH'
        var19 = 'cg-7;s4|XB1A'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 3396
        var22 = module0.unique_day(var21, var6)
    except BaseException:
        pass


def test_case_111():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_112():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\x0bP?%vd)V[jM\\Ks%dH'
        var19 = 'cg-7;s4|XB1A'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 687
        var31 = 'Y.)d\r|'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 1104
        var34 = '0!(N+\tTrOU$Zk}'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = ''
        var37 = '*B Am\nRb_#'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = True
        var40 = "Q^NRc#'"
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = True
        var43 = module0.contains_unique_day(var24, var42)
    except BaseException:
        pass


def test_case_113():
    try:
        var0 = 905
        var1 = True
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_114():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 687
        var16 = 'Y.)d\r|'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '\x0bP?%vd)V[jM\\Ks%dH'
        var31 = 'cg-7;s4|XB1A'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = "@pJ8pA'l4 ~R"
        var35 = module0.unique_day(var33, var34)
    except BaseException:
        pass


def test_case_115():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -2745.2
        var28 = False
        var29 = module0.unique_month(var27, var28)
    except BaseException:
        pass


def test_case_116():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1593.47353
        var19 = module0.unique_day(var6, var18)
    except BaseException:
        pass


def test_case_117():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bc4)Pe;\nd[jx]Lj'
        var7 = True
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_118():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = True
        var22 = '{Q<\\e!iju^JO[l'
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_119():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'g@k'
        var13 = True
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_120():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '\x0bP?%vd)V[jM\\Ks%dH'
        var22 = 'cg-7;s4|XB1A'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = 'o1@,!$!-'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '|9d1]'
        var37 = 'D|kg\twl'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 687
        var40 = 'Y.)d\r|'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = None
        var43 = 4147
        var44 = module0.contains_unique_day(var42, var43)
    except BaseException:
        pass


def test_case_121():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '(8CUJHUOIhTKzN\n5\\,#\t'
        var22 = 30.878
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_122():
    try:
        var0 = 2468
        var1 = 179.626684
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_123():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -631
        var13 = '/`6nb\\C\\Jdmp`'
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_124():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1469
        var7 = -365
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_125():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -546.2524
        var13 = 608.5
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_126():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'zmsknjU'
        var13 = False
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_127():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 687
        var16 = 'Y.)d\r|'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '\x0bP?%vd)V[jM\\Ks%dH'
        var19 = 'cg-7;s4|XB1A'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = "Q^NRc#'"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = '2oaW%#(kL'
        var31 = True
        var32 = module0.unique_day(var30, var31)
    except BaseException:
        pass


def test_case_128():
    try:
        var0 = False
        var1 = -792
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_129():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "g0':U\t.7g:R+:"
        var22 = 'm-\rv;LD9\x0b%(;riXp;L}w'
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_130():
    try:
        var0 = False
        var1 = -1510
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_131():
    try:
        var0 = None
        var1 = 2921.0
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_132():
    try:
        var0 = 'pi \t'
        var1 = "Q'u"
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_133():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\x0bP?%vd)V[jM\\Ks%dH'
        var10 = 'cg-7;s4|XB1A'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 1543
        var31 = None
        var32 = module0.unique_month(var30, var31)
    except BaseException:
        pass


def test_case_134():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = module0.unique_month(var24, var22)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = None
        var31 = module0.contains_unique_day(var29, var30)
    except BaseException:
        pass


def test_case_135():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = "J!X*>\ty3Z=C'Pr"
        var13 = True
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_136():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -648.8986
        var13 = module0.unique_month(var9, var12)
    except BaseException:
        pass


def test_case_137():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 687
        var22 = 'Y.)d\r|'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = module0.contains_unique_day(var21, var12)
    except BaseException:
        pass


def test_case_138():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'u|-7T#\x0b'
        var4 = False
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_139():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1205.0
        var16 = module0.unique_month(var3, var15)
    except BaseException:
        pass


def test_case_140():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -309
        var22 = None
        var23 = module0.contains_unique_day(var21, var22)
    except BaseException:
        pass


def test_case_141():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = True
        var34 = 'o1@,!$!-'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = ''
        var37 = '*B Am\nRb_#'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 1104
        var40 = '0!(N+\tTrOU$Zk}'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = ''
        var43 = '*B Am\nRb_#'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = None
        var46 = module0.unique_month(var45, var43)
        assert var46 is False
        var47 = -332.416
        var48 = module0.unique_day(var47, var31)
    except BaseException:
        pass


def test_case_142():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = module0.unique_month(var36, var34)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 687
        var45 = 'Y.)d\r|'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = '|9d1]'
        var48 = 'D|kg\twl'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = True
        var51 = module0.unique_day(var36, var50)
    except BaseException:
        pass


def test_case_143():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 687
        var22 = 'Y.)d\r|'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = "Q^NRc#'"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = module0.unique_month(var36, var34)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = True
        var42 = 'o1@,!$!-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = None
        var45 = -392.42
        var46 = module0.unique_month(var44, var45)
    except BaseException:
        pass


def test_case_144():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = module0.unique_month(var36, var34)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = True
        var42 = 'o1@,!$!-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = '|9d1]'
        var45 = 'D|kg\twl'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = '\x0bP?%vd)V[jM\\Ks%dH'
        var48 = 'cg-7;s4|XB1A'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = True
        var51 = False
        var52 = module0.unique_day(var50, var51)
    except BaseException:
        pass


def test_case_145():
    try:
        var0 = 'M/\x0cdYK!b~gV'
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_146():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1676.0
        var10 = module0.contains_unique_day(var9, var6)
    except BaseException:
        pass


def test_case_147():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = module0.contains_unique_day(var12, var6)
    except BaseException:
        pass


def test_case_148():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = -1678.326133
        var12 = 'uL6n:(0+&aC'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = "Q^NRc#'"
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = 'o1@,!$!-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = 'bs6eVJ$-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 687
        var45 = 'Y.)d\r|'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = '\x0bP?%vd)V[jM\\Ks%dH'
        var48 = 'cg-7;s4|XB1A'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = module0.contains_unique_day(var11, var32)
    except BaseException:
        pass


def test_case_149():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '09zor&f>^]'
        var10 = module0.unique_month(var9, var6)
    except BaseException:
        pass


def test_case_150():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = 'bs6eVJ$-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = -1678.326133
        var27 = 'uL6n:(0+&aC'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = module0.unique_month(var3, var6)
    except BaseException:
        pass


def test_case_151():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var19)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = 'o1@,!$!-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = 'bs6eVJ$-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = True
        var36 = 'o1@,!$!-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = module0.unique_month(var21, var38)
    except BaseException:
        pass


def test_case_152():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '\x0bP?%vd)V[jM\\Ks%dH'
        var13 = 'cg-7;s4|XB1A'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = 'bs6eVJ$-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = module0.unique_month(var24, var18)
    except BaseException:
        pass


def test_case_153():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = 'bs6eVJ$-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = -1678.326133
        var27 = 'uL6n:(0+&aC'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '`)U'
        var39 = module0.unique_day(var38, var32)
    except BaseException:
        pass


def test_case_154():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '!6I'
        var10 = 886
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_155():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = module0.unique_month(var12, var9)
    except BaseException:
        pass


def test_case_156():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 687
        var18 = 'Y.)d\r|'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -242.0
        var21 = module0.unique_day(var17, var20)
    except BaseException:
        pass


def test_case_157():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 687
        var22 = 'Y.)d\r|'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = 'o1@,!$!-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '(n&'
        var31 = None
        var32 = module0.unique_month(var30, var31)
    except BaseException:
        pass


def test_case_158():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'S1\tn^q*c`"brQS=lhKS'
        var10 = "Z'T t\n?\\<IZ\n"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -182
        var16 = module0.unique_day(var3, var15)
    except BaseException:
        pass


def test_case_159():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '\x0bP?%vd)V[jM\\Ks%dH'
        var18 = 'cg-7;s4|XB1A'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = 'D.>\r{bA5\r'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 1104
        var24 = '0!(N+\tTrOU$Zk}'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = "Q^NRc#'"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = '|9d1]'
        var33 = 'D|kg\twl'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'S1\tn^q*c`"brQS=lhKS'
        var36 = "Z'T t\n?\\<IZ\n"
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -1678.326133
        var39 = 'uL6n:(0+&aC'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = module0.unique_day(var38, var6)
    except BaseException:
        pass


def test_case_160():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1052
        var10 = module0.unique_day(var9, var9)
    except BaseException:
        pass


def test_case_161():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'S1\tn^q*c`"brQS=lhKS'
        var10 = "Z'T t\n?\\<IZ\n"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = module0.unique_month(var30, var28)
        assert var31 is False
        var32 = '0I@9wk'
        var33 = module0.unique_month(var32, var12)
    except BaseException:
        pass


def test_case_162():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -2593.164
        var7 = False
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_163():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'D.>\r{bA5\r'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'AG9lMp777Vo)z?e.x+ri'
        var10 = module0.unique_day(var7, var9)
    except BaseException:
        pass


def test_case_164():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\x0bP?%vd)V[jM\\Ks%dH'
        var19 = 'cg-7;s4|XB1A'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var25)
        assert var28 is False
        var29 = None
        var30 = 'D.>\r{bA5\r'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = 'o1@,!$!-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = 'bs6eVJ$-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = ''
        var45 = '*B Am\nRb_#'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = True
        var48 = 'o1@,!$!-'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = '\x0caP/af?r_'
        var51 = 931
        var52 = module0.contains_unique_day(var50, var51)
    except BaseException:
        pass


def test_case_165():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = 2293.850006
        var21 = module0.unique_day(var20, var20)
    except BaseException:
        pass


def test_case_166():
    try:
        var0 = -916
        var1 = 1883
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_167():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 687
        var16 = 'Y.)d\r|'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var6, var6)
    except BaseException:
        pass


def test_case_168():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 687
        var12 = 'Y.)d\r|'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = "Q^NRc#'"
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = 'o1@,!$!-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.unique_month(var23, var17)
    except BaseException:
        pass


def test_case_169():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = module0.unique_month(var20, var18)
        assert var21 is False
        var22 = ''
        var23 = '*B Am\nRb_#'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = True
        var26 = "Q^NRc#'"
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = '\re;A]f7.!S'
        var29 = 'QYUtW`,zG'
        var30 = module0.unique_day(var28, var29)
    except BaseException:
        pass


def test_case_170():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = 'D.>\r{bA5\r'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = True
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_171():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'S1\tn^q*c`"brQS=lhKS'
        var10 = "Z'T t\n?\\<IZ\n"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1678.326133
        var22 = 'uL6n:(0+&aC'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = "vDd@H>&l8V'NKl@`(_44"
        var25 = module0.contains_unique_day(var22, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = module0.unique_day(var12, var18)
    except BaseException:
        pass


def test_case_172():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 1104
        var28 = '0!(N+\tTrOU$Zk}'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = module0.unique_month(var33, var31)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = 'o1@,!$!-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = 'bs6eVJ$-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 961.0
        var45 = False
        var46 = module0.unique_month(var44, var45)
    except BaseException:
        pass


def test_case_173():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 687
        var25 = 'Y.)d\r|'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1678.326133
        var28 = 'uL6n:(0+&aC'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = True
        var34 = 'o1@,!$!-'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '@O3>A5~Zp'
        var37 = -4737.154
        var38 = module0.contains_unique_day(var36, var37)
    except BaseException:
        pass


def test_case_174():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = '\x0bP?%vd)V[jM\\Ks%dH'
        var6 = 'cg-7;s4|XB1A'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = 'o1@,!$!-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '|9d1]'
        var18 = 'D|kg\twl'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'S1\tn^q*c`"brQS=lhKS'
        var21 = "Z'T t\n?\\<IZ\n"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 1104
        var24 = '0!(N+\tTrOU$Zk}'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = module0.unique_month(var29, var27)
        assert var30 is False
        var31 = -1678.326133
        var32 = 'uL6n:(0+&aC'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '|9d1]'
        var38 = 'D|kg\twl'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 687
        var41 = 'Y.)d\r|'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = ''
        var44 = '*B Am\nRb_#'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = True
        var47 = "Q^NRc#'"
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = None
        var50 = 'D.>\r{bA5\r'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = module0.unique_month(var14, var29)
    except BaseException:
        pass


def test_case_175():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "B']\t6/AWNi%2,"
        var22 = 1887.128
        var23 = module0.contains_unique_day(var21, var22)
    except BaseException:
        pass


def test_case_176():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = 1104
        var18 = '0!(N+\tTrOU$Zk}'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = None
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_177():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = "vDd@H>&l8V'NKl@`(_44"
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = 'bs6eVJ$-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = "Q^NRc#'"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 1104
        var30 = '0!(N+\tTrOU$Zk}'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 687
        var39 = 'Y.)d\r|'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = module0.unique_day(var3, var11)
    except BaseException:
        pass


def test_case_178():
    try:
        var0 = "fS04T'ANxu|=vJ"
        var1 = 3243.59
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_179():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1678.326133
        var22 = 'uL6n:(0+&aC'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\x0bP?%vd)V[jM\\Ks%dH'
        var25 = 'cg-7;s4|XB1A'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = 'D.>\r{bA5\r'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = module0.unique_month(var13, var21)
    except BaseException:
        pass


def test_case_180():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 1104
        var28 = '0!(N+\tTrOU$Zk}'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '|9d1]'
        var31 = 'D|kg\twl'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 'S1\tn^q*c`"brQS=lhKS'
        var34 = "Z'T t\n?\\<IZ\n"
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = '\x0bP?%vd)V[jM\\Ks%dH'
        var37 = 'cg-7;s4|XB1A'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1678.326133
        var40 = 'uL6n:(0+&aC'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = module0.contains_unique_day(var42, var18)
    except BaseException:
        pass


def test_case_181():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 1464.4865
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_182():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var25)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = True
        var36 = 'o1@,!$!-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = False
        var39 = 'bs6eVJ$-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = ''
        var45 = '*B Am\nRb_#'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = True
        var48 = 'o1@,!$!-'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = module0.unique_month(var18, var15)
    except BaseException:
        pass


def test_case_183():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var19)
        assert var22 is False
        var23 = False
        var24 = module0.contains_unique_day(var15, var23)
    except BaseException:
        pass


def test_case_184():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var19)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = 'o1@,!$!-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = 'D.>\r{bA5\r'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '|9d1]'
        var33 = 'D|kg\twl'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'S1\tn^q*c`"brQS=lhKS'
        var39 = "Z'T t\n?\\<IZ\n"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -1678.326133
        var42 = 'uL6n:(0+&aC'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = "vDd@H>&l8V'NKl@`(_44"
        var45 = module0.contains_unique_day(var42, var44)
        assert var45 is False
        var46 = ''
        var47 = '*B Am\nRb_#'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = True
        var50 = 'o1@,!$!-'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = False
        var53 = 'bs6eVJ$-'
        var54 = module0.contains_unique_day(var52, var53)
        assert var54 is False
        var55 = 'EoY>.2~4;CA$2z'
        var56 = module0.unique_day(var55, var12)
    except BaseException:
        pass


def test_case_185():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = '\x0bP?%vd)V[jM\\Ks%dH'
        var18 = 'cg-7;s4|XB1A'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 1104
        var24 = '0!(N+\tTrOU$Zk}'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = -1678.326133
        var27 = 'uL6n:(0+&aC'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = "vDd@H>&l8V'NKl@`(_44"
        var30 = module0.contains_unique_day(var27, var29)
        assert var30 is False
        var31 = None
        var32 = 'D.>\r{bA5\r'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 1028
        var35 = -1044
        var36 = module0.unique_day(var34, var35)
    except BaseException:
        pass


def test_case_186():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'D.>\r{bA5\r'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = "vDd@H>&l8V'NKl@`(_44"
        var24 = module0.contains_unique_day(var21, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = "Q^NRc#'"
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = '|9d1]'
        var32 = 'D|kg\twl'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'S1\tn^q*c`"brQS=lhKS'
        var35 = "Z'T t\n?\\<IZ\n"
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = 1104
        var38 = '0!(N+\tTrOU$Zk}'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = -1678.326133
        var41 = 'uL6n:(0+&aC'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = '|9d1]'
        var44 = 'D|kg\twl'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = 'aAn>ef\\,g'
        var47 = module0.unique_day(var46, var46)
    except BaseException:
        pass


def test_case_187():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = None
        var20 = module0.contains_unique_day(var18, var19)
    except BaseException:
        pass


def test_case_188():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 687
        var25 = 'Y.)d\r|'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1678.326133
        var28 = 'uL6n:(0+&aC'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = "vDd@H>&l8V'NKl@`(_44"
        var31 = module0.contains_unique_day(var28, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = True
        var36 = 'o1@,!$!-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = False
        var39 = 'bs6eVJ$-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = module0.contains_unique_day(var12, var9)
    except BaseException:
        pass


def test_case_189():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = 'bs6eVJ$-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = "Q^NRc#'"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -1678.326133
        var33 = 'uL6n:(0+&aC'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = -1678.326133
        var39 = 'uL6n:(0+&aC'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = "vDd@H>&l8V'NKl@`(_44"
        var42 = module0.contains_unique_day(var39, var41)
        assert var42 is False
        var43 = -1080
        var44 = module0.unique_day(var29, var43)
    except BaseException:
        pass


def test_case_190():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = module0.unique_month(var1, var3)
    except BaseException:
        pass


def test_case_191():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'S1\tn^q*c`"brQS=lhKS'
        var19 = "Z'T t\n?\\<IZ\n"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '\x0bP?%vd)V[jM\\Ks%dH'
        var22 = 'cg-7;s4|XB1A'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = "Q^NRc#'"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1678.326133
        var31 = 'uL6n:(0+&aC'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = "vDd@H>&l8V'NKl@`(_44"
        var34 = module0.contains_unique_day(var31, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = module0.contains_unique_day(var38, var30)
    except BaseException:
        pass


def test_case_192():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'D.>\r{bA5\r'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1678.326133
        var10 = 'uL6n:(0+&aC'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = -1898
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_193():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\x0bP?%vd)V[jM\\Ks%dH'
        var10 = 'cg-7;s4|XB1A'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '9zcthw9'
        var24 = module0.contains_unique_day(var23, var18)
    except BaseException:
        pass


def test_case_194():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = module0.contains_unique_day(var3, var9)
    except BaseException:
        pass


def test_case_195():
    try:
        var0 = 638.696771
        var1 = -921
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_196():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '`(`}jM|YV@@I)e`f'
        var24 = module0.unique_day(var23, var9)
    except BaseException:
        pass


def test_case_197():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = 'o1@,!$!-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = 'bs6eVJ$-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '%ga&\ryGE'
        var36 = -2.0
        var37 = module0.contains_unique_day(var35, var36)
    except BaseException:
        pass


def test_case_198():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 687
        var24 = 'Y.)d\r|'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = '\x0bP?%vd)V[jM\\Ks%dH'
        var27 = 'cg-7;s4|XB1A'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = "Q^NRc#'"
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '`|cr'
        var39 = -27
        var40 = module0.contains_unique_day(var38, var39)
    except BaseException:
        pass


def test_case_199():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = 'D.>\r{bA5\r'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = 'o1@,!$!-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = 'bs6eVJ$-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = -1678.326133
        var36 = 'uL6n:(0+&aC'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = "vDd@H>&l8V'NKl@`(_44"
        var39 = module0.contains_unique_day(var36, var38)
        assert var39 is False
        var40 = None
        var41 = module0.unique_month(var12, var40)
    except BaseException:
        pass


def test_case_200():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = 'o1@,!$!-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = 'bs6eVJ$-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 1104
        var24 = '0!(N+\tTrOU$Zk}'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = module0.unique_month(var29, var27)
        assert var30 is False
        var31 = module0.unique_month(var18, var6)
    except BaseException:
        pass


def test_case_201():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = 2320.789009
        var15 = module0.unique_month(var14, var12)
    except BaseException:
        pass


def test_case_202():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = '0Jz*-~CMYa4#V(L$'
        var18 = '@Kv}PUxR6"KJ2s0y?"1'
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_203():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = 'bs6eVJ$-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = 'D.>\r{bA5\r'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -1678.326133
        var30 = 'uL6n:(0+&aC'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 1369
        var33 = module0.unique_month(var29, var32)
    except BaseException:
        pass


def test_case_204():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'D.>\r{bA5\r'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1678.326133
        var28 = 'uL6n:(0+&aC'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = "vDd@H>&l8V'NKl@`(_44"
        var31 = module0.contains_unique_day(var28, var30)
        assert var31 is False
        var32 = 1104
        var33 = '0!(N+\tTrOU$Zk}'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = module0.unique_month(var38, var36)
        assert var39 is False
        var40 = ''
        var41 = '*B Am\nRb_#'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = 1104
        var44 = '0!(N+\tTrOU$Zk}'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = False
        var47 = module0.contains_unique_day(var46, var3)
    except BaseException:
        pass


def test_case_205():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'D.>\r{bA5\r'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = -3456
        var24 = 55.20562
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_206():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1678.326133
        var10 = 'uL6n:(0+&aC'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = module0.unique_day(var12, var12)
    except BaseException:
        pass


def test_case_207():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1678.326133
        var28 = 'uL6n:(0+&aC'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = module0.unique_month(var36, var34)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = True
        var42 = 'o1@,!$!-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = False
        var45 = 'bs6eVJ$-'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = ''
        var48 = '*B Am\nRb_#'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = False
        var51 = 305.497461
        var52 = module0.unique_month(var50, var51)
    except BaseException:
        pass


def test_case_208():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'S1\tn^q*c`"brQS=lhKS'
        var22 = "Z'T t\n?\\<IZ\n"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '\x0bP?%vd)V[jM\\Ks%dH'
        var25 = 'cg-7;s4|XB1A'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 1411.888
        var28 = 2574.61
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_209():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = '\x0bP?%vd)V[jM\\Ks%dH'
        var18 = 'cg-7;s4|XB1A'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = 'D.>\r{bA5\r'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.unique_day(var3, var1)
    except BaseException:
        pass


def test_case_210():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'S1\tn^q*c`"brQS=lhKS'
        var10 = "Z'T t\n?\\<IZ\n"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var25)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = "Q^NRc#'"
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = '\x0bP?%vd)V[jM\\Ks%dH'
        var36 = 'cg-7;s4|XB1A'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 1444.652389
        var42 = module0.contains_unique_day(var41, var41)
    except BaseException:
        pass


def test_case_211():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = 'D.>\r{bA5\r'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = False
        var29 = module0.unique_day(var27, var28)
    except BaseException:
        pass


def test_case_212():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\x0bP?%vd)V[jM\\Ks%dH'
        var13 = 'cg-7;s4|XB1A'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = module0.contains_unique_day(var9, var18)
    except BaseException:
        pass


def test_case_213():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = 'D.>\r{bA5\r'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -1678.326133
        var25 = 'uL6n:(0+&aC'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 2637.989653
        var28 = False
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_214():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 1104
        var21 = '0!(N+\tTrOU$Zk}'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = -1678.326133
        var24 = 'uL6n:(0+&aC'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = -433
        var27 = module0.contains_unique_day(var23, var26)
    except BaseException:
        pass


def test_case_215():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'gO^'
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_216():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "vDd@H>&l8V'NKl@`(_44"
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '|9d1]'
        var30 = 'D|kg\twl'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 687
        var33 = 'Y.)d\r|'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = 'o1@,!$!-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = 'bs6eVJ$-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = None
        var45 = 'D.>\r{bA5\r'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = -453
        var48 = module0.unique_month(var47, var32)
    except BaseException:
        pass


def test_case_217():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -2113.12
        var10 = -1750
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_218():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 688
        var16 = module0.unique_month(var15, var12)
    except BaseException:
        pass


def test_case_219():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 2515.336
        var13 = 'l\x0cR\x0b0\nTy7O%'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'D.>\r{bA5\r'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 687
        var31 = 'Y.)d\r|'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = module0.unique_month(var10, var30)
    except BaseException:
        pass


def test_case_220():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '*SQg/1#'
        var16 = -684.31
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_221():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'D.>\r{bA5\r'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1678.326133
        var22 = 'uL6n:(0+&aC'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = 'o1@,!$!-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = -1678.326133
        var31 = 'uL6n:(0+&aC'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = "vDd@H>&l8V'NKl@`(_44"
        var34 = module0.contains_unique_day(var31, var33)
        assert var34 is False
        var35 = 1104
        var36 = '0!(N+\tTrOU$Zk}'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = None
        var42 = module0.unique_month(var41, var39)
        assert var42 is False
        var43 = ''
        var44 = '*B Am\nRb_#'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = True
        var47 = "Q^NRc#'"
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = None
        var50 = True
        var51 = module0.unique_day(var49, var50)
    except BaseException:
        pass


def test_case_222():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'S1\tn^q*c`"brQS=lhKS'
        var19 = "Z'T t\n?\\<IZ\n"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -1678.326133
        var25 = 'uL6n:(0+&aC'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = "Q^NRc#'"
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = 'D.>\r{bA5\r'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 1104
        var37 = '0!(N+\tTrOU$Zk}'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = module0.unique_month(var42, var40)
        assert var43 is False
        var44 = -1678.326133
        var45 = 'uL6n:(0+&aC'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = "vDd@H>&l8V'NKl@`(_44"
        var48 = module0.contains_unique_day(var45, var47)
        assert var48 is False
        var49 = None
        var50 = module0.contains_unique_day(var49, var36)
    except BaseException:
        pass


def test_case_223():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2515.336
        var7 = 'l\x0cR\x0b0\nTy7O%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = module0.unique_day(var3, var9)
    except BaseException:
        pass


def test_case_224():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = '\x0bP?%vd)V[jM\\Ks%dH'
        var15 = 'cg-7;s4|XB1A'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = "Q^NRc#'"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 2515.336
        var24 = 'l\x0cR\x0b0\nTy7O%'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = None
        var28 = module0.unique_day(var26, var27)
    except BaseException:
        pass


def test_case_225():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1260.0
        var19 = 1192.3122
        var20 = module0.contains_unique_day(var18, var19)
    except BaseException:
        pass


def test_case_226():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = '\x0bP?%vd)V[jM\\Ks%dH'
        var15 = 'cg-7;s4|XB1A'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = module0.unique_day(var20, var14)
    except BaseException:
        pass


def test_case_227():
    try:
        var0 = None
        var1 = -337.70956
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_228():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'sz%K<5XMD7'
        var7 = False
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_229():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'bs6eVJ$-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1807.46675
        var28 = -2230
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_230():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = True
        var9 = "Q^NRc#'"
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 1104
        var12 = '0!(N+\tTrOU$Zk}'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = module0.unique_month(var17, var15)
        assert var18 is False
        var19 = 1104
        var20 = '0!(N+\tTrOU$Zk}'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = 'D.>\r{bA5\r'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = 'o1@,!$!-'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = False
        var32 = 'bs6eVJ$-'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = '|9d1]'
        var35 = 'D|kg\twl'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = -2080
        var38 = 'r'
        var39 = module0.unique_day(var37, var38)
    except BaseException:
        pass


def test_case_231():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 687
        var12 = 'Y.)d\r|'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1678.326133
        var15 = 'uL6n:(0+&aC'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = "Q^NRc#'"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 2515.336
        var24 = 'l\x0cR\x0b0\nTy7O%'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = module0.unique_day(var11, var26)
    except BaseException:
        pass


def test_case_232():
    try:
        var0 = -679.0
        var1 = 2267
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_233():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = module0.unique_month(var12, var15)
    except BaseException:
        pass


def test_case_234():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = 'D.>\r{bA5\r'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -1678.326133
        var25 = 'uL6n:(0+&aC'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 1104
        var28 = '0!(N+\tTrOU$Zk}'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = module0.unique_month(var33, var31)
        assert var34 is False
        var35 = -1678.326133
        var36 = 'uL6n:(0+&aC'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = "vDd@H>&l8V'NKl@`(_44"
        var39 = module0.contains_unique_day(var36, var38)
        assert var39 is False
        var40 = ''
        var41 = '*B Am\nRb_#'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = True
        var44 = "Q^NRc#'"
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = '\x0bP?%vd)V[jM\\Ks%dH'
        var47 = 'cg-7;s4|XB1A'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = '|9d1]'
        var50 = 'D|kg\twl'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = 'S1\tn^q*c`"brQS=lhKS'
        var53 = "Z'T t\n?\\<IZ\n"
        var54 = module0.unique_month(var52, var53)
        assert var54 is False
        var55 = 156.71
        var56 = module0.contains_unique_day(var16, var55)
    except BaseException:
        pass


def test_case_235():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 2515.336
        var19 = 'l\x0cR\x0b0\nTy7O%'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = True
        var37 = 'o1@,!$!-'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 1104
        var40 = '0!(N+\tTrOU$Zk}'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = -1678.326133
        var43 = 'uL6n:(0+&aC'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = '\x0bP?%vd)V[jM\\Ks%dH'
        var46 = 'cg-7;s4|XB1A'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = None
        var49 = module0.unique_day(var6, var48)
    except BaseException:
        pass


def test_case_236():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var19)
        assert var22 is False
        var23 = None
        var24 = 'D.>\r{bA5\r'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '\x0bP?%vd)V[jM\\Ks%dH'
        var27 = 'cg-7;s4|XB1A'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '9Gfek'
        var30 = 'B'
        var31 = module0.unique_day(var29, var30)
    except BaseException:
        pass


def test_case_237():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = 'Ou\tR\x0bZMXf~4%<Uou&'
        var21 = 924.2187
        var22 = module0.contains_unique_day(var20, var21)
    except BaseException:
        pass


def test_case_238():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '\x0bP?%vd)V[jM\\Ks%dH'
        var13 = 'cg-7;s4|XB1A'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = "Q^NRc#'"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = "Q^NRc#'"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 2515.336
        var31 = 'l\x0cR\x0b0\nTy7O%'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = True
        var37 = 'o1@,!$!-'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = False
        var40 = module0.unique_month(var39, var9)
    except BaseException:
        pass


def test_case_239():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'D.>\r{bA5\r'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = 'o1@,!$!-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '6PAq\x0cf='
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = '|9d1]'
        var37 = 'D|kg\twl'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = True
        var43 = 'o1@,!$!-'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = False
        var46 = 'bs6eVJ$-'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = False
        var49 = module0.unique_day(var48, var21)
    except BaseException:
        pass


def test_case_240():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var25)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = "Q^NRc#'"
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 2515.336
        var36 = 'l\x0cR\x0b0\nTy7O%'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 687
        var45 = 'Y.)d\r|'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = module0.unique_day(var0, var21)
    except BaseException:
        pass


def test_case_241():
    try:
        var0 = None
        var1 = -944
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_242():
    try:
        var0 = None
        var1 = -1983
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_243():
    try:
        var0 = False
        var1 = 1859
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_244():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'D.>\r{bA5\r'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = 'o1@,!$!-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 687
        var31 = 'Y.)d\r|'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = '|9d1]'
        var34 = 'D|kg\twl'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'F>Alm'
        var37 = '#&\n~P;;'
        var38 = module0.unique_day(var36, var37)
    except BaseException:
        pass


def test_case_245():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'p,f\nQ7\\\nKg\rk_Akx}'
        var10 = 3150.5946
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_246():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 2515.336
        var15 = 'l\x0cR\x0b0\nTy7O%'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 687
        var24 = 'Y.)d\r|'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = 'o1@,!$!-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = 'bs6eVJ$-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 1104
        var36 = '0!(N+\tTrOU$Zk}'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = True
        var42 = "Q^NRc#'"
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = 1640.2386
        var45 = module0.contains_unique_day(var35, var44)
    except BaseException:
        pass


def test_case_247():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = -1678.326133
        var9 = 'uL6n:(0+&aC'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 687
        var24 = 'Y.)d\r|'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = -439
        var27 = module0.unique_day(var26, var0)
    except BaseException:
        pass


def test_case_248():
    try:
        var0 = False
        var1 = -5038.0
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_249():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\x0bP?%vd)V[jM\\Ks%dH'
        var25 = 'cg-7;s4|XB1A'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 1104
        var28 = '0!(N+\tTrOU$Zk}'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = module0.unique_month(var33, var31)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'g;3oQY5.kHjT^Mey2/ '
        var39 = module0.unique_day(var38, var35)
    except BaseException:
        pass


def test_case_250():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'V&M[/lg'
        var7 = -2148
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_251():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var10)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = "vDd@H>&l8V'NKl@`(_44"
        var24 = module0.contains_unique_day(var21, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '|9d1]'
        var29 = 'D|kg\twl'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 687
        var32 = 'Y.)d\r|'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = True
        var38 = "Q^NRc#'"
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 2515.336
        var41 = 'l\x0cR\x0b0\nTy7O%'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = '|9d1]'
        var44 = 'D|kg\twl'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = ''
        var47 = '*B Am\nRb_#'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = True
        var50 = 'o1@,!$!-'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = -1029.01
        var53 = module0.unique_month(var40, var52)
    except BaseException:
        pass


def test_case_252():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '6PAq\x0cf='
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = module0.unique_month(var30, var28)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = True
        var36 = 'o1@,!$!-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '|9d1]'
        var39 = 'D|kg\twl'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'S1\tn^q*c`"brQS=lhKS'
        var42 = "Z'T t\n?\\<IZ\n"
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = None
        var45 = module0.unique_day(var18, var44)
    except BaseException:
        pass


def test_case_253():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = None
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_254():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = '\x0bP?%vd)V[jM\\Ks%dH'
        var12 = 'cg-7;s4|XB1A'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -735
        var15 = True
        var16 = module0.unique_day(var14, var15)
    except BaseException:
        pass


def test_case_255():
    try:
        var0 = '#*.~5m9EOTI!'
        var1 = -2359
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_256():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var19)
        assert var22 is False
        var23 = -1678.326133
        var24 = 'uL6n:(0+&aC'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = "vDd@H>&l8V'NKl@`(_44"
        var27 = module0.contains_unique_day(var24, var26)
        assert var27 is False
        var28 = '\x0bP?%vd)V[jM\\Ks%dH'
        var29 = 'cg-7;s4|XB1A'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = ',+!?M91`7PDe2)'
        var32 = module0.unique_day(var23, var31)
    except BaseException:
        pass


def test_case_257():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '6PAq\x0cf='
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1678.326133
        var31 = 'uL6n:(0+&aC'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = "vDd@H>&l8V'NKl@`(_44"
        var34 = module0.contains_unique_day(var31, var33)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'S1\tn^q*c`"brQS=lhKS'
        var39 = "Z'T t\n?\\<IZ\n"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = 'i$S8nF5'
        var42 = module0.contains_unique_day(var41, var15)
    except BaseException:
        pass


def test_case_258():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = False
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_259():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = 1104
        var12 = '0!(N+\tTrOU$Zk}'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = module0.unique_month(var17, var15)
        assert var18 is False
        var19 = ''
        var20 = '*B Am\nRb_#'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = '|9d1]'
        var23 = 'D|kg\twl'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 687
        var26 = 'Y.)d\r|'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = ''
        var29 = '*B Am\nRb_#'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = True
        var32 = 'o1@,!$!-'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = False
        var35 = 'bs6eVJ$-'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = ''
        var38 = '*B Am\nRb_#'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = True
        var41 = 'o1@,!$!-'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = ''
        var44 = '*B Am\nRb_#'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = '|9d1]'
        var47 = 'D|kg\twl'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = None
        var50 = 'D.>\r{bA5\r'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = False
        var53 = module0.contains_unique_day(var52, var31)
    except BaseException:
        pass


def test_case_260():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 'ii1t}:S_O<Hh,lM(`'
        var6 = module0.unique_day(var5, var0)
    except BaseException:
        pass


def test_case_261():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = True
        var9 = "Q^NRc#'"
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 1104
        var12 = '0!(N+\tTrOU$Zk}'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '4!egmj@wx~\tI3<!%'
        var16 = module0.unique_day(var14, var15)
    except BaseException:
        pass


def test_case_262():
    try:
        var0 = False
        var1 = -120
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_263():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = 'o1@,!$!-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = 'bs6eVJ$-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 687
        var30 = 'Y.)d\r|'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = '\x0bP?%vd)V[jM\\Ks%dH'
        var33 = 'cg-7;s4|XB1A'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'S1\tn^q*c`"brQS=lhKS'
        var39 = "Z'T t\n?\\<IZ\n"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = False
        var42 = '6PAq\x0cf='
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = -1678.326133
        var45 = 'uL6n:(0+&aC'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = "vDd@H>&l8V'NKl@`(_44"
        var48 = module0.contains_unique_day(var45, var47)
        assert var48 is False
        var49 = -395
        var50 = -2311
        var51 = module0.contains_unique_day(var49, var50)
    except BaseException:
        pass


def test_case_264():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '6PAq\x0cf='
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = 'D.>\r{bA5\r'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.contains_unique_day(var27, var24)
    except BaseException:
        pass


def test_case_265():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'S1\tn^q*c`"brQS=lhKS'
        var10 = "Z'T t\n?\\<IZ\n"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = module0.contains_unique_day(var1, var0)
    except BaseException:
        pass


def test_case_266():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 1104
        var25 = '0!(N+\tTrOU$Zk}'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = module0.unique_month(var30, var28)
        assert var31 is False
        var32 = -1678.326133
        var33 = 'uL6n:(0+&aC'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = "vDd@H>&l8V'NKl@`(_44"
        var36 = module0.contains_unique_day(var33, var35)
        assert var36 is False
        var37 = '|9d1]'
        var38 = 'D|kg\twl'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 'S1\tn^q*c`"brQS=lhKS'
        var41 = "Z'T t\n?\\<IZ\n"
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = -1678.326133
        var44 = 'uL6n:(0+&aC'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = False
        var47 = '6PAq\x0cf='
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = 408
        var50 = False
        var51 = module0.unique_month(var49, var50)
    except BaseException:
        pass


def test_case_267():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1819
        var16 = module0.unique_day(var3, var15)
    except BaseException:
        pass


def test_case_268():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '6PAq\x0cf='
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = module0.unique_month(var24, var22)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = "Q^NRc#'"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = 'D.>\r{bA5\r'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '|9d1]'
        var39 = 'D|kg\twl'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 687
        var42 = 'Y.)d\r|'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = None
        var45 = False
        var46 = module0.unique_month(var44, var45)
    except BaseException:
        pass


def test_case_269():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'D.>\r{bA5\r'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'AXJ6H;WYaL95/+g!+?#'
        var13 = False
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_270():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'S1\tn^q*c`"brQS=lhKS'
        var15 = "Z'T t\n?\\<IZ\n"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 1104
        var21 = '0!(N+\tTrOU$Zk}'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = module0.unique_month(var26, var24)
        assert var27 is False
        var28 = ''
        var29 = '*B Am\nRb_#'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = True
        var32 = "Q^NRc#'"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 2515.336
        var35 = 'l\x0cR\x0b0\nTy7O%'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = ''
        var38 = '*B Am\nRb_#'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = True
        var41 = 'o1@,!$!-'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = False
        var44 = 'bs6eVJ$-'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = None
        var47 = 'D.>\r{bA5\r'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = ''
        var50 = '*B Am\nRb_#'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = '|9d1]'
        var53 = 'D|kg\twl'
        var54 = module0.contains_unique_day(var52, var53)
        assert var54 is False
        var55 = 687
        var56 = 'Y.)d\r|'
        var57 = module0.unique_month(var55, var56)
        assert var57 is False
        var58 = module0.unique_day(var6, var17)
    except BaseException:
        pass


def test_case_271():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '}'
        var10 = module0.unique_day(var9, var6)
    except BaseException:
        pass


def test_case_272():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 687
        var18 = 'Y.)d\r|'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = 'o1@,!$!-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = 'bs6eVJ$-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '\x0bP?%vd)V[jM\\Ks%dH'
        var33 = 'cg-7;s4|XB1A'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = "Q^NRc#'"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = 2515.336
        var42 = 'l\x0cR\x0b0\nTy7O%'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = '6PAq\x0cf='
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = '|9d1]'
        var48 = 'D|kg\twl'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = 'S1\tn^q*c`"brQS=lhKS'
        var51 = "Z'T t\n?\\<IZ\n"
        var52 = module0.unique_month(var50, var51)
        assert var52 is False
        var53 = -2100.6
        var54 = module0.unique_month(var53, var38)
    except BaseException:
        pass


def test_case_273():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'S1\tn^q*c`"brQS=lhKS'
        var12 = "Z'T t\n?\\<IZ\n"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = 'o1@,!$!-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = 'bs6eVJ$-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = '6PAq\x0cf='
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = "Q^NRc#'"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 2515.336
        var33 = 'l\x0cR\x0b0\nTy7O%'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '|9d1]'
        var39 = 'D|kg\twl'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 687
        var42 = 'Y.)d\r|'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = '_b'
        var45 = 2632
        var46 = module0.unique_day(var44, var45)
    except BaseException:
        pass


def test_case_274():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1678.326133
        var10 = 'uL6n:(0+&aC'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = "vDd@H>&l8V'NKl@`(_44"
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = False
        var15 = '6PAq\x0cf='
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = '\x0bBG2"rPGk5=zP|>N9yn'
        var18 = -1696.0
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_275():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = 'D.>\r{bA5\r'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'S1\tn^q*c`"brQS=lhKS'
        var28 = "Z'T t\n?\\<IZ\n"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = ''
        var34 = '*B Am\nRb_#'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = module0.unique_month(var36, var34)
        assert var37 is False
        var38 = False
        var39 = '6PAq\x0cf='
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = ''
        var42 = '*B Am\nRb_#'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = None
        var45 = module0.contains_unique_day(var44, var18)
    except BaseException:
        pass


def test_case_276():
    try:
        var0 = 1404
        var1 = 2922.313073
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_277():
    try:
        var0 = False
        var1 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_278():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '6PAq\x0cf='
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = 'D.>\r{bA5\r'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "vDd@H>&l8V'NKl@`(_44"
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = "Q^NRc#'"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 1119
        var30 = module0.unique_day(var29, var12)
    except BaseException:
        pass


def test_case_279():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '6PAq\x0cf='
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'E@_JK;'
        var10 = module0.unique_day(var4, var9)
    except BaseException:
        pass


def test_case_280():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'S1\tn^q*c`"brQS=lhKS'
        var12 = "Z'T t\n?\\<IZ\n"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -3293
        var15 = 'yx+_'
        var16 = module0.unique_day(var14, var15)
    except BaseException:
        pass


def test_case_281():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = 1104
        var18 = '0!(N+\tTrOU$Zk}'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = "Q^NRc#'"
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 2515.336
        var27 = 'l\x0cR\x0b0\nTy7O%'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = module0.unique_month(var17, var17)
    except BaseException:
        pass


def test_case_282():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = 'D.>\r{bA5\r'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '"iA'
        var22 = 'WF>jknqov? eq\x0c:n){^'
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_283():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "vDd@H>&l8V'NKl@`(_44"
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = 713.28
        var24 = False
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_284():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '6PAq\x0cf='
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = "Q^NRc#'"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 2515.336
        var31 = 'l\x0cR\x0b0\nTy7O%'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 1104
        var34 = '0!(N+\tTrOU$Zk}'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = ''
        var37 = '*B Am\nRb_#'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = None
        var40 = module0.unique_month(var39, var37)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 'S1\tn^q*c`"brQS=lhKS'
        var45 = "Z'T t\n?\\<IZ\n"
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = "r43nKU/'eHIh'#3\tD"
        var48 = None
        var49 = module0.contains_unique_day(var47, var48)
    except BaseException:
        pass


def test_case_285():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = -1678.326133
        var6 = 'uL6n:(0+&aC'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 687
        var15 = 'Y.)d\r|'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '6PAq\x0cf='
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '\x0bP?%vd)V[jM\\Ks%dH'
        var24 = 'cg-7;s4|XB1A'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = 'o1@,!$!-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = 'bs6eVJ$-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = 'o1@,!$!-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '|9d1]'
        var42 = 'D|kg\twl'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 'S1\tn^q*c`"brQS=lhKS'
        var45 = "Z'T t\n?\\<IZ\n"
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = False
        var48 = module0.contains_unique_day(var14, var47)
    except BaseException:
        pass


def test_case_286():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = "vDd@H>&l8V'NKl@`(_44"
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 687
        var18 = 'Y.)d\r|'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = 'o1@,!$!-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = module0.unique_month(var3, var17)
    except BaseException:
        pass


def test_case_287():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = "vDd@H>&l8V'NKl@`(_44"
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = 'o1@,!$!-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '/#'
        var27 = -1164
        var28 = module0.unique_day(var26, var27)
    except BaseException:
        pass


def test_case_288():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = "5d!['+\x0c3:cQ$[WDs):xY"
        var16 = -3334.297
        var17 = module0.unique_month(var15, var16)
    except BaseException:
        pass


def test_case_289():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '6PAq\x0cf='
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 2515.336
        var22 = 'l\x0cR\x0b0\nTy7O%'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = 'D.>\r{bA5\r'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '|9d1]'
        var31 = 'D|kg\twl'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 687
        var34 = 'Y.)d\r|'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = ''
        var37 = '*B Am\nRb_#'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = True
        var43 = "Q^NRc#'"
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = module0.unique_month(var24, var33)
    except BaseException:
        pass


def test_case_290():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = 'D.>\r{bA5\r'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = "vDd@H>&l8V'NKl@`(_44"
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = 832.30397
        var21 = 622.47001
        var22 = module0.unique_day(var20, var21)
    except BaseException:
        pass


def test_case_291():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = 'bs6eVJ$-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = 'D.>\r{bA5\r'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'S1\tn^q*c`"brQS=lhKS'
        var31 = "Z'T t\n?\\<IZ\n"
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -1678.326133
        var34 = 'uL6n:(0+&aC'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = "vDd@H>&l8V'NKl@`(_44"
        var37 = module0.contains_unique_day(var34, var36)
        assert var37 is False
        var38 = 1104
        var39 = '0!(N+\tTrOU$Zk}'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = ''
        var42 = '*B Am\nRb_#'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = None
        var45 = module0.unique_month(var44, var42)
        assert var45 is False
        var46 = '3EWE$*f$'
        var47 = -445.0
        var48 = module0.unique_month(var46, var47)
    except BaseException:
        pass


def test_case_292():
    try:
        var0 = 'W18\x0b;'
        var1 = -1185
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_293():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'D.>\r{bA5\r'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var4, var9)
    except BaseException:
        pass


def test_case_294():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = '|9d1]'
        var6 = 'D|kg\twl'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = module0.unique_month(var0, var8)
    except BaseException:
        pass


def test_case_295():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = -4928
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_296():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'S1\tn^q*c`"brQS=lhKS'
        var25 = "Z'T t\n?\\<IZ\n"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = module0.unique_day(var12, var27)
    except BaseException:
        pass


def test_case_297():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 2515.336
        var15 = 'l\x0cR\x0b0\nTy7O%'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 1104
        var18 = '0!(N+\tTrOU$Zk}'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'S1\tn^q*c`"brQS=lhKS'
        var24 = "Z'T t\n?\\<IZ\n"
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '6PAq\x0cf='
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 637
        var39 = False
        var40 = module0.contains_unique_day(var38, var39)
    except BaseException:
        pass


def test_case_298():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'D.>\r{bA5\r'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '6PAq\x0cf='
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = "Q^NRc#'"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 2515.336
        var19 = 'l\x0cR\x0b0\nTy7O%'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'S1\tn^q*c`"brQS=lhKS'
        var25 = "Z'T t\n?\\<IZ\n"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 1104
        var28 = '0!(N+\tTrOU$Zk}'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 1766
        var31 = module0.unique_month(var18, var30)
    except BaseException:
        pass


def test_case_299():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = False
        var9 = '6PAq\x0cf='
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 2515.336
        var18 = 'l\x0cR\x0b0\nTy7O%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 1104
        var21 = '0!(N+\tTrOU$Zk}'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = 'D.>\r{bA5\r'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = "Q^NRc#'"
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = 'o1@,!$!-'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = 'bs6eVJ$-'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = ''
        var45 = '*B Am\nRb_#'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = '\x0bP?%vd)V[jM\\Ks%dH'
        var48 = 'cg-7;s4|XB1A'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = -1956.0
        var51 = True
        var52 = module0.unique_day(var50, var51)
    except BaseException:
        pass


def test_case_300():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'S1\tn^q*c`"brQS=lhKS'
        var12 = "Z'T t\n?\\<IZ\n"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1678.326133
        var15 = 'uL6n:(0+&aC'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = "vDd@H>&l8V'NKl@`(_44"
        var18 = module0.contains_unique_day(var15, var17)
        assert var18 is False
        var19 = None
        var20 = 'D.>\r{bA5\r'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = ''
        var23 = '*B Am\nRb_#'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '|9d1]'
        var26 = 'D|kg\twl'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 687
        var29 = 'Y.)d\r|'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = '|9d1]'
        var32 = 'D|kg\twl'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = '\x0bP?%vd)V[jM\\Ks%dH'
        var35 = 'cg-7;s4|XB1A'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = False
        var38 = '6PAq\x0cf='
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = -3615.4099
        var41 = module0.unique_month(var40, var0)
    except BaseException:
        pass


def test_case_301():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = module0.contains_unique_day(var3, var0)
    except BaseException:
        pass


def test_case_302():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = '\x0bP?%vd)V[jM\\Ks%dH'
        var6 = 'cg-7;s4|XB1A'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '|9d1]'
        var18 = 'D|kg\twl'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 687
        var21 = 'Y.)d\r|'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = '6PAq\x0cf='
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = 'D.>\r{bA5\r'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -3846
        var30 = module0.contains_unique_day(var15, var29)
    except BaseException:
        pass


def test_case_303():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = "vDd@H>&l8V'NKl@`(_44"
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = "Q^NRc#'"
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 2515.336
        var27 = 'l\x0cR\x0b0\nTy7O%'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = True
        var31 = module0.contains_unique_day(var29, var30)
    except BaseException:
        pass


def test_case_304():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = "vDd@H>&l8V'NKl@`(_44"
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = -1011.4774
        var12 = 'DGqY"f|Lo\\gn;V{Y0'
        var13 = module0.unique_day(var11, var12)
    except BaseException:
        pass


def test_case_305():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '6PAq\x0cf='
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = 1807
        var18 = module0.unique_month(var17, var3)
    except BaseException:
        pass


def test_case_306():
    try:
        var0 = '<_XB$Bqrn3HCe>a-V}a"'
        var1 = 3117.0
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_307():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'o1@,!$!-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -2973.656657
        var19 = module0.unique_day(var18, var3)
    except BaseException:
        pass


def test_case_308():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 2515.336
        var10 = 'l\x0cR\x0b0\nTy7O%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 687
        var19 = 'Y.)d\r|'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '.heGE\t)g":fVc5U'
        var22 = module0.contains_unique_day(var21, var9)
    except BaseException:
        pass


def test_case_309():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = 'bs6eVJ$-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '\x0bP?%vd)V[jM\\Ks%dH'
        var31 = 'cg-7;s4|XB1A'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -1548.087
        var34 = "\n8hQ.1&,,En'#"
        var35 = module0.unique_day(var33, var34)
    except BaseException:
        pass


def test_case_310():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var12)
    except BaseException:
        pass


def test_case_311():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 1104
        var6 = '0!(N+\tTrOU$Zk}'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = "Q^NRc#'"
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 2515.336
        var21 = 'l\x0cR\x0b0\nTy7O%'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = '6PAq\x0cf='
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = 'o1@,!$!-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = 'bs6eVJ$-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '}es;|~T\x0cyk'
        var36 = 647.58342
        var37 = module0.unique_month(var35, var36)
    except BaseException:
        pass


def test_case_312():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 2515.336
        var18 = 'l\x0cR\x0b0\nTy7O%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = "vDd@H>&l8V'NKl@`(_44"
        var24 = module0.contains_unique_day(var21, var23)
        assert var24 is False
        var25 = None
        var26 = 'D.>\r{bA5\r'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\x0bP?%vd)V[jM\\Ks%dH'
        var29 = 'cg-7;s4|XB1A'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 1104
        var32 = '0!(N+\tTrOU$Zk}'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = True
        var35 = module0.contains_unique_day(var17, var34)
    except BaseException:
        pass


def test_case_313():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = -1678.326133
        var6 = 'uL6n:(0+&aC'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 1104
        var9 = '0!(N+\tTrOU$Zk}'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '\x0bP?%vd)V[jM\\Ks%dH'
        var12 = 'cg-7;s4|XB1A'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = 'D.>\r{bA5\r'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '|9d1]'
        var24 = 'D|kg\twl'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'S1\tn^q*c`"brQS=lhKS'
        var27 = "Z'T t\n?\\<IZ\n"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '|9d1]'
        var33 = 'D|kg\twl'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 687
        var36 = 'Y.)d\r|'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = 'a[R\x0b/K\rOO9yRB'
        var39 = module0.unique_day(var35, var38)
    except BaseException:
        pass


def test_case_314():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'e/%tF/gi&~Qx'
        var13 = module0.contains_unique_day(var12, var12)
        assert var13 is False
        var14 = -1678.326133
        var15 = 'uL6n:(0+&aC'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = "vDd@H>&l8V'NKl@`(_44"
        var18 = module0.contains_unique_day(var15, var17)
        assert var18 is False
        var19 = ''
        var20 = '*B Am\nRb_#'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = True
        var23 = 'o1@,!$!-'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = -1678.326133
        var26 = 'uL6n:(0+&aC'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = ''
        var29 = '*B Am\nRb_#'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = True
        var32 = 'o1@,!$!-'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = False
        var35 = 'bs6eVJ$-'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 1104
        var38 = '0!(N+\tTrOU$Zk}'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = ''
        var41 = '*B Am\nRb_#'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = None
        var44 = module0.unique_month(var43, var41)
        assert var44 is False
        var45 = ''
        var46 = '*B Am\nRb_#'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = module0.unique_month(var29, var43)
    except BaseException:
        pass


def test_case_315():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'e/%tF/gi&~Qx'
        var21 = module0.contains_unique_day(var20, var20)
        assert var21 is False
        var22 = ''
        var23 = '*B Am\nRb_#'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = True
        var26 = 'o1@,!$!-'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = module0.contains_unique_day(var28, var9)
    except BaseException:
        pass


def test_case_316():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1678.326133
        var16 = 'uL6n:(0+&aC'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = "vDd@H>&l8V'NKl@`(_44"
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = None
        var21 = module0.contains_unique_day(var0, var20)
    except BaseException:
        pass


def test_case_317():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '|9d1]'
        var9 = 'D|kg\twl'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 687
        var12 = 'Y.)d\r|'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -3210
        var15 = True
        var16 = module0.unique_month(var14, var15)
    except BaseException:
        pass


def test_case_318():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 290
        var7 = ",VD\x0b'LIMSM6|z1="
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = module0.unique_month(var24, var22)
        assert var25 is False
        var26 = 2207.6
        var27 = module0.contains_unique_day(var18, var26)
    except BaseException:
        pass


def test_case_319():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '|9d1]'
        var28 = 'D|kg\twl'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 687
        var31 = 'Y.)d\r|'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = 'D.>\r{bA5\r'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = -1678.326133
        var37 = 'uL6n:(0+&aC'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '|9d1]'
        var40 = 'D|kg\twl'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = 290
        var43 = ",VD\x0b'LIMSM6|z1="
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = '|9d1]'
        var46 = 'D|kg\twl'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = 'S1\tn^q*c`"brQS=lhKS'
        var49 = "Z'T t\n?\\<IZ\n"
        var50 = module0.unique_month(var48, var49)
        assert var50 is False
        var51 = -2587
        var52 = module0.contains_unique_day(var10, var51)
    except BaseException:
        pass


def test_case_320():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '}QfA'
        var19 = module0.unique_month(var18, var18)
        assert var19 is False
        var20 = None
        var21 = module0.unique_day(var20, var6)
    except BaseException:
        pass


def test_case_321():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'h\x0cYAA  '
        var16 = False
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_322():
    try:
        var0 = '}QfA'
        var1 = module0.unique_month(var0, var0)
        assert var1 is False
        var2 = '\x0bP?%vd)V[jM\\Ks%dH'
        var3 = 'cg-7;s4|XB1A'
        var4 = module0.unique_month(var2, var3)
        assert var4 is False
        var5 = -29.9207
        var6 = module0.contains_unique_day(var5, var5)
    except BaseException:
        pass


def test_case_323():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = 1104
        var18 = '0!(N+\tTrOU$Zk}'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '|9d1]'
        var24 = 'D|kg\twl'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 290
        var27 = ",VD\x0b'LIMSM6|z1="
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = module0.contains_unique_day(var17, var17)
    except BaseException:
        pass


def test_case_324():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = None
        var9 = 'D.>\r{bA5\r'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'e/%tF/gi&~Qx'
        var15 = module0.contains_unique_day(var14, var14)
        assert var15 is False
        var16 = -1678.326133
        var17 = 'uL6n:(0+&aC'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = ''
        var20 = '*B Am\nRb_#'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = ''
        var23 = '*B Am\nRb_#'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '|9d1]'
        var26 = 'D|kg\twl'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 687
        var29 = 'Y.)d\r|'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = '|9d1]'
        var32 = 'D|kg\twl'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'S1\tn^q*c`"brQS=lhKS'
        var35 = "Z'T t\n?\\<IZ\n"
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -1678.326133
        var38 = 'uL6n:(0+&aC'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = '|9d1]'
        var41 = 'D|kg\twl'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = 290
        var44 = ",VD\x0b'LIMSM6|z1="
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = '|9d1]'
        var47 = 'D|kg\twl'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = '}QfA'
        var50 = module0.unique_month(var49, var49)
        assert var50 is False
        var51 = -847.0
        var52 = module0.contains_unique_day(var51, var6)
    except BaseException:
        pass


def test_case_325():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '}QfA'
        var16 = module0.unique_month(var15, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = "Q^NRc#'"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '\x0bP?%vd)V[jM\\Ks%dH'
        var30 = 'cg-7;s4|XB1A'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = module0.unique_month(var6, var6)
    except BaseException:
        pass


def test_case_326():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '3w/'
        var10 = None
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_327():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -2626
        var7 = False
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_328():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'S1\tn^q*c`"brQS=lhKS'
        var13 = "Z'T t\n?\\<IZ\n"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'D.>\r{bA5\r'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'e/%tF/gi&~Qx'
        var22 = module0.contains_unique_day(var21, var21)
        assert var22 is False
        var23 = False
        var24 = '6PAq\x0cf='
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -1678.326133
        var30 = 'uL6n:(0+&aC'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = module0.unique_month(var32, var23)
    except BaseException:
        pass


def test_case_329():
    try:
        var0 = '>ZG'
        var1 = module0.unique_day(var0, var0)
    except BaseException:
        pass


def test_case_330():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 2515.336
        var10 = 'l\x0cR\x0b0\nTy7O%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 290
        var19 = ",VD\x0b'LIMSM6|z1="
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 687
        var28 = 'Y.)d\r|'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 1104
        var31 = '0!(N+\tTrOU$Zk}'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = module0.unique_month(var6, var18)
    except BaseException:
        pass


def test_case_331():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'bs6eVJ$-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'D.>\r{bA5\r'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = "Q^NRc#'"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = 'o1@,!$!-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '|9d1]'
        var31 = 'D|kg\twl'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 'S1\tn^q*c`"brQS=lhKS'
        var34 = "Z'T t\n?\\<IZ\n"
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 1104
        var37 = '0!(N+\tTrOU$Zk}'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = module0.unique_month(var42, var40)
        assert var43 is False
        var44 = None
        var45 = module0.contains_unique_day(var44, var27)
    except BaseException:
        pass


def test_case_332():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '6PAq\x0cf='
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'D.>\r{bA5\r'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'e/%tF/gi&~Qx'
        var22 = module0.contains_unique_day(var21, var21)
        assert var22 is False
        var23 = '{\r<)SR d?1'
        var24 = module0.contains_unique_day(var23, var15)
    except BaseException:
        pass


def test_case_333():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = True
        var9 = 'o1@,!$!-'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = False
        var12 = 'bs6eVJ$-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'e/%tF/gi&~Qx'
        var21 = module0.contains_unique_day(var20, var20)
        assert var21 is False
        var22 = ''
        var23 = '*B Am\nRb_#'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = True
        var26 = "Q^NRc#'"
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = '|9d1]'
        var29 = 'D|kg\twl'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'S1\tn^q*c`"brQS=lhKS'
        var32 = "Z'T t\n?\\<IZ\n"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = ''
        var38 = '*B Am\nRb_#'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = True
        var41 = "Q^NRc#'"
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = 2515.336
        var44 = 'l\x0cR\x0b0\nTy7O%'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = None
        var47 = 'D.>\r{bA5\r'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = 1104
        var50 = '0!(N+\tTrOU$Zk}'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = ''
        var53 = '*B Am\nRb_#'
        var54 = module0.contains_unique_day(var52, var53)
        assert var54 is False
        var55 = None
        var56 = module0.unique_month(var55, var53)
        assert var56 is False
        var57 = 1923.2
        var58 = -2789.4485
        var59 = module0.unique_month(var57, var58)
    except BaseException:
        pass


def test_case_334():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'e/%tF/gi&~Qx'
        var12 = module0.contains_unique_day(var11, var11)
        assert var12 is False
        var13 = 1104
        var14 = '0!(N+\tTrOU$Zk}'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = None
        var17 = -3171.7218
        var18 = module0.unique_month(var16, var17)
    except BaseException:
        pass


def test_case_335():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 894.199217
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_336():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'v1z'
        var7 = True
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_337():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '}QfA'
        var7 = module0.unique_month(var6, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 2515.336
        var15 = 'l\x0cR\x0b0\nTy7O%'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'D.>\r{bA5\r'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = -1678.326133
        var24 = 'uL6n:(0+&aC'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 290
        var30 = ",VD\x0b'LIMSM6|z1="
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'A*!'
        var33 = None
        var34 = module0.unique_day(var32, var33)
    except BaseException:
        pass


def test_case_338():
    try:
        var0 = "CH3'{Kbe_w:sG-j%(Pw\\"
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_339():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = 1104
        var6 = '0!(N+\tTrOU$Zk}'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '6PAq\x0cf='
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = '5?:%M:8H<lDol^0'
        var18 = 297.583255
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_340():
    try:
        var0 = '#kN}?+C^v3%c@LXD'
        var1 = 1794
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_341():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 2515.336
        var10 = 'l\x0cR\x0b0\nTy7O%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'e/%tF/gi&~Qx'
        var22 = module0.contains_unique_day(var21, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = "Q^NRc#'"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '+?/6\x0c h`8xLD[H'
        var30 = module0.unique_day(var0, var29)
    except BaseException:
        pass


def test_case_342():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'wPs\\TfL.5rrd\x0czh,N'
        var4 = 1221.741622
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_343():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 687
        var13 = 'Y.)d\r|'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = "Q^NRc#'"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -780.262
        var28 = module0.unique_month(var21, var27)
    except BaseException:
        pass


def test_case_344():
    try:
        var0 = '\x0bP?%vd)V[jM\\Ks%dH'
        var1 = 'cg-7;s4|XB1A'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 1104
        var10 = '0!(N+\tTrOU$Zk}'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = module0.unique_month(var15, var13)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = 'bs6eVJ$-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '|9d1]'
        var30 = 'D|kg\twl'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 687
        var33 = 'Y.)d\r|'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'qt'
        var36 = 'rv\\7>'
        var37 = module0.unique_day(var35, var36)
    except BaseException:
        pass


def test_case_345():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 4328
        var10 = -2498
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_346():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = '}QfA'
        var6 = module0.unique_month(var5, var5)
        assert var6 is False
        var7 = ''
        var8 = '*B Am\nRb_#'
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = '|9d1]'
        var11 = 'D|kg\twl'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = 687
        var14 = 'Y.)d\r|'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = ''
        var17 = '*B Am\nRb_#'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = True
        var20 = 'o1@,!$!-'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = False
        var23 = 'bs6eVJ$-'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = '6PAq\x0cf='
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = '|9d1]'
        var29 = 'D|kg\twl'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'S1\tn^q*c`"brQS=lhKS'
        var32 = "Z'T t\n?\\<IZ\n"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -1678.326133
        var35 = 'uL6n:(0+&aC'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = "vDd@H>&l8V'NKl@`(_44"
        var38 = module0.contains_unique_day(var35, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = True
        var43 = "Q^NRc#'"
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = '\x0bP?%vd)V[jM\\Ks%dH'
        var46 = 'cg-7;s4|XB1A'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = ''
        var49 = '*B Am\nRb_#'
        var50 = module0.contains_unique_day(var48, var49)
        assert var50 is False
        var51 = True
        var52 = "Q^NRc#'"
        var53 = module0.unique_month(var51, var52)
        assert var53 is False
        var54 = 2515.336
        var55 = 'l\x0cR\x0b0\nTy7O%'
        var56 = module0.unique_month(var54, var55)
        assert var56 is False
        var57 = module0.unique_month(var42, var13)
    except BaseException:
        pass


def test_case_347():
    try:
        var0 = '}QfA'
        var1 = module0.unique_month(var0, var0)
        assert var1 is False
        var2 = None
        var3 = 'D.>\r{bA5\r'
        var4 = module0.contains_unique_day(var2, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = False
        var9 = '6PAq\x0cf='
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -1678.326133
        var12 = 'uL6n:(0+&aC'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = module0.contains_unique_day(var2, var14)
    except BaseException:
        pass


def test_case_348():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = "vDd@H>&l8V'NKl@`(_44"
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = 'bs6eVJ$-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '\x0bP?%vd)V[jM\\Ks%dH'
        var18 = 'cg-7;s4|XB1A'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '|9d1]'
        var24 = 'D|kg\twl'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'S1\tn^q*c`"brQS=lhKS'
        var27 = "Z'T t\n?\\<IZ\n"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -989
        var30 = module0.unique_month(var12, var29)
    except BaseException:
        pass


def test_case_349():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1678.326133
        var10 = 'uL6n:(0+&aC'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 290
        var16 = ",VD\x0b'LIMSM6|z1="
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = "Q^NRc#'"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 2515.336
        var25 = 'l\x0cR\x0b0\nTy7O%'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.contains_unique_day(var0, var27)
    except BaseException:
        pass


def test_case_350():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 687
        var7 = 'Y.)d\r|'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '}QfA'
        var13 = module0.unique_month(var12, var12)
        assert var13 is False
        var14 = 'Lwt#^Vv'
        var15 = 1781
        var16 = module0.unique_month(var14, var15)
    except BaseException:
        pass


def test_case_351():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '}QfA'
        var7 = module0.unique_month(var6, var6)
        assert var7 is False
        var8 = -1678.326133
        var9 = 'uL6n:(0+&aC'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = "vDd@H>&l8V'NKl@`(_44"
        var12 = module0.contains_unique_day(var9, var11)
        assert var12 is False
        var13 = 1104
        var14 = '0!(N+\tTrOU$Zk}'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = ''
        var17 = '*B Am\nRb_#'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = True
        var20 = 'o1@,!$!-'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = False
        var23 = '6PAq\x0cf='
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = "Q^NRc#'"
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 2515.336
        var32 = 'l\x0cR\x0b0\nTy7O%'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 3682.86
        var35 = module0.unique_day(var13, var34)
    except BaseException:
        pass


def test_case_352():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'DJu\x0b#'
        var10 = module0.contains_unique_day(var9, var6)
    except BaseException:
        pass


def test_case_353():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 'o1@,!$!-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = 'D.>\r{bA5\r'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '}QfA'
        var28 = module0.unique_month(var27, var27)
        assert var28 is False
        var29 = 'kp5'
        var30 = module0.unique_day(var29, var12)
    except BaseException:
        pass


def test_case_354():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var7 = module0.unique_month(var6, var1)
        assert var7 is False
        var8 = '\x0bP?%vd)V[jM\\Ks%dH'
        var9 = 'cg-7;s4|XB1A'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '6PAq\x0cf='
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'e/%tF/gi&~Qx'
        var18 = module0.contains_unique_day(var17, var17)
        assert var18 is False
        var19 = ''
        var20 = '*B Am\nRb_#'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = True
        var23 = 'o1@,!$!-'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = 'bs6eVJ$-'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = -1678.326133
        var29 = 'uL6n:(0+&aC'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = '|9d1]'
        var32 = 'D|kg\twl'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 290
        var35 = ",VD\x0b'LIMSM6|z1="
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '|9d1]'
        var38 = 'D|kg\twl'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 1104
        var41 = '0!(N+\tTrOU$Zk}'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = module0.contains_unique_day(var20, var34)
    except BaseException:
        pass


def test_case_355():
    try:
        var0 = None
        var1 = 'D.>\r{bA5\r'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = True
        var10 = -66.294741
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_356():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'e/%tF/gi&~Qx'
        var21 = module0.contains_unique_day(var20, var20)
        assert var21 is False
        var22 = 'd&.bF+C48PU'
        var23 = module0.unique_day(var3, var22)
    except BaseException:
        pass


def test_case_357():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var7 = module0.unique_month(var6, var1)
        assert var7 is False
        var8 = '\x0bP?%vd)V[jM\\Ks%dH'
        var9 = 'cg-7;s4|XB1A'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = 'D.>\r{bA5\r'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'i6p1,(.aU"g*"y)2te6F'
        var15 = module0.unique_month(var14, var3)
    except BaseException:
        pass


def test_case_358():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = None
        var6 = 'D.>\r{bA5\r'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = -1678.326133
        var15 = 'uL6n:(0+&aC'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '|9d1]'
        var18 = 'D|kg\twl'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 290
        var21 = ",VD\x0b'LIMSM6|z1="
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '|9d1]'
        var27 = 'D|kg\twl'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 687
        var30 = 'Y.)d\r|'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = module0.contains_unique_day(var14, var32)
    except BaseException:
        pass


def test_case_359():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 222.0
        var10 = module0.unique_day(var9, var3)
    except BaseException:
        pass


def test_case_360():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = False
        var12 = '6PAq\x0cf='
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '6PAq\x0cf='
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var21 = module0.unique_month(var20, var15)
        assert var21 is False
        var22 = '\x0bP?%vd)V[jM\\Ks%dH'
        var23 = 'cg-7;s4|XB1A'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = 1104
        var26 = '0!(N+\tTrOU$Zk}'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '|9d1]'
        var29 = 'D|kg\twl'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'S1\tn^q*c`"brQS=lhKS'
        var32 = "Z'T t\n?\\<IZ\n"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = True
        var35 = True
        var36 = module0.contains_unique_day(var34, var35)
    except BaseException:
        pass


def test_case_361():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 290
        var7 = ",VD\x0b'LIMSM6|z1="
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'D.>\r{bA5\r'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 687
        var22 = 'Y.)d\r|'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'e/%tF/gi&~Qx'
        var28 = module0.contains_unique_day(var27, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = 'bs6eVJ$-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = 1644
        var40 = module0.unique_month(var38, var39)
    except BaseException:
        pass


def test_case_362():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'e/%tF/gi&~Qx'
        var7 = module0.contains_unique_day(var6, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 2515.336
        var15 = 'l\x0cR\x0b0\nTy7O%'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -1678.326133
        var18 = 'uL6n:(0+&aC'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = "vDd@H>&l8V'NKl@`(_44"
        var21 = module0.contains_unique_day(var18, var20)
        assert var21 is False
        var22 = -1678.326133
        var23 = 'uL6n:(0+&aC'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = 'o1@,!$!-'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 1104
        var32 = '0!(N+\tTrOU$Zk}'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = '-!X-'
        var35 = module0.unique_day(var14, var34)
    except BaseException:
        pass


def test_case_363():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = -1514
        var18 = module0.unique_day(var7, var17)
    except BaseException:
        pass


def test_case_364():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'S1\tn^q*c`"brQS=lhKS'
        var15 = "Z'T t\n?\\<IZ\n"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = module0.contains_unique_day(var9, var17)
    except BaseException:
        pass


def test_case_365():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '|9d1]'
        var7 = 'D|kg\twl'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 687
        var10 = 'Y.)d\r|'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1969.38
        var13 = 2839.558
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_366():
    try:
        var0 = -182.7
        var1 = 3935.0
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_367():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\x0bP?%vd)V[jM\\Ks%dH'
        var4 = 'cg-7;s4|XB1A'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = ';'
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_368():
    try:
        var0 = 'O-N.EaTsU-a>n31vh\n\n'
        var1 = 22.385291
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_369():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 290
        var7 = ",VD\x0b'LIMSM6|z1="
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1678.326133
        var13 = 'uL6n:(0+&aC'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = "vDd@H>&l8V'NKl@`(_44"
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = "Q^NRc#'"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 2515.336
        var24 = 'l\x0cR\x0b0\nTy7O%'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = "Q^NRc#'"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = True
        var33 = module0.contains_unique_day(var21, var32)
    except BaseException:
        pass


def test_case_370():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '}QfA'
        var7 = module0.unique_month(var6, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'lZ?Q\t+8,chFW7'
        var15 = '.CAwIF?K]l]$'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'D.>\r{bA5\r'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'e/%tF/gi&~Qx'
        var24 = module0.contains_unique_day(var23, var23)
        assert var24 is False
        var25 = '|9d1]'
        var26 = 'D|kg\twl'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '<M\n+Oyy >M"'
        var29 = True
        var30 = module0.unique_day(var28, var29)
    except BaseException:
        pass


def test_case_371():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -2348
        var7 = module0.contains_unique_day(var6, var3)
    except BaseException:
        pass


def test_case_372():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2515.336
        var7 = 'l\x0cR\x0b0\nTy7O%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '\x0bP?%vd)V[jM\\Ks%dH'
        var16 = 'cg-7;s4|XB1A'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = "Q^NRc#'"
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'lZ?Q\t+8,chFW7'
        var25 = '.CAwIF?K]l]$'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '}QfA'
        var28 = module0.unique_month(var27, var27)
        assert var28 is False
        var29 = 3936
        var30 = module0.unique_day(var29, var12)
    except BaseException:
        pass


def test_case_373():
    try:
        var0 = "t'ReOO\n&K\n/\ro"
        var1 = 1636
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_374():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'T]Z\x0cW%TU\x0bDl'
        var4 = module0.unique_month(var3, var0)
    except BaseException:
        pass


def test_case_375():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 290
        var7 = ",VD\x0b'LIMSM6|z1="
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = '\x0bP?%vd)V[jM\\Ks%dH'
        var21 = 'cg-7;s4|XB1A'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '.YB-V}`04@zK'
        var24 = False
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_376():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '6PAq\x0cf='
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 1104
        var16 = '0!(N+\tTrOU$Zk}'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '6PAq\x0cf='
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1678.326133
        var22 = 'uL6n:(0+&aC'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var25 = module0.unique_month(var24, var19)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'e/%tF/gi&~Qx'
        var30 = module0.contains_unique_day(var29, var29)
        assert var30 is False
        var31 = 'Yr3g5Bu2'
        var32 = 'lI&R|rkCkcdxbj@3;'
        var33 = module0.unique_day(var31, var32)
    except BaseException:
        pass


def test_case_377():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'S1\tn^q*c`"brQS=lhKS'
        var7 = "Z'T t\n?\\<IZ\n"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '}QfA'
        var19 = module0.unique_month(var18, var18)
        assert var19 is False
        var20 = ';J9_bmqZv;t t6'
        var21 = module0.unique_day(var20, var4)
    except BaseException:
        pass


def test_case_378():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 't'
        var10 = module0.unique_day(var0, var9)
    except BaseException:
        pass


def test_case_379():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = 'bs6eVJ$-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'S1\tn^q*c`"brQS=lhKS'
        var19 = "Z'T t\n?\\<IZ\n"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = True
        var22 = '\tr9O+wwZDvr'
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_380():
    try:
        var0 = '4vz'
        var1 = True
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_381():
    try:
        var0 = False
        var1 = None
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_382():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = False
        var9 = '6PAq\x0cf='
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'S1\tn^q*c`"brQS=lhKS'
        var15 = "Z'T t\n?\\<IZ\n"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '6PAq\x0cf='
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var24 = module0.unique_month(var23, var18)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = 'o1@,!$!-'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = False
        var32 = 'bs6eVJ$-'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = ''
        var38 = '*B Am\nRb_#'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = True
        var41 = "Q^NRc#'"
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = 2515.336
        var44 = 'l\x0cR\x0b0\nTy7O%'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = '|9d1]'
        var47 = 'D|kg\twl'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = None
        var50 = 'D.>\r{bA5\r'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = -1678.326133
        var53 = 'uL6n:(0+&aC'
        var54 = module0.contains_unique_day(var52, var53)
        assert var54 is False
        var55 = '|9d1]'
        var56 = 'D|kg\twl'
        var57 = module0.contains_unique_day(var55, var56)
        assert var57 is False
        var58 = 290
        var59 = ",VD\x0b'LIMSM6|z1="
        var60 = module0.contains_unique_day(var58, var59)
        assert var60 is False
        var61 = 'gj$-E9 F`YRbze'
        var62 = module0.unique_day(var61, var49)
    except BaseException:
        pass


def test_case_383():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'S1\tn^q*c`"brQS=lhKS'
        var15 = "Z'T t\n?\\<IZ\n"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = '|9d1]'
        var18 = 'D|kg\twl'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = 'D.>\r{bA5\r'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '}QfA'
        var24 = module0.unique_month(var23, var23)
        assert var24 is False
        var25 = module0.unique_day(var20, var0)
    except BaseException:
        pass


def test_case_384():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'lZ?Q\t+8,chFW7'
        var7 = '.CAwIF?K]l]$'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'e/%tF/gi&~Qx'
        var13 = module0.contains_unique_day(var12, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 529
        var18 = module0.unique_month(var10, var17)
    except BaseException:
        pass


def test_case_385():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = -1678.326133
        var12 = 'uL6n:(0+&aC'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = "vDd@H>&l8V'NKl@`(_44"
        var15 = module0.contains_unique_day(var12, var14)
        assert var15 is False
        var16 = '|9d1]'
        var17 = 'D|kg\twl'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = 'S1\tn^q*c`"brQS=lhKS'
        var20 = "Z'T t\n?\\<IZ\n"
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = None
        var23 = 'D.>\r{bA5\r'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = -72
        var26 = None
        var27 = module0.unique_day(var25, var26)
    except BaseException:
        pass


def test_case_386():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 'e/%tF/gi&~Qx'
        var9 = module0.contains_unique_day(var8, var8)
        assert var9 is False
        var10 = 1104
        var11 = '0!(N+\tTrOU$Zk}'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = ''
        var14 = '*B Am\nRb_#'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = None
        var17 = module0.unique_month(var16, var14)
        assert var17 is False
        var18 = '|9d1]'
        var19 = 'D|kg\twl'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'S1\tn^q*c`"brQS=lhKS'
        var25 = "Z'T t\n?\\<IZ\n"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = ''
        var28 = '*B Am\nRb_#'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = True
        var31 = "Q^NRc#'"
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'lZ?Q\t+8,chFW7'
        var34 = '.CAwIF?K]l]$'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = -1678.326133
        var37 = 'uL6n:(0+&aC'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = False
        var43 = '6PAq\x0cf='
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = -1678.326133
        var46 = 'uL6n:(0+&aC'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var49 = module0.unique_month(var48, var43)
        assert var49 is False
        var50 = 2119.16424
        var51 = module0.unique_day(var50, var30)
    except BaseException:
        pass


def test_case_387():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'S1\tn^q*c`"brQS=lhKS'
        var16 = "Z'T t\n?\\<IZ\n"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '}QfA'
        var19 = module0.unique_month(var18, var18)
        assert var19 is False
        var20 = None
        var21 = 'D.>\r{bA5\r'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'e/%tF/gi&~Qx'
        var27 = module0.contains_unique_day(var26, var26)
        assert var27 is False
        var28 = ''
        var29 = '*B Am\nRb_#'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = True
        var32 = "Q^NRc#'"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = '6PAq\x0cf='
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -1678.326133
        var38 = 'uL6n:(0+&aC'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = '|9d1]'
        var41 = 'D|kg\twl'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = 290
        var44 = ",VD\x0b'LIMSM6|z1="
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = 'c$k6'
        var47 = True
        var48 = module0.contains_unique_day(var46, var47)
    except BaseException:
        pass


def test_case_388():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = True
        var9 = "Q^NRc#'"
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'lZ?Q\t+8,chFW7'
        var12 = '.CAwIF?K]l]$'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = module0.unique_month(var20, var18)
        assert var21 is False
        var22 = '\x0bP?%vd)V[jM\\Ks%dH'
        var23 = 'cg-7;s4|XB1A'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = 'E_PfV5dsQ+&WqUU)Jxu'
        var26 = module0.unique_day(var20, var25)
    except BaseException:
        pass


def test_case_389():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = '}QfA'
        var6 = module0.unique_month(var5, var5)
        assert var6 is False
        var7 = False
        var8 = '6PAq\x0cf='
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = -1678.326133
        var11 = 'uL6n:(0+&aC'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = "vDd@H>&l8V'NKl@`(_44"
        var14 = module0.contains_unique_day(var11, var13)
        assert var14 is False
        var15 = '|9d1]'
        var16 = 'D|kg\twl'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'S1\tn^q*c`"brQS=lhKS'
        var19 = "Z'T t\n?\\<IZ\n"
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = True
        var25 = 'o1@,!$!-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = 'bs6eVJ$-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = -1678.326133
        var31 = 'uL6n:(0+&aC'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '|9d1]'
        var34 = 'D|kg\twl'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 290
        var37 = ",VD\x0b'LIMSM6|z1="
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = -1678.326133
        var40 = 'uL6n:(0+&aC'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = module0.unique_month(var36, var10)
    except BaseException:
        pass


def test_case_390():
    try:
        var0 = 'Ra'
        var1 = '%V&|C1Z|j1n`v.9_<'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_391():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 'T'
        var6 = False
        var7 = module0.unique_month(var5, var6)
    except BaseException:
        pass


def test_case_392():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2515.336
        var7 = 'l\x0cR\x0b0\nTy7O%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '|9d1]'
        var13 = 'D|kg\twl'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 687
        var16 = 'Y.)d\r|'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1678.326133
        var19 = 'uL6n:(0+&aC'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = "vDd@H>&l8V'NKl@`(_44"
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = 'o1@,!$!-'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = '6PAq\x0cf='
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -1678.326133
        var33 = 'uL6n:(0+&aC'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '|9d1]'
        var36 = 'D|kg\twl'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'S1\tn^q*c`"brQS=lhKS'
        var39 = "Z'T t\n?\\<IZ\n"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -1678.326133
        var42 = 'uL6n:(0+&aC'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = '|9d1]'
        var45 = 'D|kg\twl'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 290
        var48 = ",VD\x0b'LIMSM6|z1="
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = ''
        var51 = '*B Am\nRb_#'
        var52 = module0.contains_unique_day(var50, var51)
        assert var52 is False
        var53 = 'e/%tF/gi&~Qx'
        var54 = module0.contains_unique_day(var53, var53)
        assert var54 is False
        var55 = module0.unique_day(var18, var29)
    except BaseException:
        pass


def test_case_393():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = module0.unique_month(var4, var6)
    except BaseException:
        pass


def test_case_394():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2515.336
        var7 = 'l\x0cR\x0b0\nTy7O%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = ':5*Ad\\A>@aY/M\n8YvP'
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_395():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = True
        var9 = "Q^NRc#'"
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 2515.336
        var18 = 'l\x0cR\x0b0\nTy7O%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '}QfA'
        var24 = module0.unique_month(var23, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = "Q^NRc#'"
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 'lZ?Q\t+8,chFW7'
        var32 = '.CAwIF?K]l]$'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = True
        var38 = 'o1@,!$!-'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 1104
        var41 = '0!(N+\tTrOU$Zk}'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = ''
        var44 = '*B Am\nRb_#'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = '\x0cvT>Ke$LWY9'
        var47 = None
        var48 = module0.unique_day(var46, var47)
    except BaseException:
        pass


def test_case_396():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = -3901.3
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_397():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1678.326133
        var10 = 'uL6n:(0+&aC'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1104
        var13 = '0!(N+\tTrOU$Zk}'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ''
        var16 = '*B Am\nRb_#'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.unique_month(var18, var16)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '|9d1]'
        var24 = 'D|kg\twl'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 290
        var27 = ",VD\x0b'LIMSM6|z1="
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = module0.contains_unique_day(var15, var18)
    except BaseException:
        pass


def test_case_398():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = "Q^NRc#'"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'e/%tF/gi&~Qx'
        var16 = module0.contains_unique_day(var15, var15)
        assert var16 is False
        var17 = False
        var18 = '6PAq\x0cf='
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -1678.326133
        var21 = 'uL6n:(0+&aC'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = "vDd@H>&l8V'NKl@`(_44"
        var24 = module0.contains_unique_day(var21, var23)
        assert var24 is False
        var25 = -1678.326133
        var26 = 'uL6n:(0+&aC'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '|9d1]'
        var29 = 'D|kg\twl'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 290
        var32 = ",VD\x0b'LIMSM6|z1="
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var17)
    except BaseException:
        pass


def test_case_399():
    try:
        var0 = 3356.981505
        var1 = True
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_400():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'lZ?Q\t+8,chFW7'
        var7 = '.CAwIF?K]l]$'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 1104
        var19 = '0!(N+\tTrOU$Zk}'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = '*B Am\nRb_#'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = module0.unique_month(var24, var22)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'e/%tF/gi&~Qx'
        var30 = module0.contains_unique_day(var29, var29)
        assert var30 is False
        var31 = ''
        var32 = '*B Am\nRb_#'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = True
        var35 = 'o1@,!$!-'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '+M[>]dR`1(1irC>N G!'
        var38 = None
        var39 = module0.unique_day(var37, var38)
    except BaseException:
        pass


def test_case_401():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = '}QfA'
        var6 = module0.unique_month(var5, var5)
        assert var6 is False
        var7 = 2697.5
        var8 = '%P{tiA\n1q.'
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = False
        var11 = '6PAq\x0cf='
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = 1104
        var14 = '0!(N+\tTrOU$Zk}'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = '|9d1]'
        var17 = 'D|kg\twl'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = 2387.1
        var20 = 1809.716774
        var21 = module0.unique_day(var19, var20)
    except BaseException:
        pass


def test_case_402():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2515.336
        var7 = 'l\x0cR\x0b0\nTy7O%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -152
        var10 = None
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_403():
    try:
        var0 = '}QfA'
        var1 = module0.unique_month(var0, var0)
        assert var1 is False
        var2 = '|9d1]'
        var3 = 'D|kg\twl'
        var4 = module0.contains_unique_day(var2, var3)
        assert var4 is False
        var5 = 'S1\tn^q*c`"brQS=lhKS'
        var6 = "Z'T t\n?\\<IZ\n"
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = -1678.326133
        var12 = 'uL6n:(0+&aC'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = '*B Am\nRb_#'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = True
        var18 = 'o1@,!$!-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = 'bs6eVJ$-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = "Q^NRc#'"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '\x0bP?%vd)V[jM\\Ks%dH'
        var30 = 'cg-7;s4|XB1A'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = ''
        var33 = '*B Am\nRb_#'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = True
        var36 = 'o1@,!$!-'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = '*B Am\nRb_#'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = True
        var42 = "Q^NRc#'"
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = 'lZ?Q\t+8,chFW7'
        var45 = '.CAwIF?K]l]$'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 1104
        var48 = '0!(N+\tTrOU$Zk}'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = '}8$Se_za%/'
        var51 = ']i;TQUnWb#4Y'
        var52 = module0.unique_day(var50, var51)
    except BaseException:
        pass


def test_case_404():
    try:
        var0 = 1992.0
        var1 = '|q\x0bJ7G '
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_405():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1104
        var7 = '0!(N+\tTrOU$Zk}'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'lZ?Q\t+8,chFW7'
        var16 = '.CAwIF?K]l]$'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = '*B Am\nRb_#'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = 'o1@,!$!-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '6PAq\x0cf='
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1678.326133
        var28 = 'uL6n:(0+&aC'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var31 = module0.unique_month(var30, var25)
        assert var31 is False
        var32 = None
        var33 = module0.contains_unique_day(var3, var32)
    except BaseException:
        pass


def test_case_406():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = "Q^NRc#'"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = 'o1@,!$!-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -3209
        var13 = True
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_407():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'D.>\r{bA5\r'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 138
        var10 = '`}(w54e&we'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = '*B Am\nRb_#'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'e/%tF/gi&~Qx'
        var16 = module0.contains_unique_day(var15, var15)
        assert var16 is False
        var17 = 2697.5
        var18 = '%P{tiA\n1q.'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '|9d1]'
        var21 = 'D|kg\twl'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = -1678.326133
        var24 = 'uL6n:(0+&aC'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = "vDd@H>&l8V'NKl@`(_44"
        var27 = module0.contains_unique_day(var24, var26)
        assert var27 is False
        var28 = ''
        var29 = '*B Am\nRb_#'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 1104
        var32 = '0!(N+\tTrOU$Zk}'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = '*B Am\nRb_#'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = True
        var38 = "Q^NRc#'"
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = '\x0bP?%vd)V[jM\\Ks%dH'
        var41 = 'cg-7;s4|XB1A'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = module0.unique_month(var17, var6)
    except BaseException:
        pass


def test_case_408():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = "vDd@H>&l8V'NKl@`(_44"
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = "Q^NRc#'"
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'lZ?Q\t+8,chFW7'
        var15 = '.CAwIF?K]l]$'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '|9d1]'
        var18 = 'D|kg\twl'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'S1\tn^q*c`"brQS=lhKS'
        var21 = "Z'T t\n?\\<IZ\n"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = 'D.>\r{bA5\r'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 138
        var27 = '`}(w54e&we'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = 'o1@,!$!-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ''
        var36 = '*B Am\nRb_#'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = True
        var39 = "Q^NRc#'"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = ''
        var42 = '*B Am\nRb_#'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = True
        var45 = "Q^NRc#'"
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = 2515.336
        var48 = 'l\x0cR\x0b0\nTy7O%'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = False
        var51 = '6PAq\x0cf='
        var52 = module0.unique_month(var50, var51)
        assert var52 is False
        var53 = -1678.326133
        var54 = 'uL6n:(0+&aC'
        var55 = module0.contains_unique_day(var53, var54)
        assert var55 is False
        var56 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var57 = module0.unique_month(var56, var51)
        assert var57 is False
        var58 = False
        var59 = '6PAq\x0cf='
        var60 = module0.unique_month(var58, var59)
        assert var60 is False
        var61 = '>>&ls5@:Y^W'
        var62 = False
        var63 = module0.unique_month(var61, var62)
    except BaseException:
        pass


def test_case_409():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1678.326133
        var7 = 'uL6n:(0+&aC'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '|9d1]'
        var10 = 'D|kg\twl'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 290
        var13 = ",VD\x0b'LIMSM6|z1="
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 2697.5
        var16 = '%P{tiA\n1q.'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 1247.2
        var19 = module0.unique_day(var18, var3)
    except BaseException:
        pass


def test_case_410():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'e/%tF/gi&~Qx'
        var4 = module0.contains_unique_day(var3, var3)
        assert var4 is False
        var5 = ''
        var6 = '*B Am\nRb_#'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 2697.5
        var9 = '%P{tiA\n1q.'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '|9d1]'
        var15 = 'D|kg\twl'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 687
        var18 = 'Y.)d\r|'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '6PAq\x0cf='
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -1678.326133
        var24 = 'uL6n:(0+&aC'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = "vDd@H>&l8V'NKl@`(_44"
        var27 = module0.contains_unique_day(var24, var26)
        assert var27 is False
        var28 = '\x0b8anRot\\n.W``\r~'
        var29 = module0.contains_unique_day(var28, var20)
    except BaseException:
        pass


def test_case_411():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 'o1@,!$!-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 'bs6eVJ$-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'lZ?Q\t+8,chFW7'
        var16 = '.CAwIF?K]l]$'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = None
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_412():
    try:
        var0 = ''
        var1 = '*B Am\nRb_#'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = True
        var7 = "Q^NRc#'"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'lZ?Q\t+8,chFW7'
        var10 = '.CAwIF?K]l]$'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '}QfA'
        var13 = module0.unique_month(var12, var12)
        assert var13 is False
        var14 = 1104
        var15 = '0!(N+\tTrOU$Zk}'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = module0.unique_month(var20, var18)
        assert var21 is False
        var22 = -1678.326133
        var23 = 'uL6n:(0+&aC'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = ''
        var26 = '*B Am\nRb_#'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = True
        var29 = 'o1@,!$!-'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = False
        var32 = '6PAq\x0cf='
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -1678.326133
        var35 = 'uL6n:(0+&aC'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var38 = module0.unique_month(var37, var32)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = '|9d1]'
        var43 = 'D|kg\twl'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = 687
        var46 = 'Y.)d\r|'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = module0.contains_unique_day(var34, var6)
    except BaseException:
        pass


def test_case_413():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '|9d1]'
        var4 = 'D|kg\twl'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 290
        var7 = ",VD\x0b'LIMSM6|z1="
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 'o1@,!$!-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'bs6eVJ$-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 2697.5
        var19 = '%P{tiA\n1q.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '|9d1]'
        var22 = 'D|kg\twl'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -1678.326133
        var25 = 'uL6n:(0+&aC'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = "vDd@H>&l8V'NKl@`(_44"
        var28 = module0.contains_unique_day(var25, var27)
        assert var28 is False
        var29 = '}QfA'
        var30 = module0.unique_month(var29, var29)
        assert var30 is False
        var31 = False
        var32 = '6PAq\x0cf='
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -1678.326133
        var35 = 'uL6n:(0+&aC'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var38 = module0.unique_month(var37, var32)
        assert var38 is False
        var39 = None
        var40 = 'D.>\r{bA5\r'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = '4)|Z\tR x Iy'
        var43 = module0.contains_unique_day(var42, var39)
    except BaseException:
        pass


def test_case_414():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = False
        var6 = '6PAq\x0cf='
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = 2697.5
        var9 = '%P{tiA\n1q.'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = 'o1@,!$!-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 1104
        var24 = '0!(N+\tTrOU$Zk}'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ''
        var27 = '*B Am\nRb_#'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = True
        var30 = 'o1@,!$!-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = 'bs6eVJ$-'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = 'D.>\r{bA5\r'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 138
        var39 = '`}(w54e&we'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = -1678.326133
        var42 = 'uL6n:(0+&aC'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = '[|!T(#hRAdV5'
        var45 = -2803.38
        var46 = module0.unique_day(var44, var45)
    except BaseException:
        pass


def test_case_415():
    try:
        var0 = -1678.326133
        var1 = 'uL6n:(0+&aC'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = "vDd@H>&l8V'NKl@`(_44"
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 1104
        var6 = '0!(N+\tTrOU$Zk}'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = 'o1@,!$!-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = 'bs6eVJ$-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ''
        var18 = '*B Am\nRb_#'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = "Q^NRc#'"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = 'D.>\r{bA5\r'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 138
        var27 = '`}(w54e&we'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -1678.326133
        var30 = 'uL6n:(0+&aC'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '}QfA'
        var33 = module0.unique_month(var32, var32)
        assert var33 is False
        var34 = -1678.326133
        var35 = 'uL6n:(0+&aC'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '|9d1]'
        var38 = 'D|kg\twl'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 290
        var41 = ",VD\x0b'LIMSM6|z1="
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = False
        var44 = '6PAq\x0cf='
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = -1678.326133
        var47 = 'uL6n:(0+&aC'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var50 = module0.unique_month(var49, var44)
        assert var50 is False
        var51 = module0.unique_day(var43, var40)
    except BaseException:
        pass


def test_case_416():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = -1678.326133
        var9 = 'uL6n:(0+&aC'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = "vDd@H>&l8V'NKl@`(_44"
        var12 = module0.contains_unique_day(var9, var11)
        assert var12 is False
        var13 = ''
        var14 = '*B Am\nRb_#'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 'e/%tF/gi&~Qx'
        var17 = module0.contains_unique_day(var16, var16)
        assert var17 is False
        var18 = False
        var19 = '6PAq\x0cf='
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1678.326133
        var22 = 'uL6n:(0+&aC'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '|9d1]'
        var25 = 'D|kg\twl'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 290
        var28 = ",VD\x0b'LIMSM6|z1="
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = '*B Am\nRb_#'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = True
        var34 = "Q^NRc#'"
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'lZ?Q\t+8,chFW7'
        var37 = '.CAwIF?K]l]$'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ''
        var40 = '*B Am\nRb_#'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = '|9d1]'
        var43 = 'D|kg\twl'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = 687
        var46 = 'Y.)d\r|'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = ''
        var49 = '*B Am\nRb_#'
        var50 = module0.contains_unique_day(var48, var49)
        assert var50 is False
        var51 = True
        var52 = "Q^NRc#'"
        var53 = module0.unique_month(var51, var52)
        assert var53 is False
        var54 = 2515.336
        var55 = 'l\x0cR\x0b0\nTy7O%'
        var56 = module0.unique_month(var54, var55)
        assert var56 is False
        var57 = None
        var58 = 'D.>\r{bA5\r'
        var59 = module0.contains_unique_day(var57, var58)
        assert var59 is False
        var60 = 138
        var61 = '`}(w54e&we'
        var62 = module0.contains_unique_day(var60, var61)
        assert var62 is False
        var63 = 'k:j0?PqHQq]\\m- '
        var64 = -2766
        var65 = module0.unique_day(var63, var64)
    except BaseException:
        pass


def test_case_417():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1104
        var4 = '0!(N+\tTrOU$Zk}'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = '*B Am\nRb_#'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var9, var7)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = "Q^NRc#'"
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 2515.336
        var18 = 'l\x0cR\x0b0\nTy7O%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ''
        var21 = '*B Am\nRb_#'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = True
        var24 = "Q^NRc#'"
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'lZ?Q\t+8,chFW7'
        var27 = '.CAwIF?K]l]$'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ''
        var30 = '*B Am\nRb_#'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = "Q^NRc#'"
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '6PAq\x0cf='
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -1678.326133
        var39 = 'uL6n:(0+&aC'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var42 = module0.unique_month(var41, var36)
        assert var42 is False
        var43 = 195
        var44 = module0.unique_month(var35, var43)
    except BaseException:
        pass


def test_case_418():
    try:
        var0 = 1104
        var1 = '0!(N+\tTrOU$Zk}'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = '*B Am\nRb_#'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.unique_month(var6, var4)
        assert var7 is False
        var8 = ''
        var9 = '*B Am\nRb_#'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = '*B Am\nRb_#'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = 'o1@,!$!-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 1104
        var18 = '0!(N+\tTrOU$Zk}'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '6PAq\x0cf='
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = ''
        var24 = '*B Am\nRb_#'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = "Q^NRc#'"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = 'D.>\r{bA5\r'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 138
        var33 = '`}(w54e&we'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = 'L\x0b*,T'
        var37 = module0.unique_day(var35, var36)
    except BaseException:
        pass


def test_case_419():
    try:
        var0 = '|9d1]'
        var1 = 'D|kg\twl'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'S1\tn^q*c`"brQS=lhKS'
        var4 = "Z'T t\n?\\<IZ\n"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '\x0bP?%vd)V[jM\\Ks%dH'
        var7 = 'cg-7;s4|XB1A'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = '*B Am\nRb_#'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = "Q^NRc#'"
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 2515.336
        var16 = 'l\x0cR\x0b0\nTy7O%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 2697.5
        var19 = '%P{tiA\n1q.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1104
        var22 = '0!(N+\tTrOU$Zk}'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = '*B Am\nRb_#'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var25)
        assert var28 is False
        var29 = 1583.8
        var30 = module0.unique_day(var7, var29)
    except BaseException:
        pass


def test_case_420():
    try:
        var0 = False
        var1 = '6PAq\x0cf='
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1678.326133
        var4 = 'uL6n:(0+&aC'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'L\\Bd6Iu~_t11\x0b>"I{}.q'
        var7 = module0.unique_month(var6, var1)
        assert var7 is False
        var8 = -1678.326133
        var9 = 'uL6n:(0+&aC'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '|9d1]'
        var12 = 'D|kg\twl'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = -2270.8848
        var15 = module0.unique_month(var4, var14)
    except BaseException:
        pass
