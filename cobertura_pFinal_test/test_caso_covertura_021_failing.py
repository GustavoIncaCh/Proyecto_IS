# Automatically generated by Pynguin.
import caso_covertura_021 as module0


def test_case_0():
    try:
        var0 = 40.1
        var1 = "&hx'=D=bvwkFN7]N*O+"
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = 'V4]de8eqJ_TTi*n/NXp'
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = -3172.0
        var1 = module0.search(var0, var0)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = -1175
        var1 = 2383
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'v[:"0@EC)X_5\t6n@'
        var5 = None
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = None
        var5 = True
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = -1825
        var1 = "TM5'J?jsm$NRNx"
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = '\nmH$Hf|qIMIX3SU0'
        var1 = -470
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 2530.141
        var3 = "'iIxa+\x0bcD>aZMBM+xOR*"
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = None
        var5 = module0.search(var2, var4)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = None
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -2078
        var3 = 'oK2CuY\r7zJ/Up`<|1pZ'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '$/+"A'
        var3 = -901
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 2914
        var3 = module0.search(var0, var2)
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = False
        var7 = "a)bsh'>{$)N^JDp$V!"
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = 200
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = False
        var9 = module0.search(var8, var8)
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = -1412
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 542.66937
        var20 = module0.search(var4, var19)
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = True
        var14 = None
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = -309
        var1 = 'bY('
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = '&U.B"W/0we'
        var14 = -232
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_22():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ''
        var7 = None
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_23():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 674.3851
        var12 = module0.search(var9, var11)
    except BaseException:
        pass


def test_case_24():
    try:
        var0 = "(;1%O[a\x0bUao'didno0"
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_25():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 455.0
        var12 = '?WL'
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_26():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = "8>P'mn"
        var7 = True
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_27():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '?\x0c\\L0t0\t!Qd*yi$r%JX'
        var3 = None
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_28():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = 785.483
        var22 = 1362
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_29():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = ''
        var22 = 606
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_30():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = None
        var22 = 890.91747
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_31():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = None
        var22 = module0.search(var21, var21)
    except BaseException:
        pass


def test_case_32():
    try:
        var0 = None
        var1 = 4670
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_33():
    try:
        var0 = True
        var1 = -220.4684
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_34():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '<T}S9Y'
        var22 = -826.1
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_35():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = -1041
        var3 = 4087.88667
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_36():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = None
        var16 = module0.search(var15, var6)
    except BaseException:
        pass


def test_case_37():
    try:
        var0 = 738
        var1 = 'o</w5q'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_38():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'ms/uxj\x0c3|_y'
        var12 = 644
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_39():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'j'
        var13 = False
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_40():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = '^'
        var7 = 2570
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_41():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = 1207.5422
        var22 = False
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_42():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = True
        var12 = 4434.9
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_43():
    try:
        var0 = -5621.799
        var1 = '"3~hUftz>XX}'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_44():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = False
        var24 = True
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_45():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = True
        var12 = 2502.96
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_46():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = False
        var9 = module0.search(var6, var8)
    except BaseException:
        pass


def test_case_47():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = False
        var9 = '"=s1@'
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_48():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = True
        var10 = module0.search(var9, var9)
    except BaseException:
        pass


def test_case_49():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D&~_N.=en0tf|'
        var9 = -398
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_50():
    try:
        var0 = True
        var1 = 'OA[\x0ch/e+F)\x0b8%r'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_51():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 3959
        var22 = '3EJYfd&M.>1\x0cN*V'
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_52():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = False
        var24 = -913
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_53():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'i\ts;S8^g\teT<FMDx'
        var3 = 637.53
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_54():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 246
        var18 = 'RMan[?{/&F'
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_55():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 1350.66
        var22 = module0.search(var21, var14)
    except BaseException:
        pass


def test_case_56():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = True
        var9 = None
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_57():
    try:
        var0 = 899.11694
        var1 = 'b,hS<7CVmSwIdaEkGne8'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_58():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = -242
        var24 = '*2ld<V'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_59():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = 'C\n,Td}5k7nEl'
        var22 = 3794
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_60():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = "z|apsO67[DVl-'m_O7JT"
        var7 = None
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_61():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = True
        var20 = -122
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_62():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = '=noR\'U(7{M"\r'
        var14 = -64.639395
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_63():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = 1333
        var24 = False
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_64():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = True
        var22 = 'J|LxdvbjWurZO'
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_65():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = -987.73031
        var24 = '8;]]0aY'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_66():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 561.037
        var11 = '\x0bZym6~nd'
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_67():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 2059.35
        var20 = '6"A9O!'
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_68():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = True
        var14 = 4242
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_69():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = ':Y|)Na'
        var24 = 2334
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_70():
    try:
        var0 = -4613.0
        var1 = module0.search(var0, var0)
    except BaseException:
        pass


def test_case_71():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 1742.657
        var16 = -40.87
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_72():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = True
        var11 = module0.search(var10, var4)
    except BaseException:
        pass


def test_case_73():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = -441
        var5 = None
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_74():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = -2609.48729
        var20 = 'i83XmN\x0b7Hfs'
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_75():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = True
        var20 = '(z]y\nU1aU0@^<-y'
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_76():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = True
        var24 = module0.search(var23, var21)
    except BaseException:
        pass


def test_case_77():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = True
        var3 = False
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_78():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '@7X\nY'
        var12 = -774
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_79():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = False
        var7 = True
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_80():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = False
        var9 = module0.search(var8, var8)
    except BaseException:
        pass


def test_case_81():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '>3aFds@'
        var22 = '-+v96PI_(\\ha'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = ' j:xB.yP.I&j@,'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'JE\r\\L**#a'
        var31 = module0.search(var28, var30)
        assert var31 == 0
        var32 = -2238
        var33 = -1016
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_82():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 824
        var23 = 'gNa'
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_83():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'D]\x0bz,_GASb0:eB3'
        var22 = '$?'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = '[EXR'
        var29 = module0.search(var28, var28)
        assert var29 == 4
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = 266
        var33 = None
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_84():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 2143
        var33 = 930
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_85():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = ']cY80,'
        var12 = -331
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_86():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = None
        var7 = -3029.652277
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_87():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 695.99
        var16 = 242
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_88():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = -3668.4484
        var20 = 2368
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_89():
    try:
        var0 = '\x0b~;le'
        var1 = -1390
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_90():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'l<,Z=SS'
        var28 = module0.search(var27, var27)
        assert var28 == 7
        var29 = 'D]\x0bz,_GASb0:eB3'
        var30 = '$?'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 5977
        var33 = 838.6429
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_91():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'D]\x0bz,_GASb0:eB3'
        var22 = '$?'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 'gV|5bCvd6Yd@k'
        var33 = -1265.8917
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_92():
    try:
        var0 = -569
        var1 = '_8YP?L1etPhJlR~]D'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_93():
    try:
        var0 = False
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_94():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = True
        var14 = False
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_95():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '>3aFds@'
        var16 = '-+v96PI_(\\ha'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = -1452.0
        var27 = module0.search(var26, var7)
    except BaseException:
        pass


def test_case_96():
    try:
        var0 = -1200
        var1 = "I,M'AMEki{qTQ%L"
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_97():
    try:
        var0 = 539
        var1 = 's\\;lCB!p2E\x0cUw%S_gR'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_98():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = False
        var10 = module0.search(var9, var9)
    except BaseException:
        pass


def test_case_99():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = -2079
        var33 = True
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_100():
    try:
        var0 = 2437
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_101():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'D]\x0bz,_GASb0:eB3'
        var20 = '$?'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'rCD'
        var27 = module0.search(var26, var26)
        assert var27 == 3
        var28 = None
        var29 = module0.search(var28, var28)
    except BaseException:
        pass


def test_case_102():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = -823
        var18 = 1167.121662
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_103():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = -1367
        var12 = 2436.8975
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_104():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = True
        var14 = ':%;Bz\\3D\x0b MfW\x0cG'
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_105():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -990
        var3 = 1210.496488
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_106():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = None
        var5 = True
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_107():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = None
        var20 = -963
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_108():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = False
        var20 = 2210
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_109():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = False
        var10 = '`bPd~zk86i]jIp+A\x0c'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_110():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 1267
        var14 = "'CRD>9*.i,C"
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_111():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = True
        var13 = module0.search(var12, var12)
    except BaseException:
        pass


def test_case_112():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'D]\x0bz,_GASb0:eB3'
        var17 = '$?'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = '[EXR'
        var33 = module0.search(var32, var32)
        assert var33 == 4
        var34 = 'u1M#;UMm)'
        var35 = 52.7947
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_113():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'vH]DJwK22PU jd+IE!P'
        var9 = -1480
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_114():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = ' j:xB.yP.I&j@,'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 683.2
        var31 = 'b|r'
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_115():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = None
        var10 = module0.search(var7, var9)
    except BaseException:
        pass


def test_case_116():
    try:
        var0 = True
        var1 = 'IpO0;%{2Y?ijv'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_117():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 1145.387
        var3 = module0.search(var2, var0)
    except BaseException:
        pass


def test_case_118():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = True
        var9 = module0.search(var4, var8)
    except BaseException:
        pass


def test_case_119():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = '>3aFds@'
        var24 = '-+v96PI_(\\ha'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = 'rCD'
        var29 = module0.search(var28, var28)
        assert var29 == 3
        var30 = ''
        var31 = None
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_120():
    try:
        var0 = False
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_121():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = '[;uCB*Dp#\\'
        var29 = 3428
        var30 = module0.search(var28, var29)
    except BaseException:
        pass


def test_case_122():
    try:
        var0 = '.-<i8l l`><(/N-X/w+'
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_123():
    try:
        var0 = 'bAs%x\\{'
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_124():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 686
        var12 = module0.search(var2, var11)
    except BaseException:
        pass


def test_case_125():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '|u\nN2H(A\nO;Eo,4Cq['
        var18 = module0.search(var17, var15)
        assert var18 == 7
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'JE\r\\L**#a'
        var37 = module0.search(var34, var36)
        assert var37 == 0
        var38 = '[EXR'
        var39 = module0.search(var38, var38)
        assert var39 == 4
        var40 = -51
        var41 = True
        var42 = module0.search(var40, var41)
    except BaseException:
        pass


def test_case_126():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '|u\nN2H(A\nO;Eo,4Cq['
        var15 = module0.search(var14, var12)
        assert var15 == 7
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 'D]\x0bz,_GASb0:eB3'
        var25 = '$?'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = ''
        var28 = 1007
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_127():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = '|u\nN2H(A\nO;Eo,4Cq['
        var25 = module0.search(var24, var22)
        assert var25 == 7
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'T^3C?bb!hI'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'l<,Z=SS'
        var31 = module0.search(var30, var30)
        assert var31 == 7
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'JE\r\\L**#a'
        var37 = module0.search(var34, var36)
        assert var37 == 0
        var38 = 'rCD'
        var39 = module0.search(var38, var38)
        assert var39 == 3
        var40 = True
        var41 = '6.13Qu'
        var42 = module0.search(var40, var41)
    except BaseException:
        pass


def test_case_128():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = '[EXR'
        var29 = module0.search(var28, var28)
        assert var29 == 4
        var30 = 'rCD'
        var31 = module0.search(var30, var30)
        assert var31 == 3
        var32 = '[EXR'
        var33 = module0.search(var32, var32)
        assert var33 == 4
        var34 = 'l<,Z=SS'
        var35 = module0.search(var34, var34)
        assert var35 == 7
        var36 = '|u\nN2H(A\nO;Eo,4Cq['
        var37 = module0.search(var36, var34)
        assert var37 == 7
        var38 = -2928.518
        var39 = '['
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_129():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = False
        var20 = -429.0
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_130():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'm.x'
        var31 = False
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_131():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = -254.914
        var22 = 544
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_132():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = '>3aFds@'
        var32 = '-+v96PI_(\\ha'
        var33 = module0.search(var31, var32)
        assert var33 == 2
        var34 = -2016
        var35 = False
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_133():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = -3429.833
        var24 = True
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_134():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = '|u\nN2H(A\nO;Eo,4Cq['
        var26 = module0.search(var25, var23)
        assert var26 == 7
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = 'rCD'
        var30 = module0.search(var29, var29)
        assert var30 == 3
        var31 = -1696.534231
        var32 = None
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_135():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = False
        var22 = module0.search(var21, var10)
    except BaseException:
        pass


def test_case_136():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = -89
        var5 = module0.search(var4, var4)
    except BaseException:
        pass


def test_case_137():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'D]\x0bz,_GASb0:eB3'
        var17 = '$?'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '[EXR'
        var26 = module0.search(var25, var25)
        assert var26 == 4
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'JE\r\\L**#a'
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = '>3aFds@'
        var34 = '-+v96PI_(\\ha'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = 'T^3C?bb!hI'
        var37 = module0.search(var36, var36)
        assert var37 == 1
        var38 = '<'
        var39 = None
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_138():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'T^3C?bb!hI'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = '|u\nN2H(A\nO;Eo,4Cq['
        var24 = module0.search(var23, var21)
        assert var24 == 7
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = 'rCD'
        var28 = module0.search(var27, var27)
        assert var28 == 3
        var29 = 2063.4521
        var30 = False
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_139():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = 3411
        var23 = '|O'
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_140():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'D]\x0bz,_GASb0:eB3'
        var20 = '$?'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 572.3
        var25 = 'Q'
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_141():
    try:
        var0 = -1306
        var1 = 5130.872
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_142():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'T^3C?bb!hI'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = -207.1411
        var26 = module0.search(var14, var25)
    except BaseException:
        pass


def test_case_143():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = True
        var3 = module0.search(var2, var0)
    except BaseException:
        pass


def test_case_144():
    try:
        var0 = 5094
        var1 = -4424.387944
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_145():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = ' j:xB.yP.I&j@,'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'JE\r\\L**#a'
        var26 = module0.search(var23, var25)
        assert var26 == 0
        var27 = '>3aFds@'
        var28 = '-+v96PI_(\\ha'
        var29 = module0.search(var27, var28)
        assert var29 == 2
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'rCD'
        var39 = module0.search(var38, var38)
        assert var39 == 3
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = ' j:xB.yP.I&j@,'
        var43 = module0.search(var42, var42)
        assert var43 == 1
        var44 = '),:y\x0czrF<'
        var45 = 1569
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_146():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 95.0
        var10 = 'oDJ7*t'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_147():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = True
        var29 = module0.search(var9, var28)
    except BaseException:
        pass


def test_case_148():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 4045.4
        var18 = module0.search(var17, var2)
    except BaseException:
        pass


def test_case_149():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '#6 vp'
        var5 = None
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_150():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '>3aFds@'
        var22 = '-+v96PI_(\\ha'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'rCD'
        var25 = module0.search(var24, var24)
        assert var25 == 3
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = '|u\nN2H(A\nO;Eo,4Cq['
        var31 = module0.search(var30, var28)
        assert var31 == 7
        var32 = '[EXR'
        var33 = module0.search(var32, var32)
        assert var33 == 4
        var34 = 'l<,Z=SS'
        var35 = module0.search(var34, var34)
        assert var35 == 7
        var36 = True
        var37 = module0.search(var21, var36)
    except BaseException:
        pass


def test_case_151():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 744.49
        var7 = '\\?txQ'
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_152():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = 'rCD'
        var26 = module0.search(var25, var25)
        assert var26 == 3
        var27 = 1341.46181
        var28 = '#SCz$Rk\x0bi"'
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_153():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '|u\nN2H(A\nO;Eo,4Cq['
        var17 = module0.search(var16, var14)
        assert var17 == 7
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = '>3aFds@'
        var25 = '-+v96PI_(\\ha'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = 'l<,Z=SS'
        var30 = module0.search(var29, var29)
        assert var30 == 7
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'T^3C?bb!hI'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = False
        var36 = -2791.0
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_154():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '|u\nN2H(A\nO;Eo,4Cq['
        var18 = module0.search(var17, var15)
        assert var18 == 7
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'T^3C?bb!hI'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = '>3aFds@'
        var32 = '-+v96PI_(\\ha'
        var33 = module0.search(var31, var32)
        assert var33 == 2
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 'JE\r\\L**#a'
        var41 = module0.search(var38, var40)
        assert var41 == 0
        var42 = '[EXR'
        var43 = module0.search(var42, var42)
        assert var43 == 4
        var44 = False
        var45 = 'y*$\\]wzK=\x0bs\r'
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_155():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = '|u\nN2H(A\nO;Eo,4Cq['
        var26 = module0.search(var25, var23)
        assert var26 == 7
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = True
        var37 = 'W! oq`'
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_156():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'nM_0\r7;'
        var5 = None
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_157():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = None
        var18 = 'cEz,.V%,onN$xb&L*"'
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_158():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'l<,Z=SS'
        var34 = module0.search(var33, var33)
        assert var34 == 7
        var35 = 'D]\x0bz,_GASb0:eB3'
        var36 = '$?'
        var37 = module0.search(var35, var36)
        assert var37 == 2
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 70
        var41 = module0.search(var40, var6)
    except BaseException:
        pass


def test_case_159():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = '|u\nN2H(A\nO;Eo,4Cq['
        var24 = module0.search(var23, var21)
        assert var24 == 7
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 2871.08
        var30 = -541.0
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_160():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = 2713
        var24 = module0.search(var23, var23)
    except BaseException:
        pass


def test_case_161():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = '|u\nN2H(A\nO;Eo,4Cq['
        var11 = module0.search(var10, var8)
        assert var11 == 7
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = -2055.30085
        var24 = True
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_162():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 143
        var22 = True
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_163():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'f5b|'
        var26 = -525
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_164():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = '>3aFds@'
        var29 = '-+v96PI_(\\ha'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = ' j:xB.yP.I&j@,'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = 'l<,Z=SS'
        var36 = module0.search(var35, var35)
        assert var36 == 7
        var37 = 'D]\x0bz,_GASb0:eB3'
        var38 = '$?'
        var39 = module0.search(var37, var38)
        assert var39 == 2
        var40 = '[EXR'
        var41 = module0.search(var40, var40)
        assert var41 == 4
        var42 = 'l<,Z=SS'
        var43 = module0.search(var42, var42)
        assert var43 == 7
        var44 = -1366
        var45 = "\x0c\r'GK!E29k}"
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_165():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = 'rCD'
        var26 = module0.search(var25, var25)
        assert var26 == 3
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = ' j:xB.yP.I&j@,'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = 'l<,Z=SS'
        var36 = module0.search(var35, var35)
        assert var36 == 7
        var37 = 'D]\x0bz,_GASb0:eB3'
        var38 = '$?'
        var39 = module0.search(var37, var38)
        assert var39 == 2
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = 3142
        var43 = '~m@C'
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_166():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = '[EXR'
        var26 = module0.search(var25, var25)
        assert var26 == 4
        var27 = 'l<,Z=SS'
        var28 = module0.search(var27, var27)
        assert var28 == 7
        var29 = '|u\nN2H(A\nO;Eo,4Cq['
        var30 = module0.search(var29, var27)
        assert var30 == 7
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = 'rCD'
        var34 = module0.search(var33, var33)
        assert var34 == 3
        var35 = -2640
        var36 = module0.search(var35, var35)
    except BaseException:
        pass


def test_case_167():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 1605.473533
        var9 = -1376
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_168():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = 'T^3C?bb!hI'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = None
        var26 = False
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_169():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'JE\r\\L**#a'
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = '[EXR'
        var34 = module0.search(var33, var33)
        assert var34 == 4
        var35 = ' j:xB.yP.I&j@,'
        var36 = module0.search(var35, var35)
        assert var36 == 1
        var37 = 'l<,Z=SS'
        var38 = module0.search(var37, var37)
        assert var38 == 7
        var39 = 'D]\x0bz,_GASb0:eB3'
        var40 = '$?'
        var41 = module0.search(var39, var40)
        assert var41 == 2
        var42 = ' j:xB.yP.I&j@,'
        var43 = module0.search(var42, var42)
        assert var43 == 1
        var44 = False
        var45 = '~.By-lY*B;62T4'
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_170():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'T^3C?bb!hI'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = -223.75121
        var34 = ')F \nS}@W<ga'
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_171():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = -3734
        var15 = module0.search(var14, var2)
    except BaseException:
        pass


def test_case_172():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '|u\nN2H(A\nO;Eo,4Cq['
        var15 = module0.search(var14, var12)
        assert var15 == 7
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = None
        var19 = -2634
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_173():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 189.9
        var3 = 'wi[9A?rP$XJ@423D'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_174():
    try:
        var0 = -1117
        var1 = -2426
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_175():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = None
        var20 = module0.search(var19, var0)
    except BaseException:
        pass


def test_case_176():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = True
        var15 = -1430.488
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_177():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = True
        var13 = -1347.3
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_178():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = -804.8895
        var16 = '_F]gLF]4?#\x0cko'
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_179():
    try:
        var0 = 1442
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_180():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'D]\x0bz,_GASb0:eB3'
        var17 = '$?'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = 399
        var34 = 'n+wiv{@)]EV'
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_181():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 31
        var23 = 2109.67
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_182():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'rCD'
        var21 = module0.search(var20, var20)
        assert var21 == 3
        var22 = '[EXR'
        var23 = module0.search(var22, var22)
        assert var23 == 4
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = '|u\nN2H(A\nO;Eo,4Cq['
        var27 = module0.search(var26, var24)
        assert var27 == 7
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'T^3C?bb!hI'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = ' j:xB.yP.I&j@,'
        var41 = module0.search(var40, var40)
        assert var41 == 1
        var42 = -834
        var43 = -700
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_183():
    try:
        var0 = 'f6p\tEiRy'
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_184():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 674.71886
        var13 = module0.search(var12, var10)
    except BaseException:
        pass


def test_case_185():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = 'rCD'
        var28 = module0.search(var27, var27)
        assert var28 == 3
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'l<,Z=SS'
        var34 = module0.search(var33, var33)
        assert var34 == 7
        var35 = 'D]\x0bz,_GASb0:eB3'
        var36 = '$?'
        var37 = module0.search(var35, var36)
        assert var37 == 2
        var38 = -42.0
        var39 = None
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_186():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = '>3aFds@'
        var25 = '-+v96PI_(\\ha'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = -2081
        var28 = False
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_187():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = False
        var35 = ':8]z#BfBv\nou\n$}'
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_188():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = 151.42
        var22 = None
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_189():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = -380
        var19 = 'i\tkKWO%JH9?(9XXw2O\r'
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_190():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'T^3C?bb!hI'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'JE\r\\L**#a'
        var34 = module0.search(var31, var33)
        assert var34 == 0
        var35 = '>3aFds@'
        var36 = '-+v96PI_(\\ha'
        var37 = module0.search(var35, var36)
        assert var37 == 2
        var38 = 'rCD'
        var39 = module0.search(var38, var38)
        assert var39 == 3
        var40 = ']WUK\x0bvpm"'
        var41 = 1696.406
        var42 = module0.search(var40, var41)
    except BaseException:
        pass


def test_case_191():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = '>3aFds@'
        var10 = '-+v96PI_(\\ha'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '|u\nN2H(A\nO;Eo,4Cq['
        var21 = module0.search(var20, var18)
        assert var21 == 7
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = -914
        var31 = -3374
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_192():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = True
        var3 = 'Z'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_193():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'T^3C?bb!hI'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = '[EXR'
        var33 = module0.search(var32, var32)
        assert var33 == 4
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'l<,Z=SS'
        var37 = module0.search(var36, var36)
        assert var37 == 7
        var38 = 'D]\x0bz,_GASb0:eB3'
        var39 = '$?'
        var40 = module0.search(var38, var39)
        assert var40 == 2
        var41 = 551.567
        var42 = 2012
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_194():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '>3aFds@'
        var22 = '-+v96PI_(\\ha'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'T^3C?bb!hI'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = ' j:xB.yP.I&j@,'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'rCD'
        var31 = module0.search(var30, var30)
        assert var31 == 3
        var32 = 1157
        var33 = False
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_195():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'rCD'
        var26 = module0.search(var25, var25)
        assert var26 == 3
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = 'l<,Z=SS'
        var30 = module0.search(var29, var29)
        assert var30 == 7
        var31 = '|u\nN2H(A\nO;Eo,4Cq['
        var32 = module0.search(var31, var29)
        assert var32 == 7
        var33 = -1822
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = 'rCD'
        var37 = module0.search(var36, var36)
        assert var37 == 3
        var38 = -2243
        var39 = module0.search(var33, var38)
    except BaseException:
        pass


def test_case_196():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = 'T^3C?bb!hI'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = -566
        var29 = -1649
        var30 = module0.search(var28, var29)
    except BaseException:
        pass


def test_case_197():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 1108.44046
        var5 = '*z;1(O&QR>\t'
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_198():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = "SZh\x0blqu6&+'-I6"
        var16 = False
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_199():
    try:
        var0 = None
        var1 = 'NX4'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_200():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = -1923.1694
        var24 = 'sc46W.v2qV \\9\x0bS'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_201():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 3088.442
        var21 = '6V]HfUv R?oe?&Iob'
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_202():
    try:
        var0 = "u1kYN,En >RSn<P'^%bV"
        var1 = -270
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_203():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '|u\nN2H(A\nO;Eo,4Cq['
        var18 = module0.search(var17, var15)
        assert var18 == 7
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = ' j:xB.yP.I&j@,'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = -2448
        var26 = 'w?8RQ\r_Je4T)'
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_204():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = '[EXR'
        var26 = module0.search(var25, var25)
        assert var26 == 4
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = '>3aFds@'
        var37 = '-+v96PI_(\\ha'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = 'R.'
        var40 = module0.search(var39, var39)
        assert var40 == 2
        var41 = ' j:xB.yP.I&j@,'
        var42 = module0.search(var41, var41)
        assert var42 == 1
        var43 = 'JE\r\\L**#a'
        var44 = module0.search(var41, var43)
        assert var44 == 0
        var45 = module0.search(var27, var27)
    except BaseException:
        pass


def test_case_205():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = False
        var8 = False
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_206():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = False
        var3 = '\x0bF%nn\\!`|'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_207():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 2523
        var20 = None
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_208():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '|u\nN2H(A\nO;Eo,4Cq['
        var21 = module0.search(var20, var18)
        assert var21 == 7
        var22 = 'T^3C?bb!hI'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = 'R1qie=)pn\\)%l;*+'
        var37 = 292.23
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_209():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -809.331
        var4 = 'CVsN'
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_210():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = '>3aFds@'
        var14 = '-+v96PI_(\\ha'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = 'x=0hKBOa*x[gFy/L@j?'
        var17 = module0.search(var16, var4)
    except BaseException:
        pass


def test_case_211():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = -2216.8
        var12 = 'lBd_I'
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_212():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = False
        var15 = False
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_213():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = True
        var28 = module0.search(var17, var27)
    except BaseException:
        pass


def test_case_214():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = None
        var3 = 3466.504
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_215():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 'T^3C?bb!hI'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = ' j:xB.yP.I&j@,'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = 'D]\x0bz,_GASb0:eB3'
        var28 = '$?'
        var29 = module0.search(var27, var28)
        assert var29 == 2
        var30 = 900
        var31 = '}dfOcfc7WYfT-H1Y'
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_216():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = True
        var14 = module0.search(var2, var13)
    except BaseException:
        pass


def test_case_217():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 'rCD'
        var33 = module0.search(var32, var32)
        assert var33 == 3
        var34 = 'R.'
        var35 = module0.search(var34, var34)
        assert var35 == 2
        var36 = ' j:xB.yP.I&j@,'
        var37 = module0.search(var36, var36)
        assert var37 == 1
        var38 = 'JE\r\\L**#a'
        var39 = module0.search(var36, var38)
        assert var39 == 0
        var40 = 'R.'
        var41 = module0.search(var40, var40)
        assert var41 == 2
        var42 = -1822
        var43 = ''
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = 'X"m3f0P9'
        var46 = module0.search(var45, var42)
    except BaseException:
        pass


def test_case_218():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = True
        var3 = 'e\\z "ry/5\x0c0D'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_219():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = None
        var22 = module0.search(var21, var21)
    except BaseException:
        pass


def test_case_220():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = -1242
        var12 = 'NuS?uO'
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_221():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = "b?=\r*P?T(2'9z"
        var26 = '].ReP/'
        var27 = module0.search(var25, var26)
        assert var27 == 3
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 'JE\r\\L**#a'
        var33 = module0.search(var30, var32)
        assert var33 == 0
        var34 = '>3aFds@'
        var35 = '-+v96PI_(\\ha'
        var36 = module0.search(var34, var35)
        assert var36 == 2
        var37 = True
        var38 = module0.search(var37, var2)
    except BaseException:
        pass


def test_case_222():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = None
        var20 = module0.search(var10, var19)
    except BaseException:
        pass


def test_case_223():
    try:
        var0 = True
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_224():
    try:
        var0 = False
        var1 = -3372.0
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_225():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'rCD'
        var32 = module0.search(var31, var31)
        assert var32 == 3
        var33 = 'T^3C?bb!hI'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = None
        var36 = 'SrFQ2=@\t}B6WivPKAX'
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_226():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 1995.8
        var30 = module0.search(var29, var29)
    except BaseException:
        pass


def test_case_227():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = '[EXR'
        var23 = module0.search(var22, var22)
        assert var23 == 4
        var24 = -939.2454
        var25 = True
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_228():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = "b?=\r*P?T(2'9z"
        var8 = '].ReP/'
        var9 = module0.search(var7, var8)
        assert var9 == 3
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 'D]\x0bz,_GASb0:eB3'
        var25 = '$?'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = 'l<,Z=SS'
        var28 = module0.search(var27, var27)
        assert var28 == 7
        var29 = 'rCD'
        var30 = module0.search(var29, var29)
        assert var30 == 3
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = 'l<,Z=SS'
        var34 = module0.search(var33, var33)
        assert var34 == 7
        var35 = '|u\nN2H(A\nO;Eo,4Cq['
        var36 = module0.search(var35, var33)
        assert var36 == 7
        var37 = "*{Ni'(Y5WCn\x0c:\x0b"
        var38 = False
        var39 = module0.search(var37, var38)
    except BaseException:
        pass


def test_case_229():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '|u\nN2H(A\nO;Eo,4Cq['
        var17 = module0.search(var16, var14)
        assert var17 == 7
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = "b?=\r*P?T(2'9z"
        var35 = '].ReP/'
        var36 = module0.search(var34, var35)
        assert var36 == 3
        var37 = 'T^3C?bb!hI'
        var38 = module0.search(var37, var37)
        assert var38 == 1
        var39 = False
        var40 = None
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_230():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = True
        var3 = False
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_231():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 3371
        var3 = module0.search(var2, var2)
    except BaseException:
        pass


def test_case_232():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 201
        var5 = 440.02
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_233():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = "b?=\r*P?T(2'9z"
        var27 = '].ReP/'
        var28 = module0.search(var26, var27)
        assert var28 == 3
        var29 = None
        var30 = "Y'*gfcsOTyg^]2cH"
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_234():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = "b?=\r*P?T(2'9z"
        var9 = '].ReP/'
        var10 = module0.search(var8, var9)
        assert var10 == 3
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'JE\r\\L**#a'
        var34 = module0.search(var31, var33)
        assert var34 == 0
        var35 = '1zA"\'qR\\2aj>G7'
        var36 = None
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_235():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = "b?=\r*P?T(2'9z"
        var7 = '].ReP/'
        var8 = module0.search(var6, var7)
        assert var8 == 3
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'rCD'
        var21 = module0.search(var20, var20)
        assert var21 == 3
        var22 = True
        var23 = 3033.0
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_236():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = None
        var10 = 'VJG83['
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_237():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = "b?=\r*P?T(2'9z"
        var5 = '].ReP/'
        var6 = module0.search(var4, var5)
        assert var6 == 3
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'D]\x0bz,_GASb0:eB3'
        var20 = '$?'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = False
        var23 = module0.search(var22, var17)
    except BaseException:
        pass


def test_case_238():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = "b?=\r*P?T(2'9z"
        var16 = '].ReP/'
        var17 = module0.search(var15, var16)
        assert var17 == 3
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = True
        var21 = '+[r. JXo?aS5,3'
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_239():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = "$\n+`?A'L"
        var10 = module0.search(var9, var6)
    except BaseException:
        pass


def test_case_240():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = 'rCD'
        var29 = module0.search(var28, var28)
        assert var29 == 3
        var30 = '[EXR'
        var31 = module0.search(var30, var30)
        assert var31 == 4
        var32 = 'l<,Z=SS'
        var33 = module0.search(var32, var32)
        assert var33 == 7
        var34 = '|u\nN2H(A\nO;Eo,4Cq['
        var35 = module0.search(var34, var32)
        assert var35 == 7
        var36 = 'NPp2Gd-*Yr s)*RMWp'
        var37 = 1322.908266
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_241():
    try:
        var0 = False
        var1 = -1499
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_242():
    try:
        var0 = False
        var1 = 134.726
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_243():
    try:
        var0 = False
        var1 = 2273.1632
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_244():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'rCD'
        var29 = module0.search(var28, var28)
        assert var29 == 3
        var30 = -2203
        var31 = module0.search(var16, var30)
    except BaseException:
        pass


def test_case_245():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = "b?=\r*P?T(2'9z"
        var29 = '].ReP/'
        var30 = module0.search(var28, var29)
        assert var30 == 3
        var31 = 'rCD'
        var32 = module0.search(var31, var31)
        assert var32 == 3
        var33 = '[EXR'
        var34 = module0.search(var33, var33)
        assert var34 == 4
        var35 = 'l<,Z=SS'
        var36 = module0.search(var35, var35)
        assert var36 == 7
        var37 = '|u\nN2H(A\nO;Eo,4Cq['
        var38 = module0.search(var37, var35)
        assert var38 == 7
        var39 = 'R.'
        var40 = module0.search(var39, var39)
        assert var40 == 2
        var41 = -1470
        var42 = module0.search(var41, var35)
    except BaseException:
        pass


def test_case_246():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = 'T^3C?bb!hI'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = "b?=\r*P?T(2'9z"
        var32 = '].ReP/'
        var33 = module0.search(var31, var32)
        assert var33 == 3
        var34 = '\x0c{[p`Hqp:\x0bWnF97'
        var35 = -1384
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_247():
    try:
        var0 = '%kJDD6m< xh`i4=>\\'
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_248():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = 'T^3C?bb!hI'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = -1129
        var28 = '8r6<r=?H%ik['
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_249():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 841.88
        var18 = module0.search(var17, var17)
    except BaseException:
        pass


def test_case_250():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 1494
        var10 = module0.search(var9, var0)
    except BaseException:
        pass


def test_case_251():
    try:
        var0 = False
        var1 = '?H>cC+S8J\n<'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_252():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = True
        var24 = module0.search(var4, var23)
    except BaseException:
        pass


def test_case_253():
    try:
        var0 = 2615.43
        var1 = -1030.39
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_254():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'E\x0c'
        var13 = True
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_255():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '|u\nN2H(A\nO;Eo,4Cq['
        var21 = module0.search(var20, var18)
        assert var21 == 7
        var22 = True
        var23 = 3088.45118
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_256():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'K9\r'
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = False
        var15 = '\n`0;@'
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_257():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = "b?=\r*P?T(2'9z"
        var6 = '].ReP/'
        var7 = module0.search(var5, var6)
        assert var7 == 3
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = '>3aFds@'
        var29 = '-+v96PI_(\\ha'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = -47.21548
        var32 = module0.search(var31, var12)
    except BaseException:
        pass


def test_case_258():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '>3aFds@'
        var30 = '-+v96PI_(\\ha'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 'rCD'
        var33 = module0.search(var32, var32)
        assert var33 == 3
        var34 = '[EXR'
        var35 = module0.search(var34, var34)
        assert var35 == 4
        var36 = ' j:xB.yP.I&j@,'
        var37 = module0.search(var36, var36)
        assert var37 == 1
        var38 = 'l<,Z=SS'
        var39 = module0.search(var38, var38)
        assert var39 == 7
        var40 = 'D]\x0bz,_GASb0:eB3'
        var41 = '$?'
        var42 = module0.search(var40, var41)
        assert var42 == 2
        var43 = "b?=\r*P?T(2'9z"
        var44 = '].ReP/'
        var45 = module0.search(var43, var44)
        assert var45 == 3
        var46 = '7K-(}4y\t=sz</'
        var47 = -4844
        var48 = module0.search(var46, var47)
    except BaseException:
        pass


def test_case_259():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 1099
        var12 = -783
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_260():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'D]\x0bz,_GASb0:eB3'
        var17 = '$?'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 'rCD'
        var25 = module0.search(var24, var24)
        assert var25 == 3
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = -1508.9681
        var29 = 615
        var30 = module0.search(var28, var29)
    except BaseException:
        pass


def test_case_261():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = True
        var15 = module0.search(var0, var14)
    except BaseException:
        pass


def test_case_262():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = '>3aFds@'
        var14 = '-+v96PI_(\\ha'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = False
        var23 = -1507.01278
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_263():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '^ykH6k}'
        var5 = 330
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_264():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = False
        var10 = False
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_265():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = '|u\nN2H(A\nO;Eo,4Cq['
        var11 = module0.search(var10, var8)
        assert var11 == 7
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = 1596
        var19 = 'SNBW\x0bU^_'
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_266():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = 'KvtF)>.3\\4\\!|j6?)'
        var8 = 648.34412
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_267():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = "b?=\r*P?T(2'9z"
        var21 = '].ReP/'
        var22 = module0.search(var20, var21)
        assert var22 == 3
        var23 = 0
        var24 = module0.search(var23, var23)
    except BaseException:
        pass


def test_case_268():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = True
        var19 = module0.search(var18, var18)
    except BaseException:
        pass


def test_case_269():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '|u\nN2H(A\nO;Eo,4Cq['
        var21 = module0.search(var20, var18)
        assert var21 == 7
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = '>3aFds@'
        var29 = '-+v96PI_(\\ha'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = 'l<,Z=SS'
        var34 = module0.search(var33, var33)
        assert var34 == 7
        var35 = False
        var36 = -4868.12991
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_270():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 200.606
        var24 = module0.search(var23, var23)
    except BaseException:
        pass


def test_case_271():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = -2128.07947
        var18 = True
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_272():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = -2285.837997
        var12 = module0.search(var11, var6)
    except BaseException:
        pass


def test_case_273():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = '|u\nN2H(A\nO;Eo,4Cq['
        var29 = module0.search(var28, var26)
        assert var29 == 7
        var30 = 2940.785
        var31 = 'igbsSr\\8f&9&s#'
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_274():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 't'
        var15 = '\x0c6\t0r{_UF'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'K9\r'
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = '|u\nN2H(A\nO;Eo,4Cq['
        var29 = module0.search(var28, var26)
        assert var29 == 7
        var30 = 'T^3C?bb!hI'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = False
        var33 = module0.search(var32, var32)
    except BaseException:
        pass


def test_case_275():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 'JE\r\\L**#a'
        var33 = module0.search(var30, var32)
        assert var33 == 0
        var34 = '>3aFds@'
        var35 = '-+v96PI_(\\ha'
        var36 = module0.search(var34, var35)
        assert var36 == 2
        var37 = '#<h'
        var38 = False
        var39 = module0.search(var37, var38)
    except BaseException:
        pass


def test_case_276():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = "b?=\r*P?T(2'9z"
        var5 = '].ReP/'
        var6 = module0.search(var4, var5)
        assert var6 == 3
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '>3aFds@'
        var16 = '-+v96PI_(\\ha'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = 'rCD'
        var25 = module0.search(var24, var24)
        assert var25 == 3
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = '|u\nN2H(A\nO;Eo,4Cq['
        var31 = module0.search(var30, var28)
        assert var31 == 7
        var32 = -1822
        var33 = ''
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = 'R.'
        var36 = module0.search(var35, var35)
        assert var36 == 2
        var37 = '\r6x<p.-~IVj~(}J'
        var38 = None
        var39 = module0.search(var37, var38)
    except BaseException:
        pass


def test_case_277():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 189
        var5 = 1987.45476
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_278():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = 'I\n\x0bv//3'
        var14 = True
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_279():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'K9\r'
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = '["Y98'
        var23 = 514.8
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_280():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = -214.8603
        var24 = False
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_281():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = False
        var22 = -1659.01
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_282():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = "b?=\r*P?T(2'9z"
        var8 = '].ReP/'
        var9 = module0.search(var7, var8)
        assert var9 == 3
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '|u\nN2H(A\nO;Eo,4Cq['
        var17 = module0.search(var16, var14)
        assert var17 == 7
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = -1680
        var30 = 3448.2
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_283():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'nwmpP?i_(!B?4ax_;OH'
        var18 = -2636.6499
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_284():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = "b?=\r*P?T(2'9z"
        var21 = '].ReP/'
        var22 = module0.search(var20, var21)
        assert var22 == 3
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = 'K9\r'
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = -1822
        var33 = ''
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = 't'
        var36 = '\x0c6\t0r{_UF'
        var37 = module0.search(var35, var36)
        assert var37 == 5
        var38 = None
        var39 = -1754
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_285():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = -936
        var11 = 1005
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_286():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = None
        var9 = 'zzd3=?N1p7\\Z2'
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_287():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1172.668299
        var3 = -738.1485
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_288():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = "b?=\r*P?T(2'9z"
        var26 = '].ReP/'
        var27 = module0.search(var25, var26)
        assert var27 == 3
        var28 = -1822
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = "h=0TKIXH@h5wrD'"
        var32 = module0.search(var28, var31)
    except BaseException:
        pass


def test_case_289():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 't'
        var24 = '\x0c6\t0r{_UF'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = True
        var27 = module0.search(var3, var26)
    except BaseException:
        pass


def test_case_290():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = None
        var9 = module0.search(var0, var8)
    except BaseException:
        pass


def test_case_291():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = ' j:xB.yP.I&j@,'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = 't'
        var29 = '\x0c6\t0r{_UF'
        var30 = module0.search(var28, var29)
        assert var30 == 5
        var31 = -1822
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = 'rCD'
        var35 = module0.search(var34, var34)
        assert var35 == 3
        var36 = -70.463
        var37 = -2814
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_292():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = 'D]\x0bz,_GASb0:eB3'
        var18 = '$?'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = 'K9\r'
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'rCD'
        var26 = module0.search(var25, var25)
        assert var26 == 3
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = 'l<,Z=SS'
        var30 = module0.search(var29, var29)
        assert var30 == 7
        var31 = '|u\nN2H(A\nO;Eo,4Cq['
        var32 = module0.search(var31, var29)
        assert var32 == 7
        var33 = 'i!?g\n'
        var34 = -6378.0
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_293():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = '":\rWr!0L#0&}`]ej'
        var26 = None
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_294():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 333.608
        var20 = "X\\rmcktod.,9'"
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_295():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 3724
        var6 = module0.search(var0, var5)
    except BaseException:
        pass


def test_case_296():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = '>3aFds@'
        var14 = '-+v96PI_(\\ha'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = "b?=\r*P?T(2'9z"
        var27 = '].ReP/'
        var28 = module0.search(var26, var27)
        assert var28 == 3
        var29 = module0.search(var18, var0)
    except BaseException:
        pass


def test_case_297():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = None
        var3 = False
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_298():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = -890.783
        var13 = 1645
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_299():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = None
        var23 = module0.search(var2, var22)
    except BaseException:
        pass


def test_case_300():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = 'VHg=2T"\r<H?\t/0$'
        var27 = module0.search(var26, var0)
    except BaseException:
        pass


def test_case_301():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = -614
        var3 = ',(ti<(z5$4ko:p.[\r;q6'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_302():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = "b?=\r*P?T(2'9z"
        var20 = '].ReP/'
        var21 = module0.search(var19, var20)
        assert var21 == 3
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'D]\x0bz,_GASb0:eB3'
        var31 = '$?'
        var32 = module0.search(var30, var31)
        assert var32 == 2
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = ' j:xB.yP.I&j@,'
        var36 = module0.search(var35, var35)
        assert var36 == 1
        var37 = 'JE\r\\L**#a'
        var38 = module0.search(var35, var37)
        assert var38 == 0
        var39 = 1597.8273
        var40 = -2471
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_303():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '\x0cD9o[z3'
        var9 = None
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_304():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = '|u\nN2H(A\nO;Eo,4Cq['
        var26 = module0.search(var25, var23)
        assert var26 == 7
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 't'
        var31 = '\x0c6\t0r{_UF'
        var32 = module0.search(var30, var31)
        assert var32 == 5
        var33 = 'T^3C?bb!hI'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = True
        var36 = module0.search(var35, var23)
    except BaseException:
        pass


def test_case_305():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 't'
        var20 = '\x0c6\t0r{_UF'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = '[EXR'
        var23 = module0.search(var22, var22)
        assert var23 == 4
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = 'D]\x0bz,_GASb0:eB3'
        var29 = '$?'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = 'rCD'
        var32 = module0.search(var31, var31)
        assert var32 == 3
        var33 = '[EXR'
        var34 = module0.search(var33, var33)
        assert var34 == 4
        var35 = 'l<,Z=SS'
        var36 = module0.search(var35, var35)
        assert var36 == 7
        var37 = '|u\nN2H(A\nO;Eo,4Cq['
        var38 = module0.search(var37, var35)
        assert var38 == 7
        var39 = 'l<,Z=SS'
        var40 = module0.search(var39, var39)
        assert var40 == 7
        var41 = 'R.'
        var42 = module0.search(var41, var41)
        assert var42 == 2
        var43 = 'K9\r'
        var44 = ''
        var45 = module0.search(var43, var44)
        assert var45 == 0
        var46 = '#N0p\tg6u8kI(w|R'
        var47 = module0.search(var16, var46)
    except BaseException:
        pass


def test_case_306():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = "b?=\r*P?T(2'9z"
        var9 = '].ReP/'
        var10 = module0.search(var8, var9)
        assert var10 == 3
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 't'
        var19 = '\x0c6\t0r{_UF'
        var20 = module0.search(var18, var19)
        assert var20 == 5
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = False
        var30 = module0.search(var15, var29)
    except BaseException:
        pass


def test_case_307():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = '>3aFds@'
        var14 = '-+v96PI_(\\ha'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = "b?=\r*P?T(2'9z"
        var19 = '].ReP/'
        var20 = module0.search(var18, var19)
        assert var20 == 3
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = 'K9\r'
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'rCD'
        var31 = module0.search(var30, var30)
        assert var31 == 3
        var32 = '[EXR'
        var33 = module0.search(var32, var32)
        assert var33 == 4
        var34 = 'l<,Z=SS'
        var35 = module0.search(var34, var34)
        assert var35 == 7
        var36 = '|u\nN2H(A\nO;Eo,4Cq['
        var37 = module0.search(var36, var34)
        assert var37 == 7
        var38 = False
        var39 = module0.search(var38, var2)
    except BaseException:
        pass


def test_case_308():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = "b?=\r*P?T(2'9z"
        var18 = '].ReP/'
        var19 = module0.search(var17, var18)
        assert var19 == 3
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = False
        var23 = None
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_309():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'D]\x0bz,_GASb0:eB3'
        var12 = '$?'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = '|u\nN2H(A\nO;Eo,4Cq['
        var26 = module0.search(var25, var23)
        assert var26 == 7
        var27 = 826.7208
        var28 = module0.search(var27, var27)
    except BaseException:
        pass


def test_case_310():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "b?=\r*P?T(2'9z"
        var4 = '].ReP/'
        var5 = module0.search(var3, var4)
        assert var5 == 3
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = None
        var11 = module0.search(var10, var8)
    except BaseException:
        pass


def test_case_311():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = -1482.41
        var4 = True
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_312():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'K9\r'
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -2483
        var17 = 2973.188947
        var18 = module0.search(var16, var17)
    except BaseException:
        pass


def test_case_313():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'v5.q'
        var7 = '-H)>J'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 't'
        var13 = '\x0c6\t0r{_UF'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = "b?=\r*P?T(2'9z"
        var16 = '].ReP/'
        var17 = module0.search(var15, var16)
        assert var17 == 3
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = 313.0
        var24 = 'ABp3)OXP;%|.Fc0N?c'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_314():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = -3567
        var6 = None
        var7 = module0.search(var5, var6)
    except BaseException:
        pass


def test_case_315():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = True
        var10 = 1193.94981
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_316():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'D]\x0bz,_GASb0:eB3'
        var12 = '$?'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = '}b2b6Y=MM| '
        var26 = 'K/I\tKH;La'
        var27 = module0.search(var25, var26)
        assert var27 == 9
        var28 = 'v5.q'
        var29 = '-H)>J'
        var30 = module0.search(var28, var29)
        assert var30 == 5
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = None
        var34 = -3935
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_317():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '>3aFds@'
        var22 = '-+v96PI_(\\ha'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 996
        var28 = 1077
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_318():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = 'K9\r'
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = '}b2b6Y=MM| '
        var11 = 'K/I\tKH;La'
        var12 = module0.search(var10, var11)
        assert var12 == 9
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = '|u\nN2H(A\nO;Eo,4Cq['
        var29 = module0.search(var28, var26)
        assert var29 == 7
        var30 = 'rCD'
        var31 = module0.search(var30, var30)
        assert var31 == 3
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'l<,Z=SS'
        var35 = module0.search(var34, var34)
        assert var35 == 7
        var36 = -2381.2
        var37 = 'em!Ph\nzF.6V'
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_319():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = "b?=\r*P?T(2'9z"
        var5 = '].ReP/'
        var6 = module0.search(var4, var5)
        assert var6 == 3
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'clN O\x0cIU[\rPc8'
        var24 = -1529.4
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_320():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = None
        var6 = module0.search(var0, var5)
    except BaseException:
        pass


def test_case_321():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = "b?=\r*P?T(2'9z"
        var18 = '].ReP/'
        var19 = module0.search(var17, var18)
        assert var19 == 3
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = '>3aFds@'
        var37 = '-+v96PI_(\\ha'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = -2530
        var40 = True
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_322():
    try:
        var0 = 446.0
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_323():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = '}b2b6Y=MM| '
        var22 = 'K/I\tKH;La'
        var23 = module0.search(var21, var22)
        assert var23 == 9
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = ' j:xB.yP.I&j@,'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'l<,Z=SS'
        var31 = module0.search(var30, var30)
        assert var31 == 7
        var32 = 'D]\x0bz,_GASb0:eB3'
        var33 = '$?'
        var34 = module0.search(var32, var33)
        assert var34 == 2
        var35 = ' j:xB.yP.I&j@,'
        var36 = module0.search(var35, var35)
        assert var36 == 1
        var37 = 'v5.q'
        var38 = '-H)>J'
        var39 = module0.search(var37, var38)
        assert var39 == 5
        var40 = True
        var41 = -323
        var42 = module0.search(var40, var41)
    except BaseException:
        pass


def test_case_324():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = -4522.7197
        var9 = None
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_325():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 't'
        var6 = '\x0c6\t0r{_UF'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = '}b2b6Y=MM| '
        var22 = 'K/I\tKH;La'
        var23 = module0.search(var21, var22)
        assert var23 == 9
        var24 = '\rHUr'
        var25 = 634.7524
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_326():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = "b?=\r*P?T(2'9z"
        var13 = '].ReP/'
        var14 = module0.search(var12, var13)
        assert var14 == 3
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 't'
        var27 = '\x0c6\t0r{_UF'
        var28 = module0.search(var26, var27)
        assert var28 == 5
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = 'K9\r'
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = 'v5.q'
        var35 = '-H)>J'
        var36 = module0.search(var34, var35)
        assert var36 == 5
        var37 = 'dp1!!'
        var38 = module0.search(var37, var0)
    except BaseException:
        pass


def test_case_327():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'v5.q'
        var11 = '-H)>J'
        var12 = module0.search(var10, var11)
        assert var12 == 5
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'D]\x0bz,_GASb0:eB3'
        var31 = '$?'
        var32 = module0.search(var30, var31)
        assert var32 == 2
        var33 = '}b2b6Y=MM| '
        var34 = 'K/I\tKH;La'
        var35 = module0.search(var33, var34)
        assert var35 == 9
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'K9\r'
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = "b?=\r*P?T(2'9z"
        var42 = '].ReP/'
        var43 = module0.search(var41, var42)
        assert var43 == 3
        var44 = -1896.544135
        var45 = 1612
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_328():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = -1515
        var4 = 'w?dyY<P6@qsDxv>A3X<p'
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_329():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = '}b2b6Y=MM| '
        var17 = 'K/I\tKH;La'
        var18 = module0.search(var16, var17)
        assert var18 == 9
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = '>3aFds@'
        var32 = '-+v96PI_(\\ha'
        var33 = module0.search(var31, var32)
        assert var33 == 2
        var34 = '[EXR'
        var35 = module0.search(var34, var34)
        assert var35 == 4
        var36 = '[EXR'
        var37 = module0.search(var36, var36)
        assert var37 == 4
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = 'D]\x0bz,_GASb0:eB3'
        var43 = '$?'
        var44 = module0.search(var42, var43)
        assert var44 == 2
        var45 = False
        var46 = -1540
        var47 = module0.search(var45, var46)
    except BaseException:
        pass


def test_case_330():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'K9\r'
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = -41.72637
        var19 = 1666.211435
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_331():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'T^3C?bb!hI'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = True
        var26 = 514.806
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_332():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = 'K9\r'
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'v5.q'
        var20 = '-H)>J'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = -1460.18
        var25 = None
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_333():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'T^3C?bb!hI'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'JE\r\\L**#a'
        var30 = module0.search(var27, var29)
        assert var30 == 0
        var31 = -1822
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = -578.8
        var35 = module0.search(var0, var34)
    except BaseException:
        pass


def test_case_334():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'v5.q'
        var6 = '-H)>J'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = '}b2b6Y=MM| '
        var22 = 'K/I\tKH;La'
        var23 = module0.search(var21, var22)
        assert var23 == 9
        var24 = True
        var25 = '0\x0b6L\x0b`Y^OVvKOmVCRM)w'
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_335():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'K9\r'
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'l<,Z=SS'
        var28 = module0.search(var27, var27)
        assert var28 == 7
        var29 = 'D]\x0bz,_GASb0:eB3'
        var30 = '$?'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = 'T^3C?bb!hI'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = True
        var35 = False
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_336():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = False
        var3 = '\n '
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_337():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = 'D]\x0bz,_GASb0:eB3'
        var18 = '$?'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 'T^3C?bb!hI'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = 'l<,Z=SS'
        var31 = module0.search(var30, var30)
        assert var31 == 7
        var32 = module0.search(var8, var13)
    except BaseException:
        pass


def test_case_338():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = -1045.052352
        var19 = 'X}\t_<&rOmP,|/uU#Y-u'
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_339():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'D]\x0bz,_GASb0:eB3'
        var12 = '$?'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = '>3aFds@'
        var25 = '-+v96PI_(\\ha'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = 'rCD'
        var28 = module0.search(var27, var27)
        assert var28 == 3
        var29 = 'v5.q'
        var30 = '-H)>J'
        var31 = module0.search(var29, var30)
        assert var31 == 5
        var32 = 'v*!)_Ffha4\r!\t*kjt'
        var33 = -3662.0
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_340():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = True
        var10 = 1231
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_341():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = "b?=\r*P?T(2'9z"
        var12 = '].ReP/'
        var13 = module0.search(var11, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = 'NR\tn0A%C\\-\\'
        var30 = module0.search(var29, var0)
    except BaseException:
        pass


def test_case_342():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = None
        var3 = 'e%h'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_343():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 't'
        var10 = '\x0c6\t0r{_UF'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = 2188.4926
        var21 = '0P'
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_344():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 2618.87927
        var4 = False
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_345():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 'K9\r'
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'lQw;j$s[d$fzt71B~Z~'
        var21 = -2085.35
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_346():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = None
        var8 = None
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_347():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = '>3aFds@'
        var11 = '-+v96PI_(\\ha'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 't'
        var17 = '\x0c6\t0r{_UF'
        var18 = module0.search(var16, var17)
        assert var18 == 5
        var19 = "b?=\r*P?T(2'9z"
        var20 = '].ReP/'
        var21 = module0.search(var19, var20)
        assert var21 == 3
        var22 = 'v5.q'
        var23 = '-H)>J'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = '[EXR'
        var26 = module0.search(var25, var25)
        assert var26 == 4
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'l<,Z=SS'
        var30 = module0.search(var29, var29)
        assert var30 == 7
        var31 = 'D]\x0bz,_GASb0:eB3'
        var32 = '$?'
        var33 = module0.search(var31, var32)
        assert var33 == 2
        var34 = '}b2b6Y=MM| '
        var35 = 'K/I\tKH;La'
        var36 = module0.search(var34, var35)
        assert var36 == 9
        var37 = 'R.'
        var38 = module0.search(var37, var37)
        assert var38 == 2
        var39 = 'K9\r'
        var40 = ''
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = 'l<,Z=SS'
        var43 = module0.search(var42, var42)
        assert var43 == 7
        var44 = None
        var45 = module0.search(var44, var13)
    except BaseException:
        pass


def test_case_348():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = '}b2b6Y=MM| '
        var5 = 'K/I\tKH;La'
        var6 = module0.search(var4, var5)
        assert var6 == 9
        var7 = 'v5.q'
        var8 = '-H)>J'
        var9 = module0.search(var7, var8)
        assert var9 == 5
        var10 = False
        var11 = True
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_349():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'v5.q'
        var18 = '-H)>J'
        var19 = module0.search(var17, var18)
        assert var19 == 5
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = 'K9\r'
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 'Fb9:-KTx#|r<9\x0bk'
        var31 = module0.search(var30, var22)
    except BaseException:
        pass


def test_case_350():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'v5.q'
        var10 = '-H)>J'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = -1667
        var19 = -818
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_351():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'v5.q'
        var4 = '-H)>J'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = "b?=\r*P?T(2'9z"
        var19 = '].ReP/'
        var20 = module0.search(var18, var19)
        assert var20 == 3
        var21 = 3728.204
        var22 = module0.search(var21, var21)
    except BaseException:
        pass


def test_case_352():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = 'K9\r'
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'JE\r\\L**#a'
        var34 = module0.search(var31, var33)
        assert var34 == 0
        var35 = '[EXR'
        var36 = module0.search(var35, var35)
        assert var36 == 4
        var37 = 1757.0
        var38 = None
        var39 = module0.search(var37, var38)
    except BaseException:
        pass


def test_case_353():
    try:
        var0 = 'hY'
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_354():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 't'
        var12 = '\x0c6\t0r{_UF'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = 'v5.q'
        var21 = '-H)>J'
        var22 = module0.search(var20, var21)
        assert var22 == 5
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = None
        var28 = module0.search(var27, var8)
    except BaseException:
        pass


def test_case_355():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = False
        var3 = -4444.0
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_356():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '|u\nN2H(A\nO;Eo,4Cq['
        var18 = module0.search(var17, var15)
        assert var18 == 7
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = False
        var22 = 870
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_357():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = False
        var12 = module0.search(var11, var4)
    except BaseException:
        pass


def test_case_358():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = '-=rDJ}QB%~hIA'
        var23 = module0.search(var20, var22)
        assert var23 == 2
        var24 = False
        var25 = '373dXl'
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_359():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = '|u\nN2H(A\nO;Eo,4Cq['
        var23 = module0.search(var22, var20)
        assert var23 == 7
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = '>3aFds@'
        var31 = '-+v96PI_(\\ha'
        var32 = module0.search(var30, var31)
        assert var32 == 2
        var33 = True
        var34 = "bS_E'\rg]v%i"
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_360():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -951
        var10 = module0.search(var9, var7)
        assert var10 == 0
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = 'T^3C?bb!hI'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = False
        var24 = 'cTE]x&+Gi0'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_361():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = ' j:xB.yP.I&j@,'
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = 'D]\x0bz,_GASb0:eB3'
        var28 = '$?'
        var29 = module0.search(var27, var28)
        assert var29 == 2
        var30 = '}b2b6Y=MM| '
        var31 = 'K/I\tKH;La'
        var32 = module0.search(var30, var31)
        assert var32 == 9
        var33 = '[EXR'
        var34 = module0.search(var33, var33)
        assert var34 == 4
        var35 = -1822
        var36 = ''
        var37 = module0.search(var35, var36)
        assert var37 == 0
        var38 = -951
        var39 = module0.search(var38, var36)
        assert var39 == 0
        var40 = -1822
        var41 = ''
        var42 = module0.search(var40, var41)
        assert var42 == 0
        var43 = 1501.969227
        var44 = module0.search(var35, var43)
    except BaseException:
        pass


def test_case_362():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'v5.q'
        var10 = '-H)>J'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = '}b2b6Y=MM| '
        var15 = 'K/I\tKH;La'
        var16 = module0.search(var14, var15)
        assert var16 == 9
        var17 = '8(GXt@.'
        var18 = 3640
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_363():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = True
        var4 = -3982.375819
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_364():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = -1897.946442
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'v5.q'
        var19 = '-H)>J'
        var20 = module0.search(var18, var19)
        assert var20 == 5
        var21 = '6?1R7)0'
        var22 = True
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_365():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = -1897.946442
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = module0.search(var14, var9)
    except BaseException:
        pass


def test_case_366():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = 'v5.q'
        var24 = '-H)>J'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = 'fmH\x0crZ5f<'
        var27 = False
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_367():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1088
        var9 = -206.1503
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_368():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 703
        var6 = module0.search(var5, var5)
    except BaseException:
        pass


def test_case_369():
    try:
        var0 = '@7pRU"^=G/cgg'
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_370():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = '-=rDJ}QB%~hIA'
        var15 = module0.search(var12, var14)
        assert var15 == 2
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'zxInQ\x0bd_PP\nm8v??\t'
        var21 = False
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_371():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = "b?=\r*P?T(2'9z"
        var8 = '].ReP/'
        var9 = module0.search(var7, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1897.946442
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 'D]\x0bz,_GASb0:eB3'
        var25 = '$?'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 336
        var30 = 'r:'
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_372():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '|u\nN2H(A\nO;Eo,4Cq['
        var15 = module0.search(var14, var12)
        assert var15 == 7
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = '}b2b6Y=MM| '
        var21 = 'K/I\tKH;La'
        var22 = module0.search(var20, var21)
        assert var22 == 9
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = True
        var27 = ';UZxM|aJb.5Mq9;\no'
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_373():
    try:
        var0 = False
        var1 = "8'?P>?`;.["
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_374():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'v5.q'
        var20 = '-H)>J'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 't'
        var26 = '\x0c6\t0r{_UF'
        var27 = module0.search(var25, var26)
        assert var27 == 5
        var28 = 'rCD'
        var29 = module0.search(var28, var28)
        assert var29 == 3
        var30 = 1470
        var31 = '[q~;Y~=o z.<Sus[%?=.'
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_375():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '-=rDJ}QB%~hIA'
        var12 = module0.search(var9, var11)
        assert var12 == 2
        var13 = '}b2b6Y=MM| '
        var14 = 'K/I\tKH;La'
        var15 = module0.search(var13, var14)
        assert var15 == 9
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = "b?=\r*P?T(2'9z"
        var25 = '].ReP/'
        var26 = module0.search(var24, var25)
        assert var26 == 3
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = '>3aFds@'
        var37 = '-+v96PI_(\\ha'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = '5<^'
        var40 = True
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_376():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = -1897.946442
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'K9\r'
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -951
        var21 = module0.search(var20, var18)
        assert var21 == 0
        var22 = 'WDP\x0bXwo+'
        var23 = True
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_377():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'v5.q'
        var12 = '-H)>J'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '}b2b6Y=MM| '
        var17 = 'K/I\tKH;La'
        var18 = module0.search(var16, var17)
        assert var18 == 9
        var19 = False
        var20 = -3378.24
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_378():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = "b?=\r*P?T(2'9z"
        var14 = '].ReP/'
        var15 = module0.search(var13, var14)
        assert var15 == 3
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = ' j:xB.yP.I&j@,'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'JE\r\\L**#a'
        var31 = module0.search(var28, var30)
        assert var31 == 0
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'JE\r\\L**#a'
        var37 = module0.search(var34, var36)
        assert var37 == 0
        var38 = '>3aFds@'
        var39 = '-+v96PI_(\\ha'
        var40 = module0.search(var38, var39)
        assert var40 == 2
        var41 = 'O)9&{v>{u:@'
        var42 = None
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_379():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = "/O:fWz'jaTkP^N%]"
        var6 = -1221.681432
        var7 = module0.search(var5, var6)
    except BaseException:
        pass


def test_case_380():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1897.946442
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = '#vt{xtS1}VY'
        var8 = False
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_381():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = 'K9\r'
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = -1822
        var31 = ''
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = '}b2b6Y=MM| '
        var34 = 'K/I\tKH;La'
        var35 = module0.search(var33, var34)
        assert var35 == 9
        var36 = 'l<,Z=SS'
        var37 = module0.search(var36, var36)
        assert var37 == 7
        var38 = 'R.'
        var39 = module0.search(var38, var38)
        assert var39 == 2
        var40 = '-=rDJ}QB%~hIA'
        var41 = module0.search(var38, var40)
        assert var41 == 2
        var42 = True
        var43 = 3735.841699
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_382():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = 'v5.q'
        var7 = '-H)>J'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = -1897.946442
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = '}b2b6Y=MM| '
        var24 = 'K/I\tKH;La'
        var25 = module0.search(var23, var24)
        assert var25 == 9
        var26 = '2*Y,t?)i\t'
        var27 = module0.search(var26, var9)
    except BaseException:
        pass


def test_case_383():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'v5.q'
        var7 = '-H)>J'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -951
        var18 = module0.search(var17, var15)
        assert var18 == 0
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'K9\r'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = -280
        var30 = -5578
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_384():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = False
        var9 = None
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_385():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = -1897.946442
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'K9\r'
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 'T^3C?bb!hI'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 3795
        var25 = True
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_386():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '}b2b6Y=MM| '
        var11 = 'K/I\tKH;La'
        var12 = module0.search(var10, var11)
        assert var12 == 9
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'D]\x0bz,_GASb0:eB3'
        var20 = '$?'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -951
        var26 = module0.search(var25, var23)
        assert var26 == 0
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'JE\r\\L**#a'
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = '>3aFds@'
        var34 = '-+v96PI_(\\ha'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'K9\r'
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 506.5661
        var42 = module0.search(var41, var41)
    except BaseException:
        pass


def test_case_387():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = '-=rDJ}QB%~hIA'
        var14 = module0.search(var11, var13)
        assert var14 == 2
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = '>3aFds@'
        var31 = '-+v96PI_(\\ha'
        var32 = module0.search(var30, var31)
        assert var32 == 2
        var33 = "b?=\r*P?T(2'9z"
        var34 = '].ReP/'
        var35 = module0.search(var33, var34)
        assert var35 == 3
        var36 = False
        var37 = module0.search(var36, var15)
    except BaseException:
        pass


def test_case_388():
    try:
        var0 = -1234
        var1 = -4814.166563
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_389():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -1897.946442
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = -589
        var13 = -1152.01
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_390():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '-=rDJ}QB%~hIA'
        var11 = module0.search(var8, var10)
        assert var11 == 2
        var12 = -1897.946442
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 't'
        var19 = '\x0c6\t0r{_UF'
        var20 = module0.search(var18, var19)
        assert var20 == 5
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = 'K9\r'
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'rCD'
        var27 = module0.search(var26, var26)
        assert var27 == 3
        var28 = '[EXR'
        var29 = module0.search(var28, var28)
        assert var29 == 4
        var30 = 'l<,Z=SS'
        var31 = module0.search(var30, var30)
        assert var31 == 7
        var32 = '|u\nN2H(A\nO;Eo,4Cq['
        var33 = module0.search(var32, var30)
        assert var33 == 7
        var34 = 'rCD'
        var35 = module0.search(var34, var34)
        assert var35 == 3
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 'JE\r\\L**#a'
        var41 = module0.search(var38, var40)
        assert var41 == 0
        var42 = '>3aFds@'
        var43 = '-+v96PI_(\\ha'
        var44 = module0.search(var42, var43)
        assert var44 == 2
        var45 = 'l<,Z=SS'
        var46 = module0.search(var45, var45)
        assert var46 == 7
        var47 = module0.search(var0, var15)
    except BaseException:
        pass


def test_case_391():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'v5.q'
        var10 = '-H)>J'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = -1822
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = '6AWPA=Ijks?t0G<I#B7'
        var32 = 374
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_392():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "b?=\r*P?T(2'9z"
        var6 = '].ReP/'
        var7 = module0.search(var5, var6)
        assert var7 == 3
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '-=rDJ}QB%~hIA'
        var11 = module0.search(var8, var10)
        assert var11 == 2
        var12 = 'v5.q'
        var13 = '-H)>J'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 't'
        var25 = '\x0c6\t0r{_UF'
        var26 = module0.search(var24, var25)
        assert var26 == 5
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = 'T^3C?bb!hI'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = '[EXR'
        var35 = module0.search(var34, var34)
        assert var35 == 4
        var36 = ' j:xB.yP.I&j@,'
        var37 = module0.search(var36, var36)
        assert var37 == 1
        var38 = 'l<,Z=SS'
        var39 = module0.search(var38, var38)
        assert var39 == 7
        var40 = 'D]\x0bz,_GASb0:eB3'
        var41 = '$?'
        var42 = module0.search(var40, var41)
        assert var42 == 2
        var43 = False
        var44 = 4418
        var45 = module0.search(var43, var44)
    except BaseException:
        pass


def test_case_393():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = 'yMtf\x0clY\nm+M'
        var18 = 853.41591
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_394():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = "b?=\r*P?T(2'9z"
        var11 = '].ReP/'
        var12 = module0.search(var10, var11)
        assert var12 == 3
        var13 = False
        var14 = module0.search(var13, var0)
    except BaseException:
        pass


def test_case_395():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = -1349
        var18 = module0.search(var17, var15)
    except BaseException:
        pass


def test_case_396():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = 'T^3C?bb!hI'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 'K9\r'
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -2077.59
        var21 = module0.search(var20, var20)
    except BaseException:
        pass


def test_case_397():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'D]\x0bz,_GASb0:eB3'
        var12 = '$?'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '|u\nN2H(A\nO;Eo,4Cq['
        var21 = module0.search(var20, var18)
        assert var21 == 7
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = '>3aFds@'
        var29 = '-+v96PI_(\\ha'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = '-=rDJ}QB%~hIA'
        var34 = module0.search(var31, var33)
        assert var34 == 2
        var35 = True
        var36 = -1810
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_398():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'D]\x0bz,_GASb0:eB3'
        var12 = '$?'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -951
        var18 = module0.search(var17, var15)
        assert var18 == 0
        var19 = -1897.946442
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = -400
        var23 = '|Zoq'
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_399():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = '-=rDJ}QB%~hIA'
        var8 = module0.search(var5, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'K9\r'
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = None
        var19 = -297
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_400():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = -951
        var22 = module0.search(var21, var19)
        assert var22 == 0
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'K9\r'
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = '[EXR'
        var29 = module0.search(var28, var28)
        assert var29 == 4
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = '>3aFds@'
        var37 = '-+v96PI_(\\ha'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = ' j:xB.yP.I&j@,'
        var40 = module0.search(var39, var39)
        assert var40 == 1
        var41 = ''
        var42 = True
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_401():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 't'
        var9 = '\x0c6\t0r{_UF'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = 3528.908855
        var15 = module0.search(var5, var14)
    except BaseException:
        pass


def test_case_402():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = '-=rDJ}QB%~hIA'
        var16 = module0.search(var13, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'S"k\x0bo){K.\x0cVG{S\t'
        var20 = 653.486
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_403():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -951
        var17 = module0.search(var16, var14)
        assert var17 == 0
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = 'K9\r'
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = module0.search(var25, var13)
    except BaseException:
        pass


def test_case_404():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = " \r<OM9W'`hV"
        var15 = None
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_405():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 't'
        var20 = '\x0c6\t0r{_UF'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = '|u\nN2H(A\nO;Eo,4Cq['
        var29 = module0.search(var28, var26)
        assert var29 == 7
        var30 = "b?=\r*P?T(2'9z"
        var31 = '].ReP/'
        var32 = module0.search(var30, var31)
        assert var32 == 3
        var33 = ' j:xB.yP.I&j@,'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = False
        var36 = module0.search(var35, var3)
    except BaseException:
        pass


def test_case_406():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = '\\U'
        var6 = module0.search(var5, var3)
    except BaseException:
        pass


def test_case_407():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -1897.946442
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'K9\r'
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'v5.q'
        var12 = '-H)>J'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = '-=rDJ}QB%~hIA'
        var17 = module0.search(var14, var16)
        assert var17 == 2
        var18 = "b?=\r*P?T(2'9z"
        var19 = '].ReP/'
        var20 = module0.search(var18, var19)
        assert var20 == 3
        var21 = '}48'
        var22 = False
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_408():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 't'
        var11 = '\x0c6\t0r{_UF'
        var12 = module0.search(var10, var11)
        assert var12 == 5
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = '-=rDJ}QB%~hIA'
        var26 = module0.search(var23, var25)
        assert var26 == 2
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = -1338.2
        var37 = module0.search(var36, var7)
    except BaseException:
        pass


def test_case_409():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'K9\r'
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -1065
        var19 = True
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_410():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = -1897.946442
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'K9\r'
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = False
        var23 = -1576
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_411():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = '}b2b6Y=MM| '
        var17 = 'K/I\tKH;La'
        var18 = module0.search(var16, var17)
        assert var18 == 9
        var19 = module0.search(var16, var17)
        assert var19 == 9
        var20 = '}b2b6Y=MM| '
        var21 = 'K/I\tKH;La'
        var22 = module0.search(var20, var21)
        assert var22 == 9
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = False
        var26 = module0.search(var13, var25)
    except BaseException:
        pass


def test_case_412():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'h0~{mWT`UJ<VFHiO&jx;'
        var12 = -1398.0
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_413():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1897.946442
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 3412.679
        var6 = module0.search(var5, var0)
    except BaseException:
        pass


def test_case_414():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = module0.search(var8, var9)
        assert var11 == 9
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 't'
        var24 = '\x0c6\t0r{_UF'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = '}b2b6Y=MM| '
        var27 = 'K/I\tKH;La'
        var28 = module0.search(var26, var27)
        assert var28 == 9
        var29 = "=Z?'7>qAk~P"
        var30 = True
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_415():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = '}b2b6Y=MM| '
        var6 = 'K/I\tKH;La'
        var7 = module0.search(var5, var6)
        assert var7 == 9
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = -1897.946442
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'K9\r'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = 'v5.q'
        var30 = '-H)>J'
        var31 = module0.search(var29, var30)
        assert var31 == 5
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = ' j:xB.yP.I&j@,'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'JE\r\\L**#a'
        var37 = module0.search(var34, var36)
        assert var37 == 0
        var38 = module0.search(var21, var0)
    except BaseException:
        pass


def test_case_416():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = -1897.946442
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = '}b2b6Y=MM| '
        var19 = 'K/I\tKH;La'
        var20 = module0.search(var18, var19)
        assert var20 == 9
        var21 = module0.search(var18, var19)
        assert var21 == 9
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = '-=rDJ}QB%~hIA'
        var25 = module0.search(var22, var24)
        assert var25 == 2
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'K9\r'
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 'rCD'
        var32 = module0.search(var31, var31)
        assert var32 == 3
        var33 = 'v5.q'
        var34 = '-H)>J'
        var35 = module0.search(var33, var34)
        assert var35 == 5
        var36 = 'l<,Z=SS'
        var37 = module0.search(var36, var36)
        assert var37 == 7
        var38 = '5FF>er_Ybr p=A7&'
        var39 = -1503
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_417():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = True
        var13 = 1613.84
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_418():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = True
        var9 = module0.search(var8, var8)
    except BaseException:
        pass


def test_case_419():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 2922
        var16 = None
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_420():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 't'
        var6 = '\x0c6\t0r{_UF'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = -1897.946442
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = "b?=\r*P?T(2'9z"
        var12 = '].ReP/'
        var13 = module0.search(var11, var12)
        assert var13 == 3
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -1276.0
        var18 = module0.search(var2, var17)
    except BaseException:
        pass


def test_case_421():
    try:
        var0 = 15.8412
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_422():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -1897.946442
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '|u\nN2H(A\nO;Eo,4Cq['
        var17 = module0.search(var16, var14)
        assert var17 == 7
        var18 = -473
        var19 = 2583
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_423():
    try:
        var0 = None
        var1 = module0.search(var0, var0)
    except BaseException:
        pass


def test_case_424():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 't'
        var13 = '\x0c6\t0r{_UF'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = -1897.946442
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'rCD'
        var26 = module0.search(var25, var25)
        assert var26 == 3
        var27 = 'v5.q'
        var28 = '-H)>J'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = '*SS}'
        var31 = module0.search(var30, var22)
    except BaseException:
        pass


def test_case_425():
    try:
        var0 = False
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_426():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = -1572
        var6 = module0.search(var5, var3)
    except BaseException:
        pass


def test_case_427():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 847.98478
        var14 = False
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_428():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '>3aFds@'
        var9 = '-+v96PI_(\\ha'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = -1268.0
        var16 = module0.search(var15, var15)
    except BaseException:
        pass


def test_case_429():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'v5.q'
        var6 = '-H)>J'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -951
        var17 = module0.search(var16, var14)
        assert var17 == 0
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = 'D]\x0bz,_GASb0:eB3'
        var25 = '$?'
        var26 = module0.search(var24, var25)
        assert var26 == 2
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 't'
        var31 = '\x0c6\t0r{_UF'
        var32 = module0.search(var30, var31)
        assert var32 == 5
        var33 = 'rCD'
        var34 = module0.search(var33, var33)
        assert var34 == 3
        var35 = '[EXR'
        var36 = module0.search(var35, var35)
        assert var36 == 4
        var37 = 'l<,Z=SS'
        var38 = module0.search(var37, var37)
        assert var38 == 7
        var39 = '|u\nN2H(A\nO;Eo,4Cq['
        var40 = module0.search(var39, var37)
        assert var40 == 7
        var41 = 'R.'
        var42 = module0.search(var41, var41)
        assert var42 == 2
        var43 = True
        var44 = module0.search(var43, var43)
    except BaseException:
        pass


def test_case_430():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = False
        var11 = -899.549305
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_431():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = "b?=\r*P?T(2'9z"
        var19 = '].ReP/'
        var20 = module0.search(var18, var19)
        assert var20 == 3
        var21 = False
        var22 = module0.search(var3, var21)
    except BaseException:
        pass


def test_case_432():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -951
        var12 = module0.search(var11, var9)
        assert var12 == 0
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = True
        var16 = -1489.0
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_433():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '~6zKW'
        var6 = -3890
        var7 = module0.search(var5, var6)
    except BaseException:
        pass


def test_case_434():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -951
        var8 = module0.search(var7, var5)
        assert var8 == 0
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 't'
        var16 = '\x0c6\t0r{_UF'
        var17 = module0.search(var15, var16)
        assert var17 == 5
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = "fC^/'d#ZfHOdEWNC\r;?"
        var25 = 292
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_435():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'D]\x0bz,_GASb0:eB3'
        var22 = '$?'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 't'
        var28 = '\x0c6\t0r{_UF'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = '[EXR'
        var31 = module0.search(var30, var30)
        assert var31 == 4
        var32 = True
        var33 = -1141.09184
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_436():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = 'v5.q'
        var15 = '-H)>J'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = '}b2b6Y=MM| '
        var21 = 'K/I\tKH;La'
        var22 = module0.search(var20, var21)
        assert var22 == 9
        var23 = module0.search(var20, var21)
        assert var23 == 9
        var24 = "b?=\r*P?T(2'9z"
        var25 = '].ReP/'
        var26 = module0.search(var24, var25)
        assert var26 == 3
        var27 = 'T^3C?bb!hI'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = 'K9\r'
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = -1822
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = '[EXR'
        var38 = module0.search(var37, var37)
        assert var38 == 4
        var39 = '[EXR'
        var40 = module0.search(var39, var39)
        assert var40 == 4
        var41 = ' j:xB.yP.I&j@,'
        var42 = module0.search(var41, var41)
        assert var42 == 1
        var43 = 'l<,Z=SS'
        var44 = module0.search(var43, var43)
        assert var44 == 7
        var45 = 'D]\x0bz,_GASb0:eB3'
        var46 = '$?'
        var47 = module0.search(var45, var46)
        assert var47 == 2
        var48 = 1873
        var49 = module0.search(var4, var48)
    except BaseException:
        pass


def test_case_437():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = "b?=\r*P?T(2'9z"
        var12 = '].ReP/'
        var13 = module0.search(var11, var12)
        assert var13 == 3
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '}b2b6Y=MM| '
        var18 = 'K/I\tKH;La'
        var19 = module0.search(var17, var18)
        assert var19 == 9
        var20 = -1903.518
        var21 = module0.search(var14, var20)
    except BaseException:
        pass


def test_case_438():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '|u\nN2H(A\nO;Eo,4Cq['
        var15 = module0.search(var14, var12)
        assert var15 == 7
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = '>3aFds@'
        var23 = '-+v96PI_(\\ha'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = -1897.946442
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = 'v5.q'
        var29 = '-H)>J'
        var30 = module0.search(var28, var29)
        assert var30 == 5
        var31 = 'T^3C?bb!hI'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = -1822
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = 't'
        var37 = '\x0c6\t0r{_UF'
        var38 = module0.search(var36, var37)
        assert var38 == 5
        var39 = "b?=\r*P?T(2'9z"
        var40 = '].ReP/'
        var41 = module0.search(var39, var40)
        assert var41 == 3
        var42 = 'R.'
        var43 = module0.search(var42, var42)
        assert var43 == 2
        var44 = 457.0
        var45 = True
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_439():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 't'
        var15 = '\x0c6\t0r{_UF'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = None
        var18 = module0.search(var17, var7)
    except BaseException:
        pass


def test_case_440():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = -772
        var19 = False
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_441():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'K9\r'
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = 'l<,Z=SS'
        var23 = module0.search(var22, var22)
        assert var23 == 7
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = '}b2b6Y=MM| '
        var28 = 'K/I\tKH;La'
        var29 = module0.search(var27, var28)
        assert var29 == 9
        var30 = module0.search(var27, var28)
        assert var30 == 9
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'rCD'
        var34 = module0.search(var33, var33)
        assert var34 == 3
        var35 = '[EXR'
        var36 = module0.search(var35, var35)
        assert var36 == 4
        var37 = 'l<,Z=SS'
        var38 = module0.search(var37, var37)
        assert var38 == 7
        var39 = '|u\nN2H(A\nO;Eo,4Cq['
        var40 = module0.search(var39, var37)
        assert var40 == 7
        var41 = "b?=\r*P?T(2'9z"
        var42 = '].ReP/'
        var43 = module0.search(var41, var42)
        assert var43 == 3
        var44 = '0Kn~'
        var45 = True
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_442():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = '{>ds,4j\x0c:n<q~1Czi{/x'
        var4 = True
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_443():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = 'K9\r'
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -951
        var12 = module0.search(var11, var9)
        assert var12 == 0
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = True
        var23 = 'zMp\nm.9aI+*gn'
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_444():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = '}b2b6Y=MM| '
        var22 = 'K/I\tKH;La'
        var23 = module0.search(var21, var22)
        assert var23 == 9
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'K9\r'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = None
        var32 = False
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_445():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -951
        var10 = module0.search(var9, var7)
        assert var10 == 0
        var11 = '*'
        var12 = 1446
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_446():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 't'
        var10 = '\x0c6\t0r{_UF'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = '}b2b6Y=MM| '
        var15 = 'K/I\tKH;La'
        var16 = module0.search(var14, var15)
        assert var16 == 9
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = 580.318709
        var23 = "n@\n+'["
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_447():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = '>3aFds@'
        var10 = '-+v96PI_(\\ha'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = '}b2b6Y=MM| '
        var13 = 'K/I\tKH;La'
        var14 = module0.search(var12, var13)
        assert var14 == 9
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 't'
        var21 = '\x0c6\t0r{_UF'
        var22 = module0.search(var20, var21)
        assert var22 == 5
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'nX%W5M{D?Lqa.]Ob6'
        var27 = -2718.914611
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_448():
    try:
        var0 = 'fi{a\t)'
        var1 = 1653.95898
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_449():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'rCD'
        var23 = module0.search(var22, var22)
        assert var23 == 3
        var24 = True
        var25 = module0.search(var24, var3)
    except BaseException:
        pass


def test_case_450():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 't'
        var28 = '\x0c6\t0r{_UF'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = '}b2b6Y=MM| '
        var31 = 'K/I\tKH;La'
        var32 = module0.search(var30, var31)
        assert var32 == 9
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = '-=rDJ}QB%~hIA'
        var36 = module0.search(var33, var35)
        assert var36 == 2
        var37 = 'l<,Z=SS'
        var38 = module0.search(var37, var37)
        assert var38 == 7
        var39 = "b?=\r*P?T(2'9z"
        var40 = '].ReP/'
        var41 = module0.search(var39, var40)
        assert var41 == 3
        var42 = 2590.7176
        var43 = -1916.988245
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_451():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1897.946442
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = "6C\t'NVF{70HLR"
        var33 = 'i\r'
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = '}b2b6Y=MM| '
        var36 = 'K/I\tKH;La'
        var37 = module0.search(var35, var36)
        assert var37 == 9
        var38 = True
        var39 = module0.search(var38, var11)
    except BaseException:
        pass


def test_case_452():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '}b2b6Y=MM| '
        var6 = 'K/I\tKH;La'
        var7 = module0.search(var5, var6)
        assert var7 == 9
        var8 = module0.search(var5, var6)
        assert var8 == 9
        var9 = -452.433295
        var10 = module0.search(var9, var9)
    except BaseException:
        pass


def test_case_453():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -562
        var3 = 'NlEnW'
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_454():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "b?=\r*P?T(2'9z"
        var4 = '].ReP/'
        var5 = module0.search(var3, var4)
        assert var5 == 3
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = -2039.3
        var9 = 'AmCp='
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_455():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '-=rDJ}QB%~hIA'
        var12 = module0.search(var9, var11)
        assert var12 == 2
        var13 = 'pW{!v,@'
        var14 = 'HWNZ%3wtY4'
        var15 = module0.search(var13, var14)
        assert var15 == 6
        var16 = 2133.5
        var17 = module0.search(var16, var9)
    except BaseException:
        pass


def test_case_456():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = 'D]\x0bz,_GASb0:eB3'
        var18 = '$?'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = -951
        var24 = module0.search(var23, var21)
        assert var24 == 0
        var25 = '}b2b6Y=MM| '
        var26 = 'K/I\tKH;La'
        var27 = module0.search(var25, var26)
        assert var27 == 9
        var28 = -1822
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = -691
        var32 = True
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_457():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -951
        var9 = module0.search(var8, var6)
        assert var9 == 0
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = 'D]\x0bz,_GASb0:eB3'
        var17 = '$?'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'pW{!v,@'
        var20 = 'HWNZ%3wtY4'
        var21 = module0.search(var19, var20)
        assert var21 == 6
        var22 = None
        var23 = 'WLy86b\x0b-etP\'"'
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_458():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = "6C\t'NVF{70HLR"
        var10 = 'i\r'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = "b?=\r*P?T(2'9z"
        var13 = '].ReP/'
        var14 = module0.search(var12, var13)
        assert var14 == 3
        var15 = 'pW{!v,@'
        var16 = 'HWNZ%3wtY4'
        var17 = module0.search(var15, var16)
        assert var17 == 6
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = None
        var21 = None
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_459():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "6C\t'NVF{70HLR"
        var6 = 'i\r'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '}b2b6Y=MM| '
        var15 = 'K/I\tKH;La'
        var16 = module0.search(var14, var15)
        assert var16 == 9
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = "b?=\r*P?T(2'9z"
        var26 = '].ReP/'
        var27 = module0.search(var25, var26)
        assert var27 == 3
        var28 = 'pW{!v,@'
        var29 = 'HWNZ%3wtY4'
        var30 = module0.search(var28, var29)
        assert var30 == 6
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = 'K9\r'
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = -1445.671
        var37 = module0.search(var22, var36)
    except BaseException:
        pass


def test_case_460():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'v5.q'
        var17 = '-H)>J'
        var18 = module0.search(var16, var17)
        assert var18 == 5
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = '}b2b6Y=MM| '
        var33 = 'K/I\tKH;La'
        var34 = module0.search(var32, var33)
        assert var34 == 9
        var35 = module0.search(var32, var33)
        assert var35 == 9
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = -951
        var40 = module0.search(var39, var37)
        assert var40 == 0
        var41 = True
        var42 = -2738
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_461():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = '}b2b6Y=MM| '
        var19 = 'K/I\tKH;La'
        var20 = module0.search(var18, var19)
        assert var20 == 9
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'JE\r\\L**#a'
        var34 = module0.search(var31, var33)
        assert var34 == 0
        var35 = '>3aFds@'
        var36 = '-+v96PI_(\\ha'
        var37 = module0.search(var35, var36)
        assert var37 == 2
        var38 = 'T^3C?bb!hI'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = -1822
        var41 = ''
        var42 = module0.search(var40, var41)
        assert var42 == 0
        var43 = -951
        var44 = module0.search(var43, var41)
        assert var44 == 0
        var45 = -1822
        var46 = ''
        var47 = module0.search(var45, var46)
        assert var47 == 0
        var48 = "6C\t'NVF{70HLR"
        var49 = 'i\r'
        var50 = module0.search(var48, var49)
        assert var50 == 0
        var51 = 1961.717
        var52 = '8\x0b\\1g&p8m*E}{,'
        var53 = module0.search(var51, var52)
    except BaseException:
        pass


def test_case_462():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = None
        var7 = True
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_463():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 'v5.q'
        var15 = '-H)>J'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = '-=rDJ}QB%~hIA'
        var20 = module0.search(var17, var19)
        assert var20 == 2
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = "Gmp+X`l/Q:d'UnI*a"
        var29 = module0.search(var21, var28)
    except BaseException:
        pass


def test_case_464():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = "b?=\r*P?T(2'9z"
        var17 = '].ReP/'
        var18 = module0.search(var16, var17)
        assert var18 == 3
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = '-=rDJ}QB%~hIA'
        var22 = module0.search(var19, var21)
        assert var22 == 2
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = False
        var26 = module0.search(var25, var25)
    except BaseException:
        pass


def test_case_465():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 1384
        var6 = True
        var7 = module0.search(var5, var6)
    except BaseException:
        pass


def test_case_466():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = '>3aFds@'
        var10 = '-+v96PI_(\\ha'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '}b2b6Y=MM| '
        var18 = 'K/I\tKH;La'
        var19 = module0.search(var17, var18)
        assert var19 == 9
        var20 = module0.search(var17, var18)
        assert var20 == 9
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = -951
        var25 = module0.search(var24, var22)
        assert var25 == 0
        var26 = 'pW{!v,@'
        var27 = 'HWNZ%3wtY4'
        var28 = module0.search(var26, var27)
        assert var28 == 6
        var29 = 'la2WlstOg$7)!VF_b'
        var30 = -1956
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_467():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'K9\r'
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 3621
        var15 = -80.21
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_468():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'v5.q'
        var3 = '-H)>J'
        var4 = module0.search(var2, var3)
        assert var4 == 5
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -951
        var17 = module0.search(var16, var14)
        assert var17 == 0
        var18 = -1897.946442
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = True
        var24 = '\\JIWITm2z6*:E'
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_469():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'K9\r'
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 't'
        var21 = '\x0c6\t0r{_UF'
        var22 = module0.search(var20, var21)
        assert var22 == 5
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = '[EXR'
        var31 = module0.search(var30, var30)
        assert var31 == 4
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'l<,Z=SS'
        var35 = module0.search(var34, var34)
        assert var35 == 7
        var36 = 'D]\x0bz,_GASb0:eB3'
        var37 = '$?'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = 'T^3C?bb!hI'
        var40 = module0.search(var39, var39)
        assert var40 == 1
        var41 = 'pW{!v,@'
        var42 = 'HWNZ%3wtY4'
        var43 = module0.search(var41, var42)
        assert var43 == 6
        var44 = False
        var45 = module0.search(var44, var25)
    except BaseException:
        pass


def test_case_470():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = '}b2b6Y=MM| '
        var14 = 'K/I\tKH;La'
        var15 = module0.search(var13, var14)
        assert var15 == 9
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = 'W`u@2G'
        var25 = -797.58
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_471():
    try:
        var0 = '6'
        var1 = 1736.411
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_472():
    try:
        var0 = ';nINED'
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_473():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'K9\r'
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = 'v5.q'
        var25 = '-H)>J'
        var26 = module0.search(var24, var25)
        assert var26 == 5
        var27 = 'rCD'
        var28 = module0.search(var27, var27)
        assert var28 == 3
        var29 = -1442
        var30 = True
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_474():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = True
        var10 = '0y+*J;*,A*5'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_475():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = -1897.946442
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = 'D]\x0bz,_GASb0:eB3'
        var16 = '$?'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = 'T^3C?bb!hI'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'rCD'
        var21 = module0.search(var20, var20)
        assert var21 == 3
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = 'K9\r'
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = "b?=\r*P?T(2'9z"
        var28 = '].ReP/'
        var29 = module0.search(var27, var28)
        assert var29 == 3
        var30 = 2771.3743
        var31 = False
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_476():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'pW{!v,@'
        var3 = 'HWNZ%3wtY4'
        var4 = module0.search(var2, var3)
        assert var4 == 6
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = "b?=\r*P?T(2'9z"
        var12 = '].ReP/'
        var13 = module0.search(var11, var12)
        assert var13 == 3
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = 'GqP'
        var17 = -2910.1
        var18 = module0.search(var16, var17)
    except BaseException:
        pass


def test_case_477():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "6C\t'NVF{70HLR"
        var6 = 'i\r'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = 'l<,Z=SS'
        var15 = module0.search(var14, var14)
        assert var15 == 7
        var16 = '|u\nN2H(A\nO;Eo,4Cq['
        var17 = module0.search(var16, var14)
        assert var17 == 7
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = 'K9\r'
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = '-=rDJ}QB%~hIA'
        var28 = module0.search(var25, var27)
        assert var28 == 2
        var29 = '[EXR'
        var30 = module0.search(var29, var29)
        assert var30 == 4
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'l<,Z=SS'
        var34 = module0.search(var33, var33)
        assert var34 == 7
        var35 = 'D]\x0bz,_GASb0:eB3'
        var36 = '$?'
        var37 = module0.search(var35, var36)
        assert var37 == 2
        var38 = 'R.'
        var39 = module0.search(var38, var38)
        assert var39 == 2
        var40 = ' j:xB.yP.I&j@,'
        var41 = module0.search(var40, var40)
        assert var41 == 1
        var42 = 'JE\r\\L**#a'
        var43 = module0.search(var40, var42)
        assert var43 == 0
        var44 = -2257.0
        var45 = module0.search(var44, var38)
    except BaseException:
        pass


def test_case_478():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = False
        var7 = module0.search(var4, var6)
    except BaseException:
        pass


def test_case_479():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'JE\r\\L**#a'
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = '>3aFds@'
        var20 = '-+v96PI_(\\ha'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 't'
        var28 = '\x0c6\t0r{_UF'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = '}b2b6Y=MM| '
        var31 = 'K/I\tKH;La'
        var32 = module0.search(var30, var31)
        assert var32 == 9
        var33 = True
        var34 = -258
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_480():
    try:
        var0 = None
        var1 = module0.search(var0, var0)
    except BaseException:
        pass


def test_case_481():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'pW{!v,@'
        var6 = 'HWNZ%3wtY4'
        var7 = module0.search(var5, var6)
        assert var7 == 6
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = ''
        var25 = -816.877
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_482():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = "6C\t'NVF{70HLR"
        var16 = 'i\r'
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = "b?=\r*P?T(2'9z"
        var25 = '].ReP/'
        var26 = module0.search(var24, var25)
        assert var26 == 3
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'JE\r\\L**#a'
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = '>3aFds@'
        var34 = '-+v96PI_(\\ha'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = -951
        var40 = module0.search(var39, var37)
        assert var40 == 0
        var41 = None
        var42 = 'ZqP\\Eh!'
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_483():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = None
        var7 = 'U$\rv*d\r)'
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_484():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = -1897.946442
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = "6C\t'NVF{70HLR"
        var17 = 'i\r'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = "b?=\r*P?T(2'9z"
        var20 = '].ReP/'
        var21 = module0.search(var19, var20)
        assert var21 == 3
        var22 = 'T^3C?bb!hI'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'pW{!v,@'
        var27 = 'HWNZ%3wtY4'
        var28 = module0.search(var26, var27)
        assert var28 == 6
        var29 = 2052.48
        var30 = module0.search(var2, var29)
    except BaseException:
        pass


def test_case_485():
    try:
        var0 = True
        var1 = -826.588
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_486():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = module0.search(var11, var12)
        assert var14 == 9
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = "6C\t'NVF{70HLR"
        var19 = 'i\r'
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = -1871.8
        var27 = module0.search(var19, var26)
    except BaseException:
        pass


def test_case_487():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = 'v5.q'
        var13 = '-H)>J'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = 'rCD'
        var16 = module0.search(var15, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = '|u\nN2H(A\nO;Eo,4Cq['
        var22 = module0.search(var21, var19)
        assert var22 == 7
        var23 = None
        var24 = module0.search(var3, var23)
    except BaseException:
        pass


def test_case_488():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'K9\r'
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = '|u\nN2H(A\nO;Eo,4Cq['
        var23 = module0.search(var22, var20)
        assert var23 == 7
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = "b?=\r*P?T(2'9z"
        var30 = '].ReP/'
        var31 = module0.search(var29, var30)
        assert var31 == 3
        var32 = '}b2b6Y=MM| '
        var33 = 'K/I\tKH;La'
        var34 = module0.search(var32, var33)
        assert var34 == 9
        var35 = 'R.'
        var36 = module0.search(var35, var35)
        assert var36 == 2
        var37 = ' j:xB.yP.I&j@,'
        var38 = module0.search(var37, var37)
        assert var38 == 1
        var39 = 'JE\r\\L**#a'
        var40 = module0.search(var37, var39)
        assert var40 == 0
        var41 = '>3aFds@'
        var42 = '-+v96PI_(\\ha'
        var43 = module0.search(var41, var42)
        assert var43 == 2
        var44 = None
        var45 = ']+>gmnGp,K/tl '
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_489():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = 'D]\x0bz,_GASb0:eB3'
        var15 = '$?'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = '`W'
        var18 = False
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_490():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = "$'_V@]Ui,;A}'Be"
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = '-=rDJ}QB%~hIA'
        var23 = module0.search(var20, var22)
        assert var23 == 2
        var24 = -1897.946442
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 'v5.q'
        var28 = '-H)>J'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = 'pW{!v,@'
        var31 = 'HWNZ%3wtY4'
        var32 = module0.search(var30, var31)
        assert var32 == 6
        var33 = -1822
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = '|C"]\t|tC'
        var37 = module0.search(var33, var36)
    except BaseException:
        pass


def test_case_491():
    try:
        var0 = -165
        var1 = '\x0c\\9e2;15G\\eX<:}hH.'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_492():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'D]\x0bz,_GASb0:eB3'
        var22 = '$?'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = True
        var25 = 741
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_493():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '>3aFds@'
        var16 = '-+v96PI_(\\ha'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = -951
        var22 = module0.search(var21, var19)
        assert var22 == 0
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = "6C\t'NVF{70HLR"
        var27 = 'i\r'
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = "$'_V@]Ui,;A}'Be"
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = '}b2b6Y=MM| '
        var32 = 'K/I\tKH;La'
        var33 = module0.search(var31, var32)
        assert var33 == 9
        var34 = 'R.'
        var35 = module0.search(var34, var34)
        assert var35 == 2
        var36 = '-=rDJ}QB%~hIA'
        var37 = module0.search(var34, var36)
        assert var37 == 2
        var38 = '\x0cr|\x0bW.Ge\nAOG*(0fWyq'
        var39 = 2812.3
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_494():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 851
        var8 = False
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_495():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = module0.search(var11, var12)
        assert var14 == 9
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -1897.946442
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = '-=rDJ}QB%~hIA'
        var24 = module0.search(var21, var23)
        assert var24 == 2
        var25 = ' 4LN)cJ9U/mRx.Mg,'
        var26 = 1173.43
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_496():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = '>3aFds@'
        var10 = '-+v96PI_(\\ha'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = "b?=\r*P?T(2'9z"
        var21 = '].ReP/'
        var22 = module0.search(var20, var21)
        assert var22 == 3
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = '-=rDJ}QB%~hIA'
        var26 = module0.search(var23, var25)
        assert var26 == 2
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = "6C\t'NVF{70HLR"
        var31 = 'i\r'
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = ' j:xB.yP.I&j@,'
        var36 = module0.search(var35, var35)
        assert var36 == 1
        var37 = 'JE\r\\L**#a'
        var38 = module0.search(var35, var37)
        assert var38 == 0
        var39 = 380
        var40 = module0.search(var39, var0)
    except BaseException:
        pass


def test_case_497():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = -951
        var11 = module0.search(var10, var8)
        assert var11 == 0
        var12 = 'v5.q'
        var13 = '-H)>J'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = '-=rDJ}QB%~hIA'
        var24 = module0.search(var21, var23)
        assert var24 == 2
        var25 = "$'_V@]Ui,;A}'Be"
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = -1897.946442
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = '5"10\x0c?)l~'
        var40 = True
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_498():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = '}b2b6Y=MM| '
        var8 = 'K/I\tKH;La'
        var9 = module0.search(var7, var8)
        assert var9 == 9
        var10 = module0.search(var7, var8)
        assert var10 == 9
        var11 = 348.7613
        var12 = -2075.0
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_499():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'v5.q'
        var9 = '-H)>J'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = "6C\t'NVF{70HLR"
        var17 = 'i\r'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 't'
        var23 = '\x0c6\t0r{_UF'
        var24 = module0.search(var22, var23)
        assert var24 == 5
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -951
        var29 = module0.search(var28, var26)
        assert var29 == 0
        var30 = "b?=\r*P?T(2'9z"
        var31 = '].ReP/'
        var32 = module0.search(var30, var31)
        assert var32 == 3
        var33 = -1897.946442
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = 2825
        var37 = None
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_500():
    try:
        var0 = -2396.8
        var1 = '.\t'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_501():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'u"u'
        var4 = -868.089566
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_502():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = None
        var14 = 3508.0
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_503():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 't'
        var6 = '\x0c6\t0r{_UF'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = 695
        var9 = 'i;PfC'
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_504():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = False
        var18 = -1233.935
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_505():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 't'
        var12 = '\x0c6\t0r{_UF'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = 'R.'
        var15 = module0.search(var14, var14)
        assert var15 == 2
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'JE\r\\L**#a'
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = '>3aFds@'
        var21 = '-+v96PI_(\\ha'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = "b?=\r*P?T(2'9z"
        var24 = '].ReP/'
        var25 = module0.search(var23, var24)
        assert var25 == 3
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'v5.q'
        var29 = '-H)>J'
        var30 = module0.search(var28, var29)
        assert var30 == 5
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = '-=rDJ}QB%~hIA'
        var36 = module0.search(var33, var35)
        assert var36 == 2
        var37 = -1822
        var38 = ''
        var39 = module0.search(var37, var38)
        assert var39 == 0
        var40 = '}b2b6Y=MM| '
        var41 = 'K/I\tKH;La'
        var42 = module0.search(var40, var41)
        assert var42 == 9
        var43 = module0.search(var40, var41)
        assert var43 == 9
        var44 = '}b2b6Y=MM| '
        var45 = 'K/I\tKH;La'
        var46 = module0.search(var44, var45)
        assert var46 == 9
        var47 = -1028.25
        var48 = module0.search(var35, var47)
    except BaseException:
        pass


def test_case_506():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = -951
        var13 = module0.search(var12, var10)
        assert var13 == 0
        var14 = ''
        var15 = 'v?I;sbmVfyO+,:sa`m>'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = "6C\t'NVF{70HLR"
        var23 = 'i\r'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'v5.q'
        var26 = '-H)>J'
        var27 = module0.search(var25, var26)
        assert var27 == 5
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 'JE\r\\L**#a'
        var33 = module0.search(var30, var32)
        assert var33 == 0
        var34 = 'cw'
        var35 = 6.65128
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_507():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = -951
        var11 = module0.search(var10, var8)
        assert var11 == 0
        var12 = ''
        var13 = 'v?I;sbmVfyO+,:sa`m>'
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'rCD'
        var24 = module0.search(var23, var23)
        assert var24 == 3
        var25 = True
        var26 = '. .6b\tyX=}G1*:'
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_508():
    try:
        var0 = '\t_Hn/}zP5@j\\vucB@'
        var1 = 764.425632
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_509():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'D]\x0bz,_GASb0:eB3'
        var11 = '$?'
        var12 = module0.search(var10, var11)
        assert var12 == 2
        var13 = None
        var14 = module0.search(var13, var6)
    except BaseException:
        pass


def test_case_510():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1897.946442
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = '}b2b6Y=MM| '
        var25 = 'K/I\tKH;La'
        var26 = module0.search(var24, var25)
        assert var26 == 9
        var27 = 'T^3C?bb!hI'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = '}b2b6Y=MM| '
        var33 = 'K/I\tKH;La'
        var34 = module0.search(var32, var33)
        assert var34 == 9
        var35 = module0.search(var32, var33)
        assert var35 == 9
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = '-=rDJ}QB%~hIA'
        var39 = module0.search(var36, var38)
        assert var39 == 2
        var40 = None
        var41 = module0.search(var22, var40)
    except BaseException:
        pass


def test_case_511():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = "6C\t'NVF{70HLR"
        var9 = 'i\r'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = "$'_V@]Ui,;A}'Be"
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = -1897.946442
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = False
        var22 = module0.search(var21, var16)
    except BaseException:
        pass


def test_case_512():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 2479
        var9 = True
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_513():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = "6C\t'NVF{70HLR"
        var11 = 'i\r'
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '02K=/\n'
        var16 = True
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_514():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = "b?=\r*P?T(2'9z"
        var14 = '].ReP/'
        var15 = module0.search(var13, var14)
        assert var15 == 3
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = '}b2b6Y=MM| '
        var20 = 'K/I\tKH;La'
        var21 = module0.search(var19, var20)
        assert var21 == 9
        var22 = module0.search(var19, var20)
        assert var22 == 9
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'v5.q'
        var27 = '-H)>J'
        var28 = module0.search(var26, var27)
        assert var28 == 5
        var29 = 'T^3C?bb!hI'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = True
        var32 = 637
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_515():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'v5.q'
        var5 = '-H)>J'
        var6 = module0.search(var4, var5)
        assert var6 == 5
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = -951
        var11 = module0.search(var10, var8)
        assert var11 == 0
        var12 = ''
        var13 = 'v?I;sbmVfyO+,:sa`m>'
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = '-=rDJ}QB%~hIA'
        var18 = module0.search(var15, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 't'
        var25 = '\x0c6\t0r{_UF'
        var26 = module0.search(var24, var25)
        assert var26 == 5
        var27 = "b?=\r*P?T(2'9z"
        var28 = '].ReP/'
        var29 = module0.search(var27, var28)
        assert var29 == 3
        var30 = -1822
        var31 = ''
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = '"ik8:Ah9X("'
        var34 = 1070
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_516():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = 'K9\r'
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'pW{!v,@'
        var12 = 'HWNZ%3wtY4'
        var13 = module0.search(var11, var12)
        assert var13 == 6
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = "b?=\r*P?T(2'9z"
        var24 = '].ReP/'
        var25 = module0.search(var23, var24)
        assert var25 == 3
        var26 = True
        var27 = 'nS)/\x0b[_\x0bac@tI'
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_517():
    try:
        var0 = 909.89
        var1 = -253
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_518():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '}b2b6Y=MM| '
        var7 = 'K/I\tKH;La'
        var8 = module0.search(var6, var7)
        assert var8 == 9
        var9 = True
        var10 = 3221.9
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_519():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = -811
        var4 = True
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_520():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'l<,Z=SS'
        var6 = module0.search(var5, var5)
        assert var6 == 7
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = False
        var10 = module0.search(var9, var7)
    except BaseException:
        pass


def test_case_521():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = "6C\t'NVF{70HLR"
        var9 = 'i\r'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = " rYJj^'FbqO_b)n3vr"
        var12 = '2m5z\n\rT_( tY9+1AP'
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = "$'_V@]Ui,;A}'Be"
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = -1822
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 't'
        var32 = '\x0c6\t0r{_UF'
        var33 = module0.search(var31, var32)
        assert var33 == 5
        var34 = -1822
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = -951
        var38 = module0.search(var37, var35)
        assert var38 == 0
        var39 = -1822
        var40 = ''
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = -951
        var43 = module0.search(var42, var40)
        assert var43 == 0
        var44 = ''
        var45 = 'v?I;sbmVfyO+,:sa`m>'
        var46 = module0.search(var44, var45)
        assert var46 == 0
        var47 = 'va<;'
        var48 = 479.4914
        var49 = module0.search(var47, var48)
    except BaseException:
        pass


def test_case_522():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'pW{!v,@'
        var3 = 'HWNZ%3wtY4'
        var4 = module0.search(var2, var3)
        assert var4 == 6
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 't'
        var20 = '\x0c6\t0r{_UF'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = " rYJj^'FbqO_b)n3vr"
        var23 = '2m5z\n\rT_( tY9+1AP'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = None
        var26 = module0.search(var25, var19)
    except BaseException:
        pass


def test_case_523():
    try:
        var0 = None
        var1 = '%#b1U7'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_524():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'v5.q'
        var10 = '-H)>J'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = True
        var15 = -4584.6122
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_525():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 't'
        var10 = '\x0c6\t0r{_UF'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = '}b2b6Y=MM| '
        var15 = 'K/I\tKH;La'
        var16 = module0.search(var14, var15)
        assert var16 == 9
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = 'D]\x0bz,_GASb0:eB3'
        var26 = '$?'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = None
        var29 = "!\rdvI'I4"
        var30 = module0.search(var28, var29)
    except BaseException:
        pass


def test_case_526():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -2443
        var4 = False
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_527():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'y[ fKK;(4?nS\\ em'
        var4 = 3707
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_528():
    try:
        var0 = 416
        var1 = -819
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_529():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = "$'_V@]Ui,;A}'Be"
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = ''
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'v5.q'
        var16 = '-H)>J'
        var17 = module0.search(var15, var16)
        assert var17 == 5
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = " rYJj^'FbqO_b)n3vr"
        var25 = '2m5z\n\rT_( tY9+1AP'
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = None
        var28 = module0.search(var18, var27)
    except BaseException:
        pass


def test_case_530():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = '}b2b6Y=MM| '
        var8 = 'K/I\tKH;La'
        var9 = module0.search(var7, var8)
        assert var9 == 9
        var10 = module0.search(var7, var8)
        assert var10 == 9
        var11 = 'v5.q'
        var12 = '-H)>J'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = " rYJj^'FbqO_b)n3vr"
        var15 = '2m5z\n\rT_( tY9+1AP'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = -951
        var23 = module0.search(var22, var20)
        assert var23 == 0
        var24 = ''
        var25 = 'v?I;sbmVfyO+,:sa`m>'
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = "$'_V@]Ui,;A}'Be"
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = None
        var30 = module0.search(var29, var19)
    except BaseException:
        pass


def test_case_531():
    try:
        var0 = 'R/_=\tG\rPX'
        var1 = 3841
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_532():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 't'
        var6 = '\x0c6\t0r{_UF'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -951
        var12 = module0.search(var11, var9)
        assert var12 == 0
        var13 = ''
        var14 = 'v?I;sbmVfyO+,:sa`m>'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = '-=rDJ}QB%~hIA'
        var19 = module0.search(var16, var18)
        assert var19 == 2
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = 'K9\r'
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = 'T^3C?bb!hI'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = ''
        var31 = module0.search(var28, var30)
        assert var31 == 0
        var32 = -1701
        var33 = -2440.841379
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_533():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '}b2b6Y=MM| '
        var6 = 'K/I\tKH;La'
        var7 = module0.search(var5, var6)
        assert var7 == 9
        var8 = module0.search(var5, var6)
        assert var8 == 9
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = ''
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = 'D]\x0bz,_GASb0:eB3'
        var23 = '$?'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = -1897.946442
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = "$'_V@]Ui,;A}'Be"
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'T^3C?bb!hI'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = -1822
        var33 = ''
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = "6C\t'NVF{70HLR"
        var36 = 'i\r'
        var37 = module0.search(var35, var36)
        assert var37 == 0
        var38 = -1822
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 't'
        var42 = '\x0c6\t0r{_UF'
        var43 = module0.search(var41, var42)
        assert var43 == 5
        var44 = module0.search(var25, var32)
    except BaseException:
        pass


def test_case_534():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'v5.q'
        var9 = '-H)>J'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = 4290.736394
        var12 = module0.search(var3, var11)
    except BaseException:
        pass


def test_case_535():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = "6C\t'NVF{70HLR"
        var10 = 'i\r'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = " rYJj^'FbqO_b)n3vr"
        var13 = '2m5z\n\rT_( tY9+1AP'
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = '}b2b6Y=MM| '
        var19 = 'K/I\tKH;La'
        var20 = module0.search(var18, var19)
        assert var20 == 9
        var21 = module0.search(var18, var19)
        assert var21 == 9
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -943.9
        var26 = '5=!\n4+$gs)<\\8vy6~p{'
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_536():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1897.946442
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "$'_V@]Ui,;A}'Be"
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'K9\r'
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 223
        var13 = ']6gz\t<;\t{J%\x0b1[g,RWN'
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_537():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = '}b2b6Y=MM| '
        var14 = 'K/I\tKH;La'
        var15 = module0.search(var13, var14)
        assert var15 == 9
        var16 = module0.search(var13, var14)
        assert var16 == 9
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 't'
        var21 = '\x0c6\t0r{_UF'
        var22 = module0.search(var20, var21)
        assert var22 == 5
        var23 = '}b2b6Y=MM| '
        var24 = 'K/I\tKH;La'
        var25 = module0.search(var23, var24)
        assert var25 == 9
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = '-=rDJ}QB%~hIA'
        var29 = module0.search(var26, var28)
        assert var29 == 2
        var30 = "$'_V@]Ui,;A}'Be"
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = False
        var33 = module0.search(var21, var32)
    except BaseException:
        pass


def test_case_538():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = 'K9\r'
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = "b?=\r*P?T(2'9z"
        var27 = '].ReP/'
        var28 = module0.search(var26, var27)
        assert var28 == 3
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = ' j:xB.yP.I&j@,'
        var32 = module0.search(var31, var31)
        assert var32 == 1
        var33 = 'JE\r\\L**#a'
        var34 = module0.search(var31, var33)
        assert var34 == 0
        var35 = -1822
        var36 = ''
        var37 = module0.search(var35, var36)
        assert var37 == 0
        var38 = '}b2b6Y=MM| '
        var39 = 'K/I\tKH;La'
        var40 = module0.search(var38, var39)
        assert var40 == 9
        var41 = module0.search(var38, var39)
        assert var41 == 9
        var42 = 'rCD'
        var43 = module0.search(var42, var42)
        assert var43 == 3
        var44 = '[EXR'
        var45 = module0.search(var44, var44)
        assert var45 == 4
        var46 = 'l<,Z=SS'
        var47 = module0.search(var46, var46)
        assert var47 == 7
        var48 = '|u\nN2H(A\nO;Eo,4Cq['
        var49 = module0.search(var48, var46)
        assert var49 == 7
        var50 = '}b2b6Y=MM| '
        var51 = 'K/I\tKH;La'
        var52 = module0.search(var50, var51)
        assert var52 == 9
        var53 = 2482
        var54 = 'GW]u?gE<CH'
        var55 = module0.search(var53, var54)
    except BaseException:
        pass


def test_case_539():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = '-=rDJ}QB%~hIA'
        var9 = module0.search(var6, var8)
        assert var9 == 2
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = "6C\t'NVF{70HLR"
        var14 = 'i\r'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = -951
        var20 = module0.search(var19, var17)
        assert var20 == 0
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'l<,Z=SS'
        var28 = module0.search(var27, var27)
        assert var28 == 7
        var29 = 'D]\x0bz,_GASb0:eB3'
        var30 = '$?'
        var31 = module0.search(var29, var30)
        assert var31 == 2
        var32 = -1822
        var33 = ''
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = -951
        var36 = module0.search(var35, var33)
        assert var36 == 0
        var37 = ''
        var38 = 'v?I;sbmVfyO+,:sa`m>'
        var39 = module0.search(var37, var38)
        assert var39 == 0
        var40 = 'R.'
        var41 = module0.search(var40, var40)
        assert var41 == 2
        var42 = 'K9\r'
        var43 = ''
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = False
        var46 = '&A4amlq,/3T\x0cWd'
        var47 = module0.search(var45, var46)
    except BaseException:
        pass


def test_case_540():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = module0.search(var9, var10)
        assert var12 == 9
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -951
        var17 = module0.search(var16, var14)
        assert var17 == 0
        var18 = ''
        var19 = 'v?I;sbmVfyO+,:sa`m>'
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = '[EXR'
        var22 = module0.search(var21, var21)
        assert var22 == 4
        var23 = "$'_V@]Ui,;A}'Be"
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'pW{!v,@'
        var26 = 'HWNZ%3wtY4'
        var27 = module0.search(var25, var26)
        assert var27 == 6
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = ' j:xB.yP.I&j@,'
        var31 = module0.search(var30, var30)
        assert var31 == 1
        var32 = 'JE\r\\L**#a'
        var33 = module0.search(var30, var32)
        assert var33 == 0
        var34 = '}_g_E1Z9lz;An'
        var35 = False
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_541():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = " rYJj^'FbqO_b)n3vr"
        var11 = '2m5z\n\rT_( tY9+1AP'
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 't'
        var17 = '\x0c6\t0r{_UF'
        var18 = module0.search(var16, var17)
        assert var18 == 5
        var19 = 'v5.q'
        var20 = '-H)>J'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = 'K9\r'
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 'JE\r\\L**#a'
        var41 = module0.search(var38, var40)
        assert var41 == 0
        var42 = 'l<,Z=SS'
        var43 = module0.search(var42, var42)
        assert var43 == 7
        var44 = -3588
        var45 = 'z,W57\nL?v'
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_542():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = ''
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = -1975.66762
        var15 = 'tXf|WEDW">lw8B'
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_543():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = 'pW{!v,@'
        var6 = 'HWNZ%3wtY4'
        var7 = module0.search(var5, var6)
        assert var7 == 6
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = '|u\nN2H(A\nO;Eo,4Cq['
        var23 = module0.search(var22, var20)
        assert var23 == 7
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = None
        var31 = 'r;Ulen}!'
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_544():
    try:
        var0 = 108
        var1 = 'BaNclpG,[jf\t\n<'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_545():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = True
        var5 = 'Yc"WKD34U'
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_546():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = ''
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '-=rDJ}QB%~hIA'
        var12 = module0.search(var9, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = ''
        var21 = 'v?I;sbmVfyO+,:sa`m>'
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = " rYJj^'FbqO_b)n3vr"
        var26 = '2m5z\n\rT_( tY9+1AP'
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = "$'_V@]Ui,;A}'Be"
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = 'JE\r\\L**#a'
        var35 = module0.search(var32, var34)
        assert var35 == 0
        var36 = '>3aFds@'
        var37 = '-+v96PI_(\\ha'
        var38 = module0.search(var36, var37)
        assert var38 == 2
        var39 = False
        var40 = 'fo)FwoAqf]l\x0bwm\rR'
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_547():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -951
        var8 = module0.search(var7, var5)
        assert var8 == 0
        var9 = ''
        var10 = 'v?I;sbmVfyO+,:sa`m>'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 't'
        var18 = '\x0c6\t0r{_UF'
        var19 = module0.search(var17, var18)
        assert var19 == 5
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '[EXR'
        var27 = module0.search(var26, var26)
        assert var27 == 4
        var28 = "b?=\r*P?T(2'9z"
        var29 = '].ReP/'
        var30 = module0.search(var28, var29)
        assert var30 == 3
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = ' j:xB.yP.I&j@,'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = 'JE\r\\L**#a'
        var36 = module0.search(var33, var35)
        assert var36 == 0
        var37 = '>3aFds@'
        var38 = '-+v96PI_(\\ha'
        var39 = module0.search(var37, var38)
        assert var39 == 2
        var40 = 'rCD'
        var41 = module0.search(var40, var40)
        assert var41 == 3
        var42 = 'l<,Z=SS'
        var43 = module0.search(var42, var42)
        assert var43 == 7
        var44 = 2102
        var45 = module0.search(var4, var44)
    except BaseException:
        pass


def test_case_548():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 'k'
        var16 = None
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_549():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = -1897.946442
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = "b?=\r*P?T(2'9z"
        var18 = '].ReP/'
        var19 = module0.search(var17, var18)
        assert var19 == 3
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 't'
        var24 = '\x0c6\t0r{_UF'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = " rYJj^'FbqO_b)n3vr"
        var27 = '2m5z\n\rT_( tY9+1AP'
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = '41ae^3vh@*}\x0b '
        var30 = module0.search(var29, var6)
    except BaseException:
        pass


def test_case_550():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -951
        var12 = module0.search(var11, var9)
        assert var12 == 0
        var13 = "b?=\r*P?T(2'9z"
        var14 = '].ReP/'
        var15 = module0.search(var13, var14)
        assert var15 == 3
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = '}b2b6Y=MM| '
        var20 = 'K/I\tKH;La'
        var21 = module0.search(var19, var20)
        assert var21 == 9
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = '}b2b6Y=MM| '
        var26 = 'K/I\tKH;La'
        var27 = module0.search(var25, var26)
        assert var27 == 9
        var28 = module0.search(var25, var26)
        assert var28 == 9
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = -951
        var33 = module0.search(var32, var30)
        assert var33 == 0
        var34 = ''
        var35 = 'v?I;sbmVfyO+,:sa`m>'
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = ' j:xB.yP.I&j@,'
        var38 = module0.search(var37, var37)
        assert var38 == 1
        var39 = " rYJj^'FbqO_b)n3vr"
        var40 = '2m5z\n\rT_( tY9+1AP'
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = "$'_V@]Ui,;A}'Be"
        var43 = module0.search(var42, var42)
        assert var43 == 1
        var44 = 'sC:$6i yKx'
        var45 = module0.search(var44, var29)
    except BaseException:
        pass


def test_case_551():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'pW{!v,@'
        var8 = 'HWNZ%3wtY4'
        var9 = module0.search(var7, var8)
        assert var9 == 6
        var10 = "$'_V@]Ui,;A}'Be"
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = "b?=\r*P?T(2'9z"
        var13 = '].ReP/'
        var14 = module0.search(var12, var13)
        assert var14 == 3
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = ''
        var21 = 'v?I;sbmVfyO+,:sa`m>'
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = "6C\t'NVF{70HLR"
        var33 = 'i\r'
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = 'R.'
        var36 = module0.search(var35, var35)
        assert var36 == 2
        var37 = 'R.'
        var38 = module0.search(var37, var37)
        assert var38 == 2
        var39 = 'K9\r'
        var40 = ''
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = 'gD2WY~V}='
        var43 = False
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_552():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = " rYJj^'FbqO_b)n3vr"
        var3 = '2m5z\n\rT_( tY9+1AP'
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 't'
        var9 = '\x0c6\t0r{_UF'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = ' j:xB.yP.I&j@,'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = 'l<,Z=SS'
        var19 = module0.search(var18, var18)
        assert var19 == 7
        var20 = 'D]\x0bz,_GASb0:eB3'
        var21 = '$?'
        var22 = module0.search(var20, var21)
        assert var22 == 2
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'K9\r'
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -1822
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = -951
        var32 = module0.search(var31, var29)
        assert var32 == 0
        var33 = ''
        var34 = 'v?I;sbmVfyO+,:sa`m>'
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = -1897.946442
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = 'R.'
        var40 = module0.search(var39, var39)
        assert var40 == 2
        var41 = ' j:xB.yP.I&j@,'
        var42 = module0.search(var41, var41)
        assert var42 == 1
        var43 = 'JE\r\\L**#a'
        var44 = module0.search(var41, var43)
        assert var44 == 0
        var45 = '>3aFds@'
        var46 = '-+v96PI_(\\ha'
        var47 = module0.search(var45, var46)
        assert var47 == 2
        var48 = "$'_V@]Ui,;A}'Be"
        var49 = module0.search(var48, var48)
        assert var49 == 1
        var50 = 4548.0
        var51 = None
        var52 = module0.search(var50, var51)
    except BaseException:
        pass


def test_case_553():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'a]}4A0xKa}7{!HJK,g'
        var11 = 595.336646
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_554():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = 2024.1
        var8 = False
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_555():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = "$'_V@]Ui,;A}'Be"
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = -1897.946442
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -951
        var12 = module0.search(var11, var9)
        assert var12 == 0
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = "6C\t'NVF{70HLR"
        var19 = 'i\r'
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = '-=rDJ}QB%~hIA'
        var32 = module0.search(var29, var31)
        assert var32 == 2
        var33 = "%5'pe3C%\n[fLT]y#"
        var34 = 399
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_556():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = '}b2b6Y=MM| '
        var6 = 'K/I\tKH;La'
        var7 = module0.search(var5, var6)
        assert var7 == 9
        var8 = module0.search(var5, var6)
        assert var8 == 9
        var9 = "b?=\r*P?T(2'9z"
        var10 = '].ReP/'
        var11 = module0.search(var9, var10)
        assert var11 == 3
        var12 = 'pW{!v,@'
        var13 = 'HWNZ%3wtY4'
        var14 = module0.search(var12, var13)
        assert var14 == 6
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = "$'_V@]Ui,;A}'Be"
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = '[EXR'
        var32 = module0.search(var31, var31)
        assert var32 == 4
        var33 = 'v5.q'
        var34 = '-H)>J'
        var35 = module0.search(var33, var34)
        assert var35 == 5
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = "6C\t'NVF{70HLR"
        var40 = 'i\r'
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = ':$.I~Qf@t#Gj$2fAbu~'
        var43 = -792
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_557():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'v5.q'
        var3 = '-H)>J'
        var4 = module0.search(var2, var3)
        assert var4 == 5
        var5 = -2892.8
        var6 = -474
        var7 = module0.search(var5, var6)
    except BaseException:
        pass


def test_case_558():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'JE\r\\L**#a'
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -183
        var17 = 'p\nYY{\x0cmYVGe3y6\n'
        var18 = module0.search(var16, var17)
    except BaseException:
        pass


def test_case_559():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1897.946442
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = 'v5.q'
        var6 = '-H)>J'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '-=rDJ}QB%~hIA'
        var11 = module0.search(var8, var10)
        assert var11 == 2
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = '}b2b6Y=MM| '
        var16 = 'K/I\tKH;La'
        var17 = module0.search(var15, var16)
        assert var17 == 9
        var18 = module0.search(var15, var16)
        assert var18 == 9
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 't'
        var25 = '\x0c6\t0r{_UF'
        var26 = module0.search(var24, var25)
        assert var26 == 5
        var27 = 263
        var28 = -1164.6867
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_560():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = None
        var3 = module0.search(var2, var0)
    except BaseException:
        pass


def test_case_561():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 2893
        var10 = '.Tr'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_562():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = '}b2b6Y=MM| '
        var3 = 'K/I\tKH;La'
        var4 = module0.search(var2, var3)
        assert var4 == 9
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = "b?=\r*P?T(2'9z"
        var8 = '].ReP/'
        var9 = module0.search(var7, var8)
        assert var9 == 3
        var10 = "$'_V@]Ui,;A}'Be"
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = -951
        var27 = module0.search(var26, var24)
        assert var27 == 0
        var28 = ''
        var29 = 'v?I;sbmVfyO+,:sa`m>'
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 'v5.q'
        var32 = '-H)>J'
        var33 = module0.search(var31, var32)
        assert var33 == 5
        var34 = '\x0cPY&C7$+k'
        var35 = True
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_563():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = "b?=\r*P?T(2'9z"
        var7 = '].ReP/'
        var8 = module0.search(var6, var7)
        assert var8 == 3
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = '|u\nN2H(A\nO;Eo,4Cq['
        var18 = module0.search(var17, var15)
        assert var18 == 7
        var19 = 'rCD'
        var20 = module0.search(var19, var19)
        assert var20 == 3
        var21 = True
        var22 = 'B?\x0coTS(80140#wC>'
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_564():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 't'
        var7 = '\x0c6\t0r{_UF'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = 't'
        var10 = module0.search(var3, var9)
    except BaseException:
        pass


def test_case_565():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 't'
        var14 = '\x0c6\t0r{_UF'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = '>3aFds@'
        var23 = '-+v96PI_(\\ha'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = "$'_V@]Ui,;A}'Be"
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = None
        var37 = -2137.71175
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_566():
    try:
        var0 = None
        var1 = False
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_567():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = '}b2b6Y=MM| '
        var8 = 'K/I\tKH;La'
        var9 = module0.search(var7, var8)
        assert var9 == 9
        var10 = '+]y"0sCPdm=uPiR)z'
        var11 = -3268
        var12 = module0.search(var10, var11)
    except BaseException:
        pass


def test_case_568():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = '}b2b6Y=MM| '
        var6 = 'K/I\tKH;La'
        var7 = module0.search(var5, var6)
        assert var7 == 9
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '}b2b6Y=MM| '
        var12 = 'K/I\tKH;La'
        var13 = module0.search(var11, var12)
        assert var13 == 9
        var14 = module0.search(var11, var12)
        assert var14 == 9
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = ''
        var21 = 'v?I;sbmVfyO+,:sa`m>'
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 'v5.q'
        var24 = '-H)>J'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'K9\r'
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = True
        var32 = module0.search(var31, var26)
    except BaseException:
        pass


def test_case_569():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -3697
        var14 = -262.2202
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_570():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = '-=rDJ}QB%~hIA'
        var10 = module0.search(var7, var9)
        assert var10 == 2
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'v5.q'
        var15 = '-H)>J'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = '}b2b6Y=MM| '
        var18 = 'K/I\tKH;La'
        var19 = module0.search(var17, var18)
        assert var19 == 9
        var20 = 701.63778
        var21 = False
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_571():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = module0.search(var9, var10)
        assert var12 == 9
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'v5.q'
        var30 = '-H)>J'
        var31 = module0.search(var29, var30)
        assert var31 == 5
        var32 = 'R.'
        var33 = module0.search(var32, var32)
        assert var33 == 2
        var34 = 'K9\r'
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = 'l<,Z=SS'
        var38 = module0.search(var37, var37)
        assert var38 == 7
        var39 = 'R.'
        var40 = module0.search(var39, var39)
        assert var40 == 2
        var41 = False
        var42 = True
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_572():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = True
        var4 = True
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_573():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = " rYJj^'FbqO_b)n3vr"
        var4 = '2m5z\n\rT_( tY9+1AP'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 't'
        var10 = '\x0c6\t0r{_UF'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = '-=rDJ}QB%~hIA'
        var15 = module0.search(var12, var14)
        assert var15 == 2
        var16 = 'rCD'
        var17 = module0.search(var16, var16)
        assert var17 == 3
        var18 = '[EXR'
        var19 = module0.search(var18, var18)
        assert var19 == 4
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = '|u\nN2H(A\nO;Eo,4Cq['
        var23 = module0.search(var22, var20)
        assert var23 == 7
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = -1822
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = '}b2b6Y=MM| '
        var30 = 'K/I\tKH;La'
        var31 = module0.search(var29, var30)
        assert var31 == 9
        var32 = module0.search(var29, var30)
        assert var32 == 9
        var33 = -1897.946442
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = "b?=\r*P?T(2'9z"
        var37 = '].ReP/'
        var38 = module0.search(var36, var37)
        assert var38 == 3
        var39 = None
        var40 = 1858
        var41 = module0.search(var39, var40)
    except BaseException:
        pass


def test_case_574():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = "b?=\r*P?T(2'9z"
        var10 = '].ReP/'
        var11 = module0.search(var9, var10)
        assert var11 == 3
        var12 = 'pW{!v,@'
        var13 = 'HWNZ%3wtY4'
        var14 = module0.search(var12, var13)
        assert var14 == 6
        var15 = -334
        var16 = module0.search(var15, var15)
    except BaseException:
        pass


def test_case_575():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = -951
        var15 = module0.search(var14, var12)
        assert var15 == 0
        var16 = ''
        var17 = 'v?I;sbmVfyO+,:sa`m>'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = 'JE\r\\L**#a'
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = None
        var30 = 207
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_576():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = " rYJj^'FbqO_b)n3vr"
        var6 = '2m5z\n\rT_( tY9+1AP'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = "6C\t'NVF{70HLR"
        var12 = 'i\r'
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = -2233.351
        var17 = module0.search(var16, var16)
    except BaseException:
        pass


def test_case_577():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = 'rCD'
        var4 = module0.search(var3, var3)
        assert var4 == 3
        var5 = '[EXR'
        var6 = module0.search(var5, var5)
        assert var6 == 4
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = '|u\nN2H(A\nO;Eo,4Cq['
        var10 = module0.search(var9, var7)
        assert var10 == 7
        var11 = None
        var12 = False
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_578():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '-=rDJ}QB%~hIA'
        var12 = module0.search(var9, var11)
        assert var12 == 2
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = -1822
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = -951
        var30 = module0.search(var29, var27)
        assert var30 == 0
        var31 = -125.54
        var32 = module0.search(var31, var31)
    except BaseException:
        pass


def test_case_579():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = "$'_V@]Ui,;A}'Be"
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = 'v5.q'
        var20 = '-H)>J'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = '[EXR'
        var23 = module0.search(var22, var22)
        assert var23 == 4
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = -1897.946442
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = False
        var30 = module0.search(var29, var29)
    except BaseException:
        pass


def test_case_580():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -951
        var8 = module0.search(var7, var5)
        assert var8 == 0
        var9 = ''
        var10 = 'v?I;sbmVfyO+,:sa`m>'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = 'J56GiH0!\x0c'
        var22 = module0.search(var21, var4)
    except BaseException:
        pass


def test_case_581():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -55.207865
        var4 = 'A6/<4\n<t"b(6:?2D`Ko'
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_582():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = '-=rDJ}QB%~hIA'
        var9 = module0.search(var6, var8)
        assert var9 == 2
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = "6C\t'NVF{70HLR"
        var14 = 'i\r'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = 'D]\x0bz,_GASb0:eB3'
        var23 = '$?'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = "b?=\r*P?T(2'9z"
        var28 = '].ReP/'
        var29 = module0.search(var27, var28)
        assert var29 == 3
        var30 = " rYJj^'FbqO_b)n3vr"
        var31 = '2m5z\n\rT_( tY9+1AP'
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = '[EXR'
        var34 = module0.search(var33, var33)
        assert var34 == 4
        var35 = '}b2b6Y=MM| '
        var36 = 'K/I\tKH;La'
        var37 = module0.search(var35, var36)
        assert var37 == 9
        var38 = None
        var39 = -753.0
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_583():
    try:
        var0 = 2082
        var1 = 'F'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_584():
    try:
        var0 = ''
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_585():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = 'rCD'
        var15 = module0.search(var14, var14)
        assert var15 == 3
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = '-=rDJ}QB%~hIA'
        var19 = module0.search(var16, var18)
        assert var19 == 2
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = ''
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'K9\r'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = ' j:xB.yP.I&j@,'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = 'JE\r\\L**#a'
        var36 = module0.search(var33, var35)
        assert var36 == 0
        var37 = '>3aFds@'
        var38 = '-+v96PI_(\\ha'
        var39 = module0.search(var37, var38)
        assert var39 == 2
        var40 = '"^\n]UF8<Qs\r$'
        var41 = -702
        var42 = module0.search(var40, var41)
    except BaseException:
        pass


def test_case_586():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = ''
        var8 = 'v?I;sbmVfyO+,:sa`m>'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = -1897.946442
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '|u\nN2H(A\nO;Eo,4Cq['
        var20 = module0.search(var19, var17)
        assert var20 == 7
        var21 = "$'_V@]Ui,;A}'Be"
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 't'
        var27 = '\x0c6\t0r{_UF'
        var28 = module0.search(var26, var27)
        assert var28 == 5
        var29 = 748.941
        var30 = module0.search(var2, var29)
    except BaseException:
        pass


def test_case_587():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = 'K9\r'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'D]\x0bz,_GASb0:eB3'
        var14 = '$?'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = '-=rDJ}QB%~hIA'
        var19 = module0.search(var16, var18)
        assert var19 == 2
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = False
        var23 = 1008
        var24 = module0.search(var22, var23)
    except BaseException:
        pass


def test_case_588():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = " rYJj^'FbqO_b)n3vr"
        var4 = '2m5z\n\rT_( tY9+1AP'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = ''
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'v5.q'
        var11 = '-H)>J'
        var12 = module0.search(var10, var11)
        assert var12 == 5
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = "$'_V@]Ui,;A}'Be"
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -951
        var21 = module0.search(var20, var18)
        assert var21 == 0
        var22 = ''
        var23 = 'v?I;sbmVfyO+,:sa`m>'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -951
        var29 = module0.search(var28, var26)
        assert var29 == 0
        var30 = -564.1
        var31 = -1642
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_589():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = ''
        var6 = module0.search(var3, var5)
        assert var6 == 0
        var7 = " rYJj^'FbqO_b)n3vr"
        var8 = '2m5z\n\rT_( tY9+1AP'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = '}b2b6Y=MM| '
        var11 = 'K/I\tKH;La'
        var12 = module0.search(var10, var11)
        assert var12 == 9
        var13 = 'T^3C?bb!hI'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = -1897.946442
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = '-=rDJ}QB%~hIA'
        var23 = module0.search(var20, var22)
        assert var23 == 2
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 't'
        var28 = '\x0c6\t0r{_UF'
        var29 = module0.search(var27, var28)
        assert var29 == 5
        var30 = False
        var31 = module0.search(var30, var0)
    except BaseException:
        pass


def test_case_590():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 't'
        var10 = '\x0c6\t0r{_UF'
        var11 = module0.search(var9, var10)
        assert var11 == 5
        var12 = 'pW{!v,@'
        var13 = 'HWNZ%3wtY4'
        var14 = module0.search(var12, var13)
        assert var14 == 6
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = 'K9\r'
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -1897.946442
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'T^3C?bb!hI'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = ''
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = "b?=\r*P?T(2'9z"
        var32 = '].ReP/'
        var33 = module0.search(var31, var32)
        assert var33 == 3
        var34 = 'RGk^?c-qjGo\\'
        var35 = True
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_591():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = '}b2b6Y=MM| '
        var5 = 'K/I\tKH;La'
        var6 = module0.search(var4, var5)
        assert var6 == 9
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = '-=rDJ}QB%~hIA'
        var10 = module0.search(var7, var9)
        assert var10 == 2
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "6C\t'NVF{70HLR"
        var15 = 'i\r'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'v5.q'
        var18 = '-H)>J'
        var19 = module0.search(var17, var18)
        assert var19 == 5
        var20 = "$'_V@]Ui,;A}'Be"
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = ' j:xB.yP.I&j@,'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = 'JE\r\\L**#a'
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = '>3aFds@'
        var29 = '-+v96PI_(\\ha'
        var30 = module0.search(var28, var29)
        assert var30 == 2
        var31 = -1822
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = -951
        var35 = module0.search(var34, var32)
        assert var35 == 0
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'K9\r'
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 'R.'
        var42 = module0.search(var41, var41)
        assert var42 == 2
        var43 = 'g+4PpE'
        var44 = False
        var45 = module0.search(var43, var44)
    except BaseException:
        pass


def test_case_592():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = -1897.946442
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -951
        var18 = module0.search(var17, var15)
        assert var18 == 0
        var19 = ''
        var20 = 'v?I;sbmVfyO+,:sa`m>'
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = False
        var23 = module0.search(var22, var1)
    except BaseException:
        pass


def test_case_593():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = 'D]\x0bz,_GASb0:eB3'
        var26 = '$?'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = -1897.946442
        var31 = ''
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = '-=rDJ}QB%~hIA'
        var36 = module0.search(var33, var35)
        assert var36 == 2
        var37 = 'v5.q'
        var38 = '-H)>J'
        var39 = module0.search(var37, var38)
        assert var39 == 5
        var40 = 1834
        var41 = module0.search(var40, var30)
    except BaseException:
        pass


def test_case_594():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = 'K9\r'
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = " rYJj^'FbqO_b)n3vr"
        var16 = '2m5z\n\rT_( tY9+1AP'
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = True
        var21 = True
        var22 = module0.search(var20, var21)
    except BaseException:
        pass


def test_case_595():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = ''
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = 2121
        var13 = 'FJ7uF1s!D\nMWeE$g\nn|'
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_596():
    try:
        var0 = 609.63571
        var1 = 807.88
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_597():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "$'_V@]Ui,;A}'Be"
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = '}b2b6Y=MM| '
        var21 = 'K/I\tKH;La'
        var22 = module0.search(var20, var21)
        assert var22 == 9
        var23 = 'R.'
        var24 = module0.search(var23, var23)
        assert var24 == 2
        var25 = 'R.'
        var26 = module0.search(var25, var25)
        assert var26 == 2
        var27 = 'K9\r'
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = 'pW{!v,@'
        var31 = 'HWNZ%3wtY4'
        var32 = module0.search(var30, var31)
        assert var32 == 6
        var33 = 'rCD'
        var34 = module0.search(var33, var33)
        assert var34 == 3
        var35 = None
        var36 = module0.search(var35, var10)
    except BaseException:
        pass


def test_case_598():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = '}b2b6Y=MM| '
        var13 = 'K/I\tKH;La'
        var14 = module0.search(var12, var13)
        assert var14 == 9
        var15 = module0.search(var12, var13)
        assert var15 == 9
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = -951
        var20 = module0.search(var19, var17)
        assert var20 == 0
        var21 = ''
        var22 = 'v?I;sbmVfyO+,:sa`m>'
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = 'K9\r'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = '-=rDJ}QB%~hIA'
        var32 = module0.search(var29, var31)
        assert var32 == 2
        var33 = " rYJj^'FbqO_b)n3vr"
        var34 = '2m5z\n\rT_( tY9+1AP'
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = 'pW{!v,@'
        var37 = 'HWNZ%3wtY4'
        var38 = module0.search(var36, var37)
        assert var38 == 6
        var39 = '}b2b6Y=MM| '
        var40 = 'K/I\tKH;La'
        var41 = module0.search(var39, var40)
        assert var41 == 9
        var42 = None
        var43 = True
        var44 = module0.search(var42, var43)
    except BaseException:
        pass


def test_case_599():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 2530
        var5 = '%CEjv8Zs0'
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_600():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '}b2b6Y=MM| '
        var3 = 'K/I\tKH;La'
        var4 = module0.search(var2, var3)
        assert var4 == 9
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = module0.search(var8, var9)
        assert var11 == 9
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'K9\r'
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = '[EXR'
        var20 = module0.search(var19, var19)
        assert var20 == 4
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = 'D]\x0bz,_GASb0:eB3'
        var26 = '$?'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = 'T^3C?bb!hI'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = ''
        var31 = module0.search(var28, var30)
        assert var31 == 0
        var32 = -1822
        var33 = ''
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = 't'
        var36 = '\x0c6\t0r{_UF'
        var37 = module0.search(var35, var36)
        assert var37 == 5
        var38 = -1897.946442
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 'T^3C?bb!hI'
        var42 = module0.search(var41, var41)
        assert var42 == 1
        var43 = None
        var44 = module0.search(var38, var43)
    except BaseException:
        pass


def test_case_601():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '4S'
        var3 = True
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_602():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = False
        var16 = False
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_603():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 't'
        var9 = '\x0c6\t0r{_UF'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = 1767.2897
        var22 = module0.search(var21, var21)
    except BaseException:
        pass


def test_case_604():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = "6C\t'NVF{70HLR"
        var8 = 'i\r'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = '-=rDJ}QB%~hIA'
        var13 = module0.search(var10, var12)
        assert var13 == 2
        var14 = "b?=\r*P?T(2'9z"
        var15 = '].ReP/'
        var16 = module0.search(var14, var15)
        assert var16 == 3
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -1897.946442
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = '}b2b6Y=MM| '
        var24 = 'K/I\tKH;La'
        var25 = module0.search(var23, var24)
        assert var25 == 9
        var26 = 'v5.q'
        var27 = '-H)>J'
        var28 = module0.search(var26, var27)
        assert var28 == 5
        var29 = None
        var30 = 'u;bF4YY"^'
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_605():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'pW{!v,@'
        var11 = 'HWNZ%3wtY4'
        var12 = module0.search(var10, var11)
        assert var12 == 6
        var13 = 'rCD'
        var14 = module0.search(var13, var13)
        assert var14 == 3
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'l<,Z=SS'
        var20 = module0.search(var19, var19)
        assert var20 == 7
        var21 = 'D]\x0bz,_GASb0:eB3'
        var22 = '$?'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'JE\r\\L**#a'
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = 1646.931421
        var31 = module0.search(var7, var30)
    except BaseException:
        pass


def test_case_606():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = 'K9\r'
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 'T^3C?bb!hI'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = ''
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = "b?=\r*P?T(2'9z"
        var19 = '].ReP/'
        var20 = module0.search(var18, var19)
        assert var20 == 3
        var21 = 'v5.q'
        var22 = '-H)>J'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = -951
        var28 = module0.search(var27, var25)
        assert var28 == 0
        var29 = ''
        var30 = 'v?I;sbmVfyO+,:sa`m>'
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = ' j:xB.yP.I&j@,'
        var33 = module0.search(var32, var32)
        assert var33 == 1
        var34 = "$'_V@]Ui,;A}'Be"
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = None
        var37 = 891.0
        var38 = module0.search(var36, var37)
    except BaseException:
        pass


def test_case_607():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 5269
        var10 = '\x0b_3Sl'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_608():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'v5.q'
        var4 = '-H)>J'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '>3aFds@'
        var13 = '-+v96PI_(\\ha'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = '|z^,$z\x0cEq0:-d5q'
        var20 = module0.search(var0, var19)
    except BaseException:
        pass


def test_case_609():
    try:
        var0 = True
        var1 = 'fv\n.q:s\npY~LBstZF;'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_610():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'pW{!v,@'
        var7 = 'HWNZ%3wtY4'
        var8 = module0.search(var6, var7)
        assert var8 == 6
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = -1897.946442
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = module0.search(var0, var11)
    except BaseException:
        pass


def test_case_611():
    try:
        var0 = -1276
        var1 = 'z[;V[\n|qp1x/OG'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_612():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "6C\t'NVF{70HLR"
        var6 = 'i\r'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 1386
        var9 = module0.search(var6, var8)
    except BaseException:
        pass


def test_case_613():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = None
        var4 = module0.search(var0, var3)
    except BaseException:
        pass


def test_case_614():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = -1335
        var9 = module0.search(var8, var6)
    except BaseException:
        pass


def test_case_615():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'pW{!v,@'
        var3 = 'HWNZ%3wtY4'
        var4 = module0.search(var2, var3)
        assert var4 == 6
        var5 = 'l<,Z=SS'
        var6 = module0.search(var5, var5)
        assert var6 == 7
        var7 = -2982
        var8 = None
        var9 = module0.search(var7, var8)
    except BaseException:
        pass


def test_case_616():
    try:
        var0 = 'M@9&?'
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_617():
    try:
        var0 = 'v5.q'
        var1 = '-H)>J'
        var2 = module0.search(var0, var1)
        assert var2 == 5
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = 'K9\r'
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = "$'_V@]Ui,;A}'Be"
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = -1137
        var26 = module0.search(var5, var25)
    except BaseException:
        pass


def test_case_618():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = 'D]\x0bz,_GASb0:eB3'
        var14 = '$?'
        var15 = module0.search(var13, var14)
        assert var15 == 2
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = 'K9\r'
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = -951
        var25 = module0.search(var24, var22)
        assert var25 == 0
        var26 = ''
        var27 = 'v?I;sbmVfyO+,:sa`m>'
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = " rYJj^'FbqO_b)n3vr"
        var30 = '2m5z\n\rT_( tY9+1AP'
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = 'rCD'
        var33 = module0.search(var32, var32)
        assert var33 == 3
        var34 = '[EXR'
        var35 = module0.search(var34, var34)
        assert var35 == 4
        var36 = 'l<,Z=SS'
        var37 = module0.search(var36, var36)
        assert var37 == 7
        var38 = '|u\nN2H(A\nO;Eo,4Cq['
        var39 = module0.search(var38, var36)
        assert var39 == 7
        var40 = 'T^3C?bb!hI'
        var41 = module0.search(var40, var40)
        assert var41 == 1
        var42 = ''
        var43 = module0.search(var40, var42)
        assert var43 == 0
        var44 = ' j:xB.yP.I&j@,'
        var45 = module0.search(var44, var44)
        assert var45 == 1
        var46 = -1822
        var47 = ''
        var48 = module0.search(var46, var47)
        assert var48 == 0
        var49 = None
        var50 = 2493
        var51 = module0.search(var49, var50)
    except BaseException:
        pass


def test_case_619():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = 'Pc5Dx$'
        var12 = 1360.27226
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_620():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'ZliDUQ\tP=V'
        var4 = module0.search(var3, var0)
    except BaseException:
        pass


def test_case_621():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = ''
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 1340
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = " rYJj^'FbqO_b)n3vr"
        var10 = '2m5z\n\rT_( tY9+1AP'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '}b2b6Y=MM| '
        var18 = 'K/I\tKH;La'
        var19 = module0.search(var17, var18)
        assert var19 == 9
        var20 = module0.search(var17, var18)
        assert var20 == 9
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = "6C\t'NVF{70HLR"
        var25 = 'i\r'
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 'R.'
        var28 = module0.search(var27, var27)
        assert var28 == 2
        var29 = '-=rDJ}QB%~hIA'
        var30 = module0.search(var27, var29)
        assert var30 == 2
        var31 = 1009
        var32 = -3485.4
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_622():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = ''
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 1340
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = 'l<,Z=SS'
        var27 = module0.search(var26, var26)
        assert var27 == 7
        var28 = -1366
        var29 = None
        var30 = module0.search(var28, var29)
    except BaseException:
        pass


def test_case_623():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = module0.search(var9, var10)
        assert var12 == 9
        var13 = '[EXR'
        var14 = module0.search(var13, var13)
        assert var14 == 4
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'l<,Z=SS'
        var18 = module0.search(var17, var17)
        assert var18 == 7
        var19 = 'D]\x0bz,_GASb0:eB3'
        var20 = '$?'
        var21 = module0.search(var19, var20)
        assert var21 == 2
        var22 = " rYJj^'FbqO_b)n3vr"
        var23 = '2m5z\n\rT_( tY9+1AP'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = "$'_V@]Ui,;A}'Be"
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = "b?=\r*P?T(2'9z"
        var28 = '].ReP/'
        var29 = module0.search(var27, var28)
        assert var29 == 3
        var30 = None
        var31 = 4202
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_624():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'T^3C?bb!hI'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'rCD'
        var11 = module0.search(var10, var10)
        assert var11 == 3
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = -1822
        var22 = ''
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = -951
        var25 = module0.search(var24, var22)
        assert var25 == 0
        var26 = ''
        var27 = 'v?I;sbmVfyO+,:sa`m>'
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = "$'_V@]Ui,;A}'Be"
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = " rYJj^'FbqO_b)n3vr"
        var32 = '2m5z\n\rT_( tY9+1AP'
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = 'tG>k`\x0b`?Ix4'
        var35 = 591.236
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_625():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'v5.q'
        var14 = '-H)>J'
        var15 = module0.search(var13, var14)
        assert var15 == 5
        var16 = '!a`*+z7n/5=*qg08'
        var17 = 'mEMQ;?+'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = "b?=\r*P?T(2'9z"
        var22 = '].ReP/'
        var23 = module0.search(var21, var22)
        assert var23 == 3
        var24 = None
        var25 = True
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_626():
    try:
        var0 = -652.0
        var1 = -1418
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_627():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'pW{!v,@'
        var11 = 'HWNZ%3wtY4'
        var12 = module0.search(var10, var11)
        assert var12 == 6
        var13 = '!a`*+z7n/5=*qg08'
        var14 = 'mEMQ;?+'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = '[EXR'
        var17 = module0.search(var16, var16)
        assert var17 == 4
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'l<,Z=SS'
        var21 = module0.search(var20, var20)
        assert var21 == 7
        var22 = 'D]\x0bz,_GASb0:eB3'
        var23 = '$?'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -951
        var29 = module0.search(var28, var26)
        assert var29 == 0
        var30 = ''
        var31 = 'v?I;sbmVfyO+,:sa`m>'
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = 'v5.q'
        var34 = '-H)>J'
        var35 = module0.search(var33, var34)
        assert var35 == 5
        var36 = 'rCD'
        var37 = module0.search(var36, var36)
        assert var37 == 3
        var38 = 'T^3C?bb!hI'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = ''
        var41 = module0.search(var38, var40)
        assert var41 == 0
        var42 = 1340
        var43 = ''
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = True
        var46 = "_'HEZ"
        var47 = module0.search(var45, var46)
    except BaseException:
        pass


def test_case_628():
    try:
        var0 = '!a`*+z7n/5=*qg08'
        var1 = 'mEMQ;?+'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'v5.q'
        var4 = '-H)>J'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = "b?=\r*P?T(2'9z"
        var11 = '].ReP/'
        var12 = module0.search(var10, var11)
        assert var12 == 3
        var13 = 'R.'
        var14 = module0.search(var13, var13)
        assert var14 == 2
        var15 = 'K9\r'
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -2519.8219
        var19 = '~ATOlvV2'
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_629():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = "b?=\r*P?T(2'9z"
        var4 = '].ReP/'
        var5 = module0.search(var3, var4)
        assert var5 == 3
        var6 = "$'_V@]Ui,;A}'Be"
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'T^3C?bb!hI'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = ''
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = " rYJj^'FbqO_b)n3vr"
        var22 = '2m5z\n\rT_( tY9+1AP'
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'rCD'
        var25 = module0.search(var24, var24)
        assert var25 == 3
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = ''
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = 1340
        var31 = ''
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = -1897.946442
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = '[EXR'
        var37 = module0.search(var36, var36)
        assert var37 == 4
        var38 = ' j:xB.yP.I&j@,'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = 'D]\x0bz,_GASb0:eB3'
        var43 = '$?'
        var44 = module0.search(var42, var43)
        assert var44 == 2
        var45 = 2245
        var46 = '2G&#j|QQZ[CZivt#H'
        var47 = module0.search(var45, var46)
    except BaseException:
        pass


def test_case_630():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = "$'_V@]Ui,;A}'Be"
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = "6C\t'NVF{70HLR"
        var14 = 'i\r'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = '>3aFds@'
        var23 = '-+v96PI_(\\ha'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = ' j:xB.yP.I&j@,'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = '[EXR'
        var28 = module0.search(var27, var27)
        assert var28 == 4
        var29 = ' j:xB.yP.I&j@,'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = 'l<,Z=SS'
        var32 = module0.search(var31, var31)
        assert var32 == 7
        var33 = 'D]\x0bz,_GASb0:eB3'
        var34 = '$?'
        var35 = module0.search(var33, var34)
        assert var35 == 2
        var36 = 'R.'
        var37 = module0.search(var36, var36)
        assert var37 == 2
        var38 = 'sSo'
        var39 = 2451.0
        var40 = module0.search(var38, var39)
    except BaseException:
        pass


def test_case_631():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = -1004
        var5 = module0.search(var4, var0)
    except BaseException:
        pass


def test_case_632():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = 'pW{!v,@'
        var5 = 'HWNZ%3wtY4'
        var6 = module0.search(var4, var5)
        assert var6 == 6
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 't'
        var24 = '\x0c6\t0r{_UF'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = False
        var27 = 'g.<\\W@$'
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_633():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = '>3aFds@'
        var7 = '-+v96PI_(\\ha'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = '}b2b6Y=MM| '
        var13 = 'K/I\tKH;La'
        var14 = module0.search(var12, var13)
        assert var14 == 9
        var15 = module0.search(var12, var13)
        assert var15 == 9
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = -1822
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 't'
        var22 = '\x0c6\t0r{_UF'
        var23 = module0.search(var21, var22)
        assert var23 == 5
        var24 = 'R.'
        var25 = module0.search(var24, var24)
        assert var25 == 2
        var26 = '-=rDJ}QB%~hIA'
        var27 = module0.search(var24, var26)
        assert var27 == 2
        var28 = 'T^3C?bb!hI'
        var29 = module0.search(var28, var28)
        assert var29 == 1
        var30 = ''
        var31 = module0.search(var28, var30)
        assert var31 == 0
        var32 = None
        var33 = None
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_634():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'v5.q'
        var3 = '-H)>J'
        var4 = module0.search(var2, var3)
        assert var4 == 5
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = -1897.946442
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = None
        var15 = module0.search(var14, var14)
    except BaseException:
        pass


def test_case_635():
    try:
        var0 = '!a`*+z7n/5=*qg08'
        var1 = 'mEMQ;?+'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = 'K9\r'
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = ''
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 1340
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = -951
        var21 = module0.search(var20, var18)
        assert var21 == 0
        var22 = "$'_V@]Ui,;A}'Be"
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'X-MCC~Pj\r M*HwP!H'
        var25 = -1432.9
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_636():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = "$'_V@]Ui,;A}'Be"
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = '[EXR'
        var13 = module0.search(var12, var12)
        assert var13 == 4
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'D]\x0bz,_GASb0:eB3'
        var19 = '$?'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = '-=rDJ}QB%~hIA'
        var24 = module0.search(var21, var23)
        assert var24 == 2
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -951
        var29 = module0.search(var28, var26)
        assert var29 == 0
        var30 = " rYJj^'FbqO_b)n3vr"
        var31 = '2m5z\n\rT_( tY9+1AP'
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = True
        var34 = -1027.62
        var35 = module0.search(var33, var34)
    except BaseException:
        pass


def test_case_637():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = '|u\nN2H(A\nO;Eo,4Cq['
        var11 = module0.search(var10, var8)
        assert var11 == 7
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = 'K9\r'
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = False
        var21 = module0.search(var17, var20)
    except BaseException:
        pass


def test_case_638():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = '[EXR'
        var11 = module0.search(var10, var10)
        assert var11 == 4
        var12 = 'l<,Z=SS'
        var13 = module0.search(var12, var12)
        assert var13 == 7
        var14 = '|u\nN2H(A\nO;Eo,4Cq['
        var15 = module0.search(var14, var12)
        assert var15 == 7
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = 'rCD'
        var19 = module0.search(var18, var18)
        assert var19 == 3
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 't'
        var24 = '\x0c6\t0r{_UF'
        var25 = module0.search(var23, var24)
        assert var25 == 5
        var26 = -1822
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = -951
        var30 = module0.search(var29, var27)
        assert var30 == 0
        var31 = ''
        var32 = 'v?I;sbmVfyO+,:sa`m>'
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = 'R.'
        var35 = module0.search(var34, var34)
        assert var35 == 2
        var36 = 'K9\r'
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = -1822
        var40 = ''
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = -951
        var43 = module0.search(var42, var40)
        assert var43 == 0
        var44 = 'd\\mJ_jg\x0b*!D19{;'
        var45 = False
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_639():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 't'
        var9 = '\x0c6\t0r{_UF'
        var10 = module0.search(var8, var9)
        assert var10 == 5
        var11 = False
        var12 = 794.3642
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_640():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = -951
        var6 = module0.search(var5, var3)
        assert var6 == 0
        var7 = ''
        var8 = 'v?I;sbmVfyO+,:sa`m>'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = 'R.'
        var16 = module0.search(var15, var15)
        assert var16 == 2
        var17 = ' j:xB.yP.I&j@,'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = 'JE\r\\L**#a'
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = '>3aFds@'
        var22 = '-+v96PI_(\\ha'
        var23 = module0.search(var21, var22)
        assert var23 == 2
        var24 = 'pW{!v,@'
        var25 = 'HWNZ%3wtY4'
        var26 = module0.search(var24, var25)
        assert var26 == 6
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = '}b2b6Y=MM| '
        var31 = 'K/I\tKH;La'
        var32 = module0.search(var30, var31)
        assert var32 == 9
        var33 = module0.search(var30, var31)
        assert var33 == 9
        var34 = "$'_V@]Ui,;A}'Be"
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = 'rCD'
        var37 = module0.search(var36, var36)
        assert var37 == 3
        var38 = '[EXR'
        var39 = module0.search(var38, var38)
        assert var39 == 4
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = '|u\nN2H(A\nO;Eo,4Cq['
        var43 = module0.search(var42, var40)
        assert var43 == 7
        var44 = 'R.'
        var45 = module0.search(var44, var44)
        assert var45 == 2
        var46 = ' j:xB.yP.I&j@,'
        var47 = module0.search(var46, var46)
        assert var47 == 1
        var48 = 'JE\r\\L**#a'
        var49 = module0.search(var46, var48)
        assert var49 == 0
        var50 = -1419.50285
        var51 = True
        var52 = module0.search(var50, var51)
    except BaseException:
        pass


def test_case_641():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = '-=rDJ}QB%~hIA'
        var9 = module0.search(var6, var8)
        assert var9 == 2
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = -951
        var19 = module0.search(var18, var16)
        assert var19 == 0
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'l<,Z=SS'
        var25 = module0.search(var24, var24)
        assert var25 == 7
        var26 = 'D]\x0bz,_GASb0:eB3'
        var27 = '$?'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'v5.q'
        var30 = '-H)>J'
        var31 = module0.search(var29, var30)
        assert var31 == 5
        var32 = 'rCD'
        var33 = module0.search(var32, var32)
        assert var33 == 3
        var34 = 'T^3C?bb!hI'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = ''
        var37 = module0.search(var34, var36)
        assert var37 == 0
        var38 = 1340
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = False
        var42 = 2289
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_642():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'r5G'
        var3 = -354
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_643():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = module0.search(var4, var7)
    except BaseException:
        pass


def test_case_644():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = ''
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 1340
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = '-=rDJ}QB%~hIA'
        var12 = module0.search(var9, var11)
        assert var12 == 2
        var13 = True
        var14 = module0.search(var11, var13)
    except BaseException:
        pass


def test_case_645():
    try:
        var0 = ''
        var1 = -3006.659
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_646():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'v5.q'
        var6 = '-H)>J'
        var7 = module0.search(var5, var6)
        assert var7 == 5
        var8 = '!a`*+z7n/5=*qg08'
        var9 = 'mEMQ;?+'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'l<,Z=SS'
        var16 = module0.search(var15, var15)
        assert var16 == 7
        var17 = 'D]\x0bz,_GASb0:eB3'
        var18 = '$?'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = " rYJj^'FbqO_b)n3vr"
        var23 = '2m5z\n\rT_( tY9+1AP'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = "6C\t'NVF{70HLR"
        var29 = 'i\r'
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = -1822
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = -951
        var37 = module0.search(var36, var34)
        assert var37 == 0
        var38 = ''
        var39 = 'v?I;sbmVfyO+,:sa`m>'
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 'pW{!v,@'
        var42 = 'HWNZ%3wtY4'
        var43 = module0.search(var41, var42)
        assert var43 == 6
        var44 = True
        var45 = 'y!gTqS8T'
        var46 = module0.search(var44, var45)
    except BaseException:
        pass


def test_case_647():
    try:
        var0 = '!a`*+z7n/5=*qg08'
        var1 = 'mEMQ;?+'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "b?=\r*P?T(2'9z"
        var4 = '].ReP/'
        var5 = module0.search(var3, var4)
        assert var5 == 3
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = 't'
        var15 = '\x0c6\t0r{_UF'
        var16 = module0.search(var14, var15)
        assert var16 == 5
        var17 = '}b2b6Y=MM| '
        var18 = 'K/I\tKH;La'
        var19 = module0.search(var17, var18)
        assert var19 == 9
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = -951
        var24 = module0.search(var23, var21)
        assert var24 == 0
        var25 = 'T^3C?bb!hI'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = ''
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '[Va'
        var30 = -178.0
        var31 = module0.search(var29, var30)
    except BaseException:
        pass


def test_case_648():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = '}b2b6Y=MM| '
        var5 = 'K/I\tKH;La'
        var6 = module0.search(var4, var5)
        assert var6 == 9
        var7 = '!a`*+z7n/5=*qg08'
        var8 = 'mEMQ;?+'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = "b?=\r*P?T(2'9z"
        var13 = '].ReP/'
        var14 = module0.search(var12, var13)
        assert var14 == 3
        var15 = 2753
        var16 = module0.search(var15, var7)
    except BaseException:
        pass


def test_case_649():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = -1897.946442
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = '|u\nN2H(A\nO;Eo,4Cq['
        var14 = module0.search(var13, var11)
        assert var14 == 7
        var15 = 'v5.q'
        var16 = '-H)>J'
        var17 = module0.search(var15, var16)
        assert var17 == 5
        var18 = 1608
        var19 = 6091.0
        var20 = module0.search(var18, var19)
    except BaseException:
        pass


def test_case_650():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = "b?=\r*P?T(2'9z"
        var3 = '].ReP/'
        var4 = module0.search(var2, var3)
        assert var4 == 3
        var5 = 'T^3C?bb!hI'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'K9\r'
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 979
        var13 = module0.search(var12, var12)
    except BaseException:
        pass


def test_case_651():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -951
        var7 = module0.search(var6, var4)
        assert var7 == 0
        var8 = ''
        var9 = 'v?I;sbmVfyO+,:sa`m>'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = "}9Od1r9VLz'rSPz`27&X"
        var12 = True
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_652():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "6C\t'NVF{70HLR"
        var6 = 'i\r'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '-=rDJ}QB%~hIA'
        var11 = module0.search(var8, var10)
        assert var11 == 2
        var12 = "$'_V@]Ui,;A}'Be"
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = -1406.198
        var15 = module0.search(var2, var14)
    except BaseException:
        pass


def test_case_653():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = None
        var8 = module0.search(var7, var7)
    except BaseException:
        pass


def test_case_654():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'JE\r\\L**#a'
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = '}b2b6Y=MM| '
        var9 = 'K/I\tKH;La'
        var10 = module0.search(var8, var9)
        assert var10 == 9
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = "b?=\r*P?T(2'9z"
        var14 = '].ReP/'
        var15 = module0.search(var13, var14)
        assert var15 == 3
        var16 = 'T^3C?bb!hI'
        var17 = module0.search(var16, var16)
        assert var17 == 1
        var18 = ''
        var19 = module0.search(var16, var18)
        assert var19 == 0
        var20 = module0.search(var18, var18)
        assert var20 == 0
        var21 = '48$=9BuG9q6k'
        var22 = 1211.8
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_655():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = -951
        var13 = module0.search(var12, var10)
        assert var13 == 0
        var14 = 132
        var15 = 't!'
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_656():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = ''
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = 1340
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = -1897.946442
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = -2596
        var17 = 'H'
        var18 = module0.search(var16, var17)
    except BaseException:
        pass


def test_case_657():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = 'v5.q'
        var12 = '-H)>J'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = 'T^3C?bb!hI'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = ''
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = module0.search(var16, var16)
        assert var18 == 0
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = None
        var31 = False
        var32 = module0.search(var30, var31)
    except BaseException:
        pass


def test_case_658():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = '[EXR'
        var4 = module0.search(var3, var3)
        assert var4 == 4
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'l<,Z=SS'
        var8 = module0.search(var7, var7)
        assert var8 == 7
        var9 = 'D]\x0bz,_GASb0:eB3'
        var10 = '$?'
        var11 = module0.search(var9, var10)
        assert var11 == 2
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -951
        var16 = module0.search(var15, var13)
        assert var16 == 0
        var17 = ''
        var18 = 'v?I;sbmVfyO+,:sa`m>'
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = " rYJj^'FbqO_b)n3vr"
        var21 = '2m5z\n\rT_( tY9+1AP'
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = 'l<,Z=SS'
        var24 = module0.search(var23, var23)
        assert var24 == 7
        var25 = False
        var26 = -493.687224
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_659():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -951
        var7 = module0.search(var6, var4)
        assert var7 == 0
        var8 = 'pW{!v,@'
        var9 = 'HWNZ%3wtY4'
        var10 = module0.search(var8, var9)
        assert var10 == 6
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = "6C\t'NVF{70HLR"
        var15 = 'i\r'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '[EXR'
        var18 = module0.search(var17, var17)
        assert var18 == 4
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'l<,Z=SS'
        var22 = module0.search(var21, var21)
        assert var22 == 7
        var23 = 'D]\x0bz,_GASb0:eB3'
        var24 = '$?'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = 'rCD'
        var27 = module0.search(var26, var26)
        assert var27 == 3
        var28 = 'rCD'
        var29 = module0.search(var28, var28)
        assert var29 == 3
        var30 = '[EXR'
        var31 = module0.search(var30, var30)
        assert var31 == 4
        var32 = 'l<,Z=SS'
        var33 = module0.search(var32, var32)
        assert var33 == 7
        var34 = '|u\nN2H(A\nO;Eo,4Cq['
        var35 = module0.search(var34, var32)
        assert var35 == 7
        var36 = module0.search(var8, var6)
    except BaseException:
        pass


def test_case_660():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 2633.7
        var3 = False
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_661():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = True
        var4 = True
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_662():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 4621.5
        var3 = 1413
        var4 = module0.search(var2, var3)
    except BaseException:
        pass


def test_case_663():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = -1709.841
        var9 = module0.search(var0, var8)
    except BaseException:
        pass


def test_case_664():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = -1517.56
        var7 = True
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_665():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = " rYJj^'FbqO_b)n3vr"
        var15 = '2m5z\n\rT_( tY9+1AP'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = "$'_V@]Ui,;A}'Be"
        var24 = module0.search(var23, var23)
        assert var24 == 1
        var25 = 'T^3C?bb!hI'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = ''
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = -1822
        var30 = ''
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = 't'
        var33 = '\x0c6\t0r{_UF'
        var34 = module0.search(var32, var33)
        assert var34 == 5
        var35 = 1402.829122
        var36 = -1189
        var37 = module0.search(var35, var36)
    except BaseException:
        pass


def test_case_666():
    try:
        var0 = '.t-'
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_667():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = 'T^3C?bb!hI'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = ''
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = 1340
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = "$'_V@]Ui,;A}'Be"
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = '}b2b6Y=MM| '
        var32 = 'K/I\tKH;La'
        var33 = module0.search(var31, var32)
        assert var33 == 9
        var34 = '0.(uM 8Ovs2cfL'
        var35 = 4194
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_668():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = ' j:xB.yP.I&j@,'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = 'D]\x0bz,_GASb0:eB3'
        var9 = '$?'
        var10 = module0.search(var8, var9)
        assert var10 == 2
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'pW{!v,@'
        var14 = 'HWNZ%3wtY4'
        var15 = module0.search(var13, var14)
        assert var15 == 6
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = ' j:xB.yP.I&j@,'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = 'JE\r\\L**#a'
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = '>3aFds@'
        var23 = '-+v96PI_(\\ha'
        var24 = module0.search(var22, var23)
        assert var24 == 2
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = '}b2b6Y=MM| '
        var29 = 'K/I\tKH;La'
        var30 = module0.search(var28, var29)
        assert var30 == 9
        var31 = module0.search(var28, var29)
        assert var31 == 9
        var32 = " rYJj^'FbqO_b)n3vr"
        var33 = '2m5z\n\rT_( tY9+1AP'
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = "b?=\r*P?T(2'9z"
        var36 = '].ReP/'
        var37 = module0.search(var35, var36)
        assert var37 == 3
        var38 = 'T^3C?bb!hI'
        var39 = module0.search(var38, var38)
        assert var39 == 1
        var40 = ''
        var41 = module0.search(var38, var40)
        assert var41 == 0
        var42 = '!a`*+z7n/5=*qg08'
        var43 = 'mEMQ;?+'
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = False
        var46 = -180.91
        var47 = module0.search(var45, var46)
    except BaseException:
        pass


def test_case_669():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = '[EXR'
        var7 = module0.search(var6, var6)
        assert var7 == 4
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 'D]\x0bz,_GASb0:eB3'
        var13 = '$?'
        var14 = module0.search(var12, var13)
        assert var14 == 2
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = 'K9\r'
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = '-=rDJ}QB%~hIA'
        var25 = module0.search(var22, var24)
        assert var25 == 2
        var26 = 'G7dvKE3 9'
        var27 = ''
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = 'T^3C?bb!hI'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = ''
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = module0.search(var31, var31)
        assert var33 == 0
        var34 = -1822
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = -951
        var38 = module0.search(var37, var35)
        assert var38 == 0
        var39 = 'pW{!v,@'
        var40 = 'HWNZ%3wtY4'
        var41 = module0.search(var39, var40)
        assert var41 == 6
        var42 = 'R.'
        var43 = module0.search(var42, var42)
        assert var43 == 2
        var44 = ' j:xB.yP.I&j@,'
        var45 = module0.search(var44, var44)
        assert var45 == 1
        var46 = 'JE\r\\L**#a'
        var47 = module0.search(var44, var46)
        assert var47 == 0
        var48 = False
        var49 = 'z$P54lEE@&sJ'
        var50 = module0.search(var48, var49)
    except BaseException:
        pass


def test_case_670():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -1173
        var10 = -1591
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_671():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = -1897.946442
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'R.'
        var10 = module0.search(var9, var9)
        assert var10 == 2
        var11 = ' j:xB.yP.I&j@,'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = 'JE\r\\L**#a'
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = '>3aFds@'
        var16 = '-+v96PI_(\\ha'
        var17 = module0.search(var15, var16)
        assert var17 == 2
        var18 = False
        var19 = module0.search(var16, var18)
    except BaseException:
        pass


def test_case_672():
    try:
        var0 = "~#BG\\x'~/vJ"
        var1 = -3403
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_673():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 260
        var5 = True
        var6 = module0.search(var4, var5)
    except BaseException:
        pass


def test_case_674():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "b?=\r*P?T(2'9z"
        var4 = '].ReP/'
        var5 = module0.search(var3, var4)
        assert var5 == 3
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = True
        var15 = module0.search(var14, var12)
    except BaseException:
        pass


def test_case_675():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'K9\r'
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = " rYJj^'FbqO_b)n3vr"
        var6 = '2m5z\n\rT_( tY9+1AP'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'l<,Z=SS'
        var9 = module0.search(var8, var8)
        assert var9 == 7
        var10 = 'v5.q'
        var11 = '-H)>J'
        var12 = module0.search(var10, var11)
        assert var12 == 5
        var13 = 'pW{!v,@'
        var14 = 'HWNZ%3wtY4'
        var15 = module0.search(var13, var14)
        assert var15 == 6
        var16 = 'T?K+n'
        var17 = False
        var18 = module0.search(var16, var17)
    except BaseException:
        pass


def test_case_676():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = '!a`*+z7n/5=*qg08'
        var8 = 'mEMQ;?+'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = -1590
        var17 = module0.search(var16, var10)
    except BaseException:
        pass


def test_case_677():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -861.601
        var10 = ' ~B)ENpC,M\nm3`b'
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_678():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = 'l<,Z=SS'
        var4 = module0.search(var3, var3)
        assert var4 == 7
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -951
        var9 = module0.search(var8, var6)
        assert var9 == 0
        var10 = ''
        var11 = 'v?I;sbmVfyO+,:sa`m>'
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -951
        var17 = module0.search(var16, var14)
        assert var17 == 0
        var18 = 'v5.q'
        var19 = '-H)>J'
        var20 = module0.search(var18, var19)
        assert var20 == 5
        var21 = " rYJj^'FbqO_b)n3vr"
        var22 = '2m5z\n\rT_( tY9+1AP'
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = '[EXR'
        var25 = module0.search(var24, var24)
        assert var25 == 4
        var26 = ' j:xB.yP.I&j@,'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = 'l<,Z=SS'
        var29 = module0.search(var28, var28)
        assert var29 == 7
        var30 = 'D]\x0bz,_GASb0:eB3'
        var31 = '$?'
        var32 = module0.search(var30, var31)
        assert var32 == 2
        var33 = 'R.'
        var34 = module0.search(var33, var33)
        assert var34 == 2
        var35 = '-=rDJ}QB%~hIA'
        var36 = module0.search(var33, var35)
        assert var36 == 2
        var37 = 'G7dvKE3 9'
        var38 = ''
        var39 = module0.search(var37, var38)
        assert var39 == 0
        var40 = ' j:xB.yP.I&j@,'
        var41 = module0.search(var40, var40)
        assert var41 == 1
        var42 = -1822
        var43 = ''
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = '}b2b6Y=MM| '
        var46 = 'K/I\tKH;La'
        var47 = module0.search(var45, var46)
        assert var47 == 9
        var48 = module0.search(var45, var46)
        assert var48 == 9
        var49 = ',Fs\x0bM'
        var50 = None
        var51 = module0.search(var49, var50)
    except BaseException:
        pass


def test_case_679():
    try:
        var0 = True
        var1 = '^|Q}\tQ9IM$mmG'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_680():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = -1822
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = "6C\t'NVF{70HLR"
        var18 = 'i\r'
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'pW{!v,@'
        var23 = 'HWNZ%3wtY4'
        var24 = module0.search(var22, var23)
        assert var24 == 6
        var25 = '[EXR'
        var26 = module0.search(var25, var25)
        assert var26 == 4
        var27 = ' j:xB.yP.I&j@,'
        var28 = module0.search(var27, var27)
        assert var28 == 1
        var29 = 'l<,Z=SS'
        var30 = module0.search(var29, var29)
        assert var30 == 7
        var31 = 'D]\x0bz,_GASb0:eB3'
        var32 = '$?'
        var33 = module0.search(var31, var32)
        assert var33 == 2
        var34 = -1822
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = 'v5.q'
        var38 = '-H)>J'
        var39 = module0.search(var37, var38)
        assert var39 == 5
        var40 = 'rCD'
        var41 = module0.search(var40, var40)
        assert var41 == 3
        var42 = 'T^3C?bb!hI'
        var43 = module0.search(var42, var42)
        assert var43 == 1
        var44 = ''
        var45 = module0.search(var42, var44)
        assert var45 == 0
        var46 = 1340
        var47 = ''
        var48 = module0.search(var46, var47)
        assert var48 == 0
        var49 = '[EXR'
        var50 = module0.search(var49, var49)
        assert var50 == 4
        var51 = 'c\t0B_D=W4pp"%'
        var52 = module0.search(var51, var3)
    except BaseException:
        pass


def test_case_681():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'l<,Z=SS'
        var3 = module0.search(var2, var2)
        assert var3 == 7
        var4 = "$'_V@]Ui,;A}'Be"
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = " rYJj^'FbqO_b)n3vr"
        var9 = '2m5z\n\rT_( tY9+1AP'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = False
        var12 = None
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_682():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = ''
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = module0.search(var8, var8)
        assert var10 == 0
        var11 = -1822
        var12 = ''
        var13 = module0.search(var11, var12)
        assert var13 == 0
        var14 = -951
        var15 = module0.search(var14, var12)
        assert var15 == 0
        var16 = ''
        var17 = 'v?I;sbmVfyO+,:sa`m>'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = -1693.7
        var26 = module0.search(var6, var25)
    except BaseException:
        pass


def test_case_683():
    try:
        var0 = 'l<,Z=SS'
        var1 = module0.search(var0, var0)
        assert var1 == 7
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = 'pW{!v,@'
        var7 = 'HWNZ%3wtY4'
        var8 = module0.search(var6, var7)
        assert var8 == 6
        var9 = "b?=\r*P?T(2'9z"
        var10 = '].ReP/'
        var11 = module0.search(var9, var10)
        assert var11 == 3
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = '-=rDJ}QB%~hIA'
        var15 = module0.search(var12, var14)
        assert var15 == 2
        var16 = 'G7dvKE3 9'
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'rCD'
        var22 = module0.search(var21, var21)
        assert var22 == 3
        var23 = '[EXR'
        var24 = module0.search(var23, var23)
        assert var24 == 4
        var25 = 'l<,Z=SS'
        var26 = module0.search(var25, var25)
        assert var26 == 7
        var27 = '|u\nN2H(A\nO;Eo,4Cq['
        var28 = module0.search(var27, var25)
        assert var28 == 7
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = -1897.946442
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = 1207.0
        var35 = False
        var36 = module0.search(var34, var35)
    except BaseException:
        pass


def test_case_684():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 581
        var4 = module0.search(var3, var3)
    except BaseException:
        pass


def test_case_685():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = '[EXR'
        var9 = module0.search(var8, var8)
        assert var9 == 4
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = '|u\nN2H(A\nO;Eo,4Cq['
        var13 = module0.search(var12, var10)
        assert var13 == 7
        var14 = '!a`*+z7n/5=*qg08'
        var15 = 'mEMQ;?+'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = ''
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 1340
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'K9\r'
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 'i<pp&Ud'
        var32 = 264
        var33 = module0.search(var31, var32)
    except BaseException:
        pass


def test_case_686():
    try:
        var0 = True
        var1 = -109
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_687():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = '-=rDJ}QB%~hIA'
        var6 = module0.search(var3, var5)
        assert var6 == 2
        var7 = 'G7dvKE3 9'
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = ' j:xB.yP.I&j@,'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = 'JE\r\\L**#a'
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = '>3aFds@'
        var17 = '-+v96PI_(\\ha'
        var18 = module0.search(var16, var17)
        assert var18 == 2
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = -727
        var24 = None
        var25 = module0.search(var23, var24)
    except BaseException:
        pass


def test_case_688():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'v5.q'
        var7 = '-H)>J'
        var8 = module0.search(var6, var7)
        assert var8 == 5
        var9 = 2210.0
        var10 = module0.search(var9, var9)
    except BaseException:
        pass


def test_case_689():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = '[EXR'
        var5 = module0.search(var4, var4)
        assert var5 == 4
        var6 = 'l<,Z=SS'
        var7 = module0.search(var6, var6)
        assert var7 == 7
        var8 = '|u\nN2H(A\nO;Eo,4Cq['
        var9 = module0.search(var8, var6)
        assert var9 == 7
        var10 = -1822
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -951
        var14 = module0.search(var13, var11)
        assert var14 == 0
        var15 = ' j:xB.yP.I&j@,'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'T^3C?bb!hI'
        var18 = module0.search(var17, var17)
        assert var18 == 1
        var19 = ''
        var20 = module0.search(var17, var19)
        assert var20 == 0
        var21 = " rYJj^'FbqO_b)n3vr"
        var22 = '2m5z\n\rT_( tY9+1AP'
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 'T^3C?bb!hI'
        var25 = module0.search(var24, var24)
        assert var25 == 1
        var26 = ''
        var27 = module0.search(var24, var26)
        assert var27 == 0
        var28 = module0.search(var26, var26)
        assert var28 == 0
        var29 = '!a`*+z7n/5=*qg08'
        var30 = 'mEMQ;?+'
        var31 = module0.search(var29, var30)
        assert var31 == 0
        var32 = '\\n\rLQH$v ^Z1'
        var33 = module0.search(var13, var32)
    except BaseException:
        pass


def test_case_690():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = ' j:xB.yP.I&j@,'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = " rYJj^'FbqO_b)n3vr"
        var9 = '2m5z\n\rT_( tY9+1AP'
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = 'K9\r'
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = module0.search(var0, var5)
    except BaseException:
        pass


def test_case_691():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = 'G7dvKE3 9'
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = " rYJj^'FbqO_b)n3vr"
        var10 = '2m5z\n\rT_( tY9+1AP'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -951
        var16 = module0.search(var15, var13)
        assert var16 == 0
        var17 = ''
        var18 = 'v?I;sbmVfyO+,:sa`m>'
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = '}b2b6Y=MM| '
        var30 = 'K/I\tKH;La'
        var31 = module0.search(var29, var30)
        assert var31 == 9
        var32 = False
        var33 = '0v'
        var34 = module0.search(var32, var33)
    except BaseException:
        pass


def test_case_692():
    try:
        var0 = '!a`*+z7n/5=*qg08'
        var1 = 'mEMQ;?+'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'T^3C?bb!hI'
        var4 = module0.search(var3, var3)
        assert var4 == 1
        var5 = ''
        var6 = module0.search(var3, var5)
        assert var6 == 0
        var7 = module0.search(var5, var5)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = ' j:xB.yP.I&j@,'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = 'JE\r\\L**#a'
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = '>3aFds@'
        var15 = '-+v96PI_(\\ha'
        var16 = module0.search(var14, var15)
        assert var16 == 2
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = '-=rDJ}QB%~hIA'
        var20 = module0.search(var17, var19)
        assert var20 == 2
        var21 = 'R.'
        var22 = module0.search(var21, var21)
        assert var22 == 2
        var23 = -1897.946442
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'K9\r'
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = -1822
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = "6C\t'NVF{70HLR"
        var35 = 'i\r'
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = -1822
        var38 = ''
        var39 = module0.search(var37, var38)
        assert var39 == 0
        var40 = '}b2b6Y=MM| '
        var41 = 'K/I\tKH;La'
        var42 = module0.search(var40, var41)
        assert var42 == 9
        var43 = module0.search(var40, var41)
        assert var43 == 9
        var44 = 1602
        var45 = module0.search(var37, var44)
    except BaseException:
        pass


def test_case_693():
    try:
        var0 = 'pW{!v,@'
        var1 = 'HWNZ%3wtY4'
        var2 = module0.search(var0, var1)
        assert var2 == 6
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = ' j:xB.yP.I&j@,'
        var6 = module0.search(var5, var5)
        assert var6 == 1
        var7 = 'JE\r\\L**#a'
        var8 = module0.search(var5, var7)
        assert var8 == 0
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = '[EXR'
        var12 = module0.search(var11, var11)
        assert var12 == 4
        var13 = 'l<,Z=SS'
        var14 = module0.search(var13, var13)
        assert var14 == 7
        var15 = '|u\nN2H(A\nO;Eo,4Cq['
        var16 = module0.search(var15, var13)
        assert var16 == 7
        var17 = -1822
        var18 = ''
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = "6C\t'NVF{70HLR"
        var21 = 'i\r'
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = '7ezZijeh)0e6xN'
        var24 = 'g\nk\\/E'
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'T^3C?bb!hI'
        var27 = module0.search(var26, var26)
        assert var27 == 1
        var28 = ''
        var29 = module0.search(var26, var28)
        assert var29 == 0
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = '-=rDJ}QB%~hIA'
        var33 = module0.search(var30, var32)
        assert var33 == 2
        var34 = 'G7dvKE3 9'
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = False
        var38 = module0.search(var37, var1)
    except BaseException:
        pass


def test_case_694():
    try:
        var0 = '}b2b6Y=MM| '
        var1 = 'K/I\tKH;La'
        var2 = module0.search(var0, var1)
        assert var2 == 9
        var3 = -1897.946442
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -1822
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -951
        var10 = module0.search(var9, var7)
        assert var10 == 0
        var11 = 'rCD'
        var12 = module0.search(var11, var11)
        assert var12 == 3
        var13 = 'Ob4\x0c(X\x0b7hVNi3{d/'
        var14 = module0.search(var11, var13)
        assert var14 == 13
        var15 = 'T^3C?bb!hI'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = 'rCD'
        var18 = module0.search(var17, var17)
        assert var18 == 3
        var19 = 'T^3C?bb!hI'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = ''
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = 1340
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = -1692
        var27 = module0.search(var26, var3)
    except BaseException:
        pass


def test_case_695():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'G7dvKE3 9'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'R.'
        var8 = module0.search(var7, var7)
        assert var8 == 2
        var9 = 'K9\r'
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = '$OAdhWb#['
        var13 = -505.1521
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_696():
    try:
        var0 = -1897.946442
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 'R.'
        var4 = module0.search(var3, var3)
        assert var4 == 2
        var5 = -1822
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -951
        var9 = module0.search(var8, var6)
        assert var9 == 0
        var10 = 'l<,Z=SS'
        var11 = module0.search(var10, var10)
        assert var11 == 7
        var12 = 1241
        var13 = -2140
        var14 = module0.search(var12, var13)
    except BaseException:
        pass


def test_case_697():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = 't'
        var4 = '\x0c6\t0r{_UF'
        var5 = module0.search(var3, var4)
        assert var5 == 5
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = ''
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = ''
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = module0.search(var12, var12)
        assert var14 == 0
        var15 = -1822
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = ' j:xB.yP.I&j@,'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = 'JE\r\\L**#a'
        var23 = module0.search(var20, var22)
        assert var23 == 0
        var24 = -1822
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = '}b2b6Y=MM| '
        var28 = 'K/I\tKH;La'
        var29 = module0.search(var27, var28)
        assert var29 == 9
        var30 = module0.search(var27, var28)
        assert var30 == 9
        var31 = -1822
        var32 = ''
        var33 = module0.search(var31, var32)
        assert var33 == 0
        var34 = -951
        var35 = module0.search(var34, var32)
        assert var35 == 0
        var36 = 'rCD'
        var37 = module0.search(var36, var36)
        assert var37 == 3
        var38 = '[EXR'
        var39 = module0.search(var38, var38)
        assert var39 == 4
        var40 = 'l<,Z=SS'
        var41 = module0.search(var40, var40)
        assert var41 == 7
        var42 = '|u\nN2H(A\nO;Eo,4Cq['
        var43 = module0.search(var42, var40)
        assert var43 == 7
        var44 = -1822
        var45 = ''
        var46 = module0.search(var44, var45)
        assert var46 == 0
        var47 = "6C\t'NVF{70HLR"
        var48 = 'i\r'
        var49 = module0.search(var47, var48)
        assert var49 == 0
        var50 = '7ezZijeh)0e6xN'
        var51 = 'g\nk\\/E'
        var52 = module0.search(var50, var51)
        assert var52 == 0
        var53 = 1658
        var54 = None
        var55 = module0.search(var53, var54)
    except BaseException:
        pass


def test_case_698():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = "$'_V@]Ui,;A}'Be"
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'v5.q'
        var5 = '-H)>J'
        var6 = module0.search(var4, var5)
        assert var6 == 5
        var7 = '!a`*+z7n/5=*qg08'
        var8 = 'mEMQ;?+'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = ' j:xB.yP.I&j@,'
        var15 = module0.search(var14, var14)
        assert var15 == 1
        var16 = 'JE\r\\L**#a'
        var17 = module0.search(var14, var16)
        assert var17 == 0
        var18 = '>3aFds@'
        var19 = '-+v96PI_(\\ha'
        var20 = module0.search(var18, var19)
        assert var20 == 2
        var21 = None
        var22 = '\x0cRz7[ps>u'
        var23 = module0.search(var21, var22)
    except BaseException:
        pass


def test_case_699():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = ''
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 1340
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = ''
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 'T^3C?bb!hI'
        var16 = module0.search(var15, var15)
        assert var16 == 1
        var17 = ''
        var18 = module0.search(var15, var17)
        assert var18 == 0
        var19 = module0.search(var17, var17)
        assert var19 == 0
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = "6C\t'NVF{70HLR"
        var24 = 'i\r'
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = '7ezZijeh)0e6xN'
        var27 = 'g\nk\\/E'
        var28 = module0.search(var26, var27)
        assert var28 == 0
        var29 = 'rCD'
        var30 = module0.search(var29, var29)
        assert var30 == 3
        var31 = 4629.035686
        var32 = module0.search(var27, var31)
    except BaseException:
        pass


def test_case_700():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "$'_V@]Ui,;A}'Be"
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = ''
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = module0.search(var6, var6)
        assert var8 == 0
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = 'pW{!v,@'
        var18 = 'HWNZ%3wtY4'
        var19 = module0.search(var17, var18)
        assert var19 == 6
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -951
        var26 = module0.search(var25, var23)
        assert var26 == 0
        var27 = -1822
        var28 = ''
        var29 = module0.search(var27, var28)
        assert var29 == 0
        var30 = -951
        var31 = module0.search(var30, var28)
        assert var31 == 0
        var32 = ''
        var33 = 'v?I;sbmVfyO+,:sa`m>'
        var34 = module0.search(var32, var33)
        assert var34 == 0
        var35 = 1209.4467
        var36 = module0.search(var35, var35)
    except BaseException:
        pass


def test_case_701():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1897.946442
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = module0.search(var13, var13)
    except BaseException:
        pass


def test_case_702():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = '7ezZijeh)0e6xN'
        var7 = 'g\nk\\/E'
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = ' j:xB.yP.I&j@,'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = True
        var12 = 3249.7961
        var13 = module0.search(var11, var12)
    except BaseException:
        pass


def test_case_703():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '}b2b6Y=MM| '
        var3 = 'K/I\tKH;La'
        var4 = module0.search(var2, var3)
        assert var4 == 9
        var5 = -1897.946442
        var6 = ''
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'T^3C?bb!hI'
        var11 = module0.search(var10, var10)
        assert var11 == 1
        var12 = ''
        var13 = module0.search(var10, var12)
        assert var13 == 0
        var14 = 1340
        var15 = ''
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = '!a`*+z7n/5=*qg08'
        var18 = 'mEMQ;?+'
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'T^3C?bb!hI'
        var30 = module0.search(var29, var29)
        assert var30 == 1
        var31 = ''
        var32 = module0.search(var29, var31)
        assert var32 == 0
        var33 = module0.search(var31, var31)
        assert var33 == 0
        var34 = 'T^3C?bb!hI'
        var35 = module0.search(var34, var34)
        assert var35 == 1
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = "6C\t'NVF{70HLR"
        var40 = 'i\r'
        var41 = module0.search(var39, var40)
        assert var41 == 0
        var42 = '7ezZijeh)0e6xN'
        var43 = 'g\nk\\/E'
        var44 = module0.search(var42, var43)
        assert var44 == 0
        var45 = module0.search(var14, var36)
    except BaseException:
        pass


def test_case_704():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = module0.search(var2, var2)
        assert var4 == 0
        var5 = 'R.'
        var6 = module0.search(var5, var5)
        assert var6 == 2
        var7 = ' j:xB.yP.I&j@,'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = 'JE\r\\L**#a'
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = '>3aFds@'
        var12 = '-+v96PI_(\\ha'
        var13 = module0.search(var11, var12)
        assert var13 == 2
        var14 = '!a`*+z7n/5=*qg08'
        var15 = 'mEMQ;?+'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 2123
        var18 = True
        var19 = module0.search(var17, var18)
    except BaseException:
        pass


def test_case_705():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = ''
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = module0.search(var4, var4)
        assert var6 == 0
        var7 = -1822
        var8 = ''
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = "6C\t'NVF{70HLR"
        var11 = 'i\r'
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = '7ezZijeh)0e6xN'
        var14 = 'g\nk\\/E'
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 'R.'
        var17 = module0.search(var16, var16)
        assert var17 == 2
        var18 = 'K9\r'
        var19 = ''
        var20 = module0.search(var18, var19)
        assert var20 == 0
        var21 = " rYJj^'FbqO_b)n3vr"
        var22 = '2m5z\n\rT_( tY9+1AP'
        var23 = module0.search(var21, var22)
        assert var23 == 0
        var24 = 379.578
        var25 = False
        var26 = module0.search(var24, var25)
    except BaseException:
        pass


def test_case_706():
    try:
        var0 = -253.4446
        var1 = -333
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_707():
    try:
        var0 = "b?=\r*P?T(2'9z"
        var1 = '].ReP/'
        var2 = module0.search(var0, var1)
        assert var2 == 3
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = -951
        var7 = module0.search(var6, var4)
        assert var7 == 0
        var8 = 'rCD'
        var9 = module0.search(var8, var8)
        assert var9 == 3
        var10 = 'Ob4\x0c(X\x0b7hVNi3{d/'
        var11 = module0.search(var8, var10)
        assert var11 == 13
        var12 = 'T^3C?bb!hI'
        var13 = module0.search(var12, var12)
        assert var13 == 1
        var14 = ''
        var15 = module0.search(var12, var14)
        assert var15 == 0
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 't'
        var20 = '\x0c6\t0r{_UF'
        var21 = module0.search(var19, var20)
        assert var21 == 5
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'vJ-~<sl+Y^'
        var26 = False
        var27 = module0.search(var25, var26)
    except BaseException:
        pass


def test_case_708():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = 'R.'
        var12 = module0.search(var11, var11)
        assert var12 == 2
        var13 = ' j:xB.yP.I&j@,'
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = 'JE\r\\L**#a'
        var16 = module0.search(var13, var15)
        assert var16 == 0
        var17 = '>3aFds@'
        var18 = '-+v96PI_(\\ha'
        var19 = module0.search(var17, var18)
        assert var19 == 2
        var20 = 'T^3C?bb!hI'
        var21 = module0.search(var20, var20)
        assert var21 == 1
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = '}b2b6Y=MM| '
        var26 = 'K/I\tKH;La'
        var27 = module0.search(var25, var26)
        assert var27 == 9
        var28 = module0.search(var25, var26)
        assert var28 == 9
        var29 = 'R.'
        var30 = module0.search(var29, var29)
        assert var30 == 2
        var31 = '-=rDJ}QB%~hIA'
        var32 = module0.search(var29, var31)
        assert var32 == 2
        var33 = 'G7dvKE3 9'
        var34 = ''
        var35 = module0.search(var33, var34)
        assert var35 == 0
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = ' j:xB.yP.I&j@,'
        var40 = module0.search(var39, var39)
        assert var40 == 1
        var41 = True
        var42 = 3987
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_709():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 1143
        var5 = module0.search(var0, var4)
    except BaseException:
        pass


def test_case_710():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = '-=rDJ}QB%~hIA'
        var3 = module0.search(var0, var2)
        assert var3 == 2
        var4 = 'G7dvKE3 9'
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'T^3C?bb!hI'
        var8 = module0.search(var7, var7)
        assert var8 == 1
        var9 = ''
        var10 = module0.search(var7, var9)
        assert var10 == 0
        var11 = module0.search(var9, var9)
        assert var11 == 0
        var12 = 'rCD'
        var13 = module0.search(var12, var12)
        assert var13 == 3
        var14 = '[EXR'
        var15 = module0.search(var14, var14)
        assert var15 == 4
        var16 = 'l<,Z=SS'
        var17 = module0.search(var16, var16)
        assert var17 == 7
        var18 = '|u\nN2H(A\nO;Eo,4Cq['
        var19 = module0.search(var18, var16)
        assert var19 == 7
        var20 = '[EXR'
        var21 = module0.search(var20, var20)
        assert var21 == 4
        var22 = 'R.'
        var23 = module0.search(var22, var22)
        assert var23 == 2
        var24 = 'K9\r'
        var25 = ''
        var26 = module0.search(var24, var25)
        assert var26 == 0
        var27 = 19
        var28 = 3314
        var29 = module0.search(var27, var28)
    except BaseException:
        pass


def test_case_711():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = 'T^3C?bb!hI'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = ''
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 1340
        var7 = ''
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = -951
        var13 = module0.search(var12, var10)
        assert var13 == 0
        var14 = ''
        var15 = 'v?I;sbmVfyO+,:sa`m>'
        var16 = module0.search(var14, var15)
        assert var16 == 0
        var17 = 'R.'
        var18 = module0.search(var17, var17)
        assert var18 == 2
        var19 = ' j:xB.yP.I&j@,'
        var20 = module0.search(var19, var19)
        assert var20 == 1
        var21 = 'JE\r\\L**#a'
        var22 = module0.search(var19, var21)
        assert var22 == 0
        var23 = '>3aFds@'
        var24 = '-+v96PI_(\\ha'
        var25 = module0.search(var23, var24)
        assert var25 == 2
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = '-=rDJ}QB%~hIA'
        var29 = module0.search(var26, var28)
        assert var29 == 2
        var30 = 'G7dvKE3 9'
        var31 = ''
        var32 = module0.search(var30, var31)
        assert var32 == 0
        var33 = 'T^3C?bb!hI'
        var34 = module0.search(var33, var33)
        assert var34 == 1
        var35 = -1897.946442
        var36 = ''
        var37 = module0.search(var35, var36)
        assert var37 == 0
        var38 = -1822
        var39 = ''
        var40 = module0.search(var38, var39)
        assert var40 == 0
        var41 = 't'
        var42 = '\x0c6\t0r{_UF'
        var43 = module0.search(var41, var42)
        assert var43 == 5
        var44 = " rYJj^'FbqO_b)n3vr"
        var45 = '2m5z\n\rT_( tY9+1AP'
        var46 = module0.search(var44, var45)
        assert var46 == 0
        var47 = '[EXR'
        var48 = module0.search(var47, var47)
        assert var48 == 4
        var49 = ' j:xB.yP.I&j@,'
        var50 = module0.search(var49, var49)
        assert var50 == 1
        var51 = 'l<,Z=SS'
        var52 = module0.search(var51, var51)
        assert var52 == 7
        var53 = 'D]\x0bz,_GASb0:eB3'
        var54 = '$?'
        var55 = module0.search(var53, var54)
        assert var55 == 2
        var56 = 'R.'
        var57 = module0.search(var56, var56)
        assert var57 == 2
        var58 = 'K9\r'
        var59 = ''
        var60 = module0.search(var58, var59)
        assert var60 == 0
        var61 = 'I/It:a!y\nxvy'
        var62 = module0.search(var61, var35)
    except BaseException:
        pass


def test_case_712():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = '7ezZijeh)0e6xN'
        var7 = 'g\nk\\/E'
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = -1822
        var10 = ''
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 't'
        var13 = '\x0c6\t0r{_UF'
        var14 = module0.search(var12, var13)
        assert var14 == 5
        var15 = 'v5.q'
        var16 = '-H)>J'
        var17 = module0.search(var15, var16)
        assert var17 == 5
        var18 = 'T^3C?bb!hI'
        var19 = module0.search(var18, var18)
        assert var19 == 1
        var20 = ''
        var21 = module0.search(var18, var20)
        assert var21 == 0
        var22 = False
        var23 = module0.search(var22, var9)
    except BaseException:
        pass


def test_case_713():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = '!a`*+z7n/5=*qg08'
        var5 = 'mEMQ;?+'
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = '[EXR'
        var10 = module0.search(var9, var9)
        assert var10 == 4
        var11 = 'l<,Z=SS'
        var12 = module0.search(var11, var11)
        assert var12 == 7
        var13 = '|u\nN2H(A\nO;Eo,4Cq['
        var14 = module0.search(var13, var11)
        assert var14 == 7
        var15 = "b?=\r*P?T(2'9z"
        var16 = '].ReP/'
        var17 = module0.search(var15, var16)
        assert var17 == 3
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = 'K9\r'
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = -1822
        var24 = ''
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = '}b2b6Y=MM| '
        var27 = 'K/I\tKH;La'
        var28 = module0.search(var26, var27)
        assert var28 == 9
        var29 = module0.search(var26, var27)
        assert var29 == 9
        var30 = "6iP9]-^('eo"
        var31 = module0.search(var30, var23)
    except BaseException:
        pass


def test_case_714():
    try:
        var0 = ' j:xB.yP.I&j@,'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = "$'_V@]Ui,;A}'Be"
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'T^3C?bb!hI'
        var5 = module0.search(var4, var4)
        assert var5 == 1
        var6 = ''
        var7 = module0.search(var4, var6)
        assert var7 == 0
        var8 = module0.search(var6, var6)
        assert var8 == 0
        var9 = '}b2b6Y=MM| '
        var10 = 'K/I\tKH;La'
        var11 = module0.search(var9, var10)
        assert var11 == 9
        var12 = -1410.99541
        var13 = module0.search(var12, var0)
    except BaseException:
        pass


def test_case_715():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = 'D]\x0bz,_GASb0:eB3'
        var7 = '$?'
        var8 = module0.search(var6, var7)
        assert var8 == 2
        var9 = -2191
        var10 = -2688
        var11 = module0.search(var9, var10)
    except BaseException:
        pass


def test_case_716():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = 'R.'
        var5 = module0.search(var4, var4)
        assert var5 == 2
        var6 = ' j:xB.yP.I&j@,'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = 'JE\r\\L**#a'
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 'R.'
        var11 = module0.search(var10, var10)
        assert var11 == 2
        var12 = 'K9\r'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -1443.0
        var16 = None
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_717():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = 'rCD'
        var6 = module0.search(var5, var5)
        assert var6 == 3
        var7 = '[EXR'
        var8 = module0.search(var7, var7)
        assert var8 == 4
        var9 = 'l<,Z=SS'
        var10 = module0.search(var9, var9)
        assert var10 == 7
        var11 = '|u\nN2H(A\nO;Eo,4Cq['
        var12 = module0.search(var11, var9)
        assert var12 == 7
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = "6C\t'NVF{70HLR"
        var17 = 'i\r'
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = 'R.'
        var20 = module0.search(var19, var19)
        assert var20 == 2
        var21 = ' j:xB.yP.I&j@,'
        var22 = module0.search(var21, var21)
        assert var22 == 1
        var23 = 'JE\r\\L**#a'
        var24 = module0.search(var21, var23)
        assert var24 == 0
        var25 = '>3aFds@'
        var26 = '-+v96PI_(\\ha'
        var27 = module0.search(var25, var26)
        assert var27 == 2
        var28 = 'R.'
        var29 = module0.search(var28, var28)
        assert var29 == 2
        var30 = 'R.'
        var31 = module0.search(var30, var30)
        assert var31 == 2
        var32 = '-=rDJ}QB%~hIA'
        var33 = module0.search(var30, var32)
        assert var33 == 2
        var34 = 'G7dvKE3 9'
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = 'R.'
        var38 = module0.search(var37, var37)
        assert var38 == 2
        var39 = '-=rDJ}QB%~hIA'
        var40 = module0.search(var37, var39)
        assert var40 == 2
        var41 = -1822
        var42 = ''
        var43 = module0.search(var41, var42)
        assert var43 == 0
        var44 = "6C\t'NVF{70HLR"
        var45 = 'i\r'
        var46 = module0.search(var44, var45)
        assert var46 == 0
        var47 = '7ezZijeh)0e6xN'
        var48 = 'g\nk\\/E'
        var49 = module0.search(var47, var48)
        assert var49 == 0
        var50 = " rYJj^'FbqO_b)n3vr"
        var51 = '2m5z\n\rT_( tY9+1AP'
        var52 = module0.search(var50, var51)
        assert var52 == 0
        var53 = 'pW{!v,@'
        var54 = 'HWNZ%3wtY4'
        var55 = module0.search(var53, var54)
        assert var55 == 6
        var56 = -1375.3
        var57 = module0.search(var56, var26)
    except BaseException:
        pass


def test_case_718():
    try:
        var0 = '[EXR'
        var1 = module0.search(var0, var0)
        assert var1 == 4
        var2 = 'rCD'
        var3 = module0.search(var2, var2)
        assert var3 == 3
        var4 = -1822
        var5 = ''
        var6 = module0.search(var4, var5)
        assert var6 == 0
        var7 = -951
        var8 = module0.search(var7, var5)
        assert var8 == 0
        var9 = ''
        var10 = 'v?I;sbmVfyO+,:sa`m>'
        var11 = module0.search(var9, var10)
        assert var11 == 0
        var12 = 'R.'
        var13 = module0.search(var12, var12)
        assert var13 == 2
        var14 = '-=rDJ}QB%~hIA'
        var15 = module0.search(var12, var14)
        assert var15 == 2
        var16 = 'G7dvKE3 9'
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = -1822
        var20 = ''
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = 'T^3C?bb!hI'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = ''
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = True
        var27 = None
        var28 = module0.search(var26, var27)
    except BaseException:
        pass


def test_case_719():
    try:
        var0 = "$'_V@]Ui,;A}'Be"
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = -1822
        var3 = ''
        var4 = module0.search(var2, var3)
        assert var4 == 0
        var5 = "6C\t'NVF{70HLR"
        var6 = 'i\r'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = '-=rDJ}QB%~hIA'
        var11 = module0.search(var8, var10)
        assert var11 == 2
        var12 = 'G7dvKE3 9'
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = '[EXR'
        var16 = module0.search(var15, var15)
        assert var16 == 4
        var17 = "b?=\r*P?T(2'9z"
        var18 = '].ReP/'
        var19 = module0.search(var17, var18)
        assert var19 == 3
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = -1822
        var23 = ''
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = 'T^3C?bb!hI'
        var26 = module0.search(var25, var25)
        assert var26 == 1
        var27 = ''
        var28 = module0.search(var25, var27)
        assert var28 == 0
        var29 = '}b2b6Y=MM| '
        var30 = 'K/I\tKH;La'
        var31 = module0.search(var29, var30)
        assert var31 == 9
        var32 = -70
        var33 = module0.search(var2, var32)
    except BaseException:
        pass


def test_case_720():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "6C\t'NVF{70HLR"
        var4 = 'i\r'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = '7ezZijeh)0e6xN'
        var7 = 'g\nk\\/E'
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = 'rCD'
        var10 = module0.search(var9, var9)
        assert var10 == 3
        var11 = 'T^3C?bb!hI'
        var12 = module0.search(var11, var11)
        assert var12 == 1
        var13 = ''
        var14 = module0.search(var11, var13)
        assert var14 == 0
        var15 = 1340
        var16 = ''
        var17 = module0.search(var15, var16)
        assert var17 == 0
        var18 = 'R.'
        var19 = module0.search(var18, var18)
        assert var19 == 2
        var20 = -1822
        var21 = ''
        var22 = module0.search(var20, var21)
        assert var22 == 0
        var23 = "6C\t'NVF{70HLR"
        var24 = 'i\r'
        var25 = module0.search(var23, var24)
        assert var25 == 0
        var26 = 'R.'
        var27 = module0.search(var26, var26)
        assert var27 == 2
        var28 = 'K9\r'
        var29 = ''
        var30 = module0.search(var28, var29)
        assert var30 == 0
        var31 = 'rCD'
        var32 = module0.search(var31, var31)
        assert var32 == 3
        var33 = 'v5.q'
        var34 = '-H)>J'
        var35 = module0.search(var33, var34)
        assert var35 == 5
        var36 = -1822
        var37 = ''
        var38 = module0.search(var36, var37)
        assert var38 == 0
        var39 = 'T^3C?bb!hI'
        var40 = module0.search(var39, var39)
        assert var40 == 1
        var41 = ''
        var42 = module0.search(var39, var41)
        assert var42 == 0
        var43 = -1970.027373
        var44 = 3566.271
        var45 = module0.search(var43, var44)
    except BaseException:
        pass


def test_case_721():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = ''
        var3 = module0.search(var0, var2)
        assert var3 == 0
        var4 = 'rCD'
        var5 = module0.search(var4, var4)
        assert var5 == 3
        var6 = 'T^3C?bb!hI'
        var7 = module0.search(var6, var6)
        assert var7 == 1
        var8 = ''
        var9 = module0.search(var6, var8)
        assert var9 == 0
        var10 = 1340
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 't'
        var17 = '\x0c6\t0r{_UF'
        var18 = module0.search(var16, var17)
        assert var18 == 5
        var19 = -203.0
        var20 = None
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_722():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '}b2b6Y=MM| '
        var4 = 'K/I\tKH;La'
        var5 = module0.search(var3, var4)
        assert var5 == 9
        var6 = module0.search(var3, var4)
        assert var6 == 9
        var7 = 'rCD'
        var8 = module0.search(var7, var7)
        assert var8 == 3
        var9 = 'T^3C?bb!hI'
        var10 = module0.search(var9, var9)
        assert var10 == 1
        var11 = ''
        var12 = module0.search(var9, var11)
        assert var12 == 0
        var13 = 1340
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = -1822
        var17 = ''
        var18 = module0.search(var16, var17)
        assert var18 == 0
        var19 = "6C\t'NVF{70HLR"
        var20 = 'i\r'
        var21 = module0.search(var19, var20)
        assert var21 == 0
        var22 = '7ezZijeh)0e6xN'
        var23 = 'g\nk\\/E'
        var24 = module0.search(var22, var23)
        assert var24 == 0
        var25 = -1822
        var26 = ''
        var27 = module0.search(var25, var26)
        assert var27 == 0
        var28 = -951
        var29 = module0.search(var28, var26)
        assert var29 == 0
        var30 = 'rCD'
        var31 = module0.search(var30, var30)
        assert var31 == 3
        var32 = 'Ob4\x0c(X\x0b7hVNi3{d/'
        var33 = module0.search(var30, var32)
        assert var33 == 13
        var34 = -1822
        var35 = ''
        var36 = module0.search(var34, var35)
        assert var36 == 0
        var37 = 'R.'
        var38 = module0.search(var37, var37)
        assert var38 == 2
        var39 = '-=rDJ}QB%~hIA'
        var40 = module0.search(var37, var39)
        assert var40 == 2
        var41 = False
        var42 = 'en#v-]iv-5^;j\nS68%h]'
        var43 = module0.search(var41, var42)
    except BaseException:
        pass


def test_case_723():
    try:
        var0 = -1822
        var1 = ''
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -951
        var4 = module0.search(var3, var1)
        assert var4 == 0
        var5 = ''
        var6 = 'v?I;sbmVfyO+,:sa`m>'
        var7 = module0.search(var5, var6)
        assert var7 == 0
        var8 = -29.0
        var9 = None
        var10 = module0.search(var8, var9)
    except BaseException:
        pass


def test_case_724():
    try:
        var0 = 'rCD'
        var1 = module0.search(var0, var0)
        assert var1 == 3
        var2 = '[EXR'
        var3 = module0.search(var2, var2)
        assert var3 == 4
        var4 = 'l<,Z=SS'
        var5 = module0.search(var4, var4)
        assert var5 == 7
        var6 = '|u\nN2H(A\nO;Eo,4Cq['
        var7 = module0.search(var6, var4)
        assert var7 == 7
        var8 = 'R.'
        var9 = module0.search(var8, var8)
        assert var9 == 2
        var10 = 'K9\r'
        var11 = ''
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = "$'_V@]Ui,;A}'Be"
        var14 = module0.search(var13, var13)
        assert var14 == 1
        var15 = -224
        var16 = -1861.2954
        var17 = module0.search(var15, var16)
    except BaseException:
        pass


def test_case_725():
    try:
        var0 = " rYJj^'FbqO_b)n3vr"
        var1 = '2m5z\n\rT_( tY9+1AP'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -1822
        var4 = ''
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = '}b2b6Y=MM| '
        var7 = 'K/I\tKH;La'
        var8 = module0.search(var6, var7)
        assert var8 == 9
        var9 = module0.search(var6, var7)
        assert var9 == 9
        var10 = "b?=\r*P?T(2'9z"
        var11 = '].ReP/'
        var12 = module0.search(var10, var11)
        assert var12 == 3
        var13 = -1822
        var14 = ''
        var15 = module0.search(var13, var14)
        assert var15 == 0
        var16 = 't'
        var17 = '\x0c6\t0r{_UF'
        var18 = module0.search(var16, var17)
        assert var18 == 5
        var19 = '1`oh/9{Vil=Zg|wcF$'
        var20 = None
        var21 = module0.search(var19, var20)
    except BaseException:
        pass


def test_case_726():
    try:
        var0 = 'l#j"E;enhWvW\x0bcE.\rC'
        var1 = 1610.66134
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_727():
    try:
        var0 = 'R.'
        var1 = module0.search(var0, var0)
        assert var1 == 2
        var2 = ' j:xB.yP.I&j@,'
        var3 = module0.search(var2, var2)
        assert var3 == 1
        var4 = 'JE\r\\L**#a'
        var5 = module0.search(var2, var4)
        assert var5 == 0
        var6 = 'rCD'
        var7 = module0.search(var6, var6)
        assert var7 == 3
        var8 = -1822
        var9 = ''
        var10 = module0.search(var8, var9)
        assert var10 == 0
        var11 = 't'
        var12 = '\x0c6\t0r{_UF'
        var13 = module0.search(var11, var12)
        assert var13 == 5
        var14 = "\\Gm+n2aWCZ!'8cc [ZJ\x0b"
        var15 = -1626
        var16 = module0.search(var14, var15)
    except BaseException:
        pass


def test_case_728():
    try:
        var0 = 'T^3C?bb!hI'
        var1 = module0.search(var0, var0)
        assert var1 == 1
        var2 = 'R.'
        var3 = module0.search(var2, var2)
        assert var3 == 2
        var4 = '-=rDJ}QB%~hIA'
        var5 = module0.search(var2, var4)
        assert var5 == 2
        var6 = 'R.'
        var7 = module0.search(var6, var6)
        assert var7 == 2
        var8 = ' j:xB.yP.I&j@,'
        var9 = module0.search(var8, var8)
        assert var9 == 1
        var10 = 'JE\r\\L**#a'
        var11 = module0.search(var8, var10)
        assert var11 == 0
        var12 = -1822
        var13 = ''
        var14 = module0.search(var12, var13)
        assert var14 == 0
        var15 = -951
        var16 = module0.search(var15, var13)
        assert var16 == 0
        var17 = ''
        var18 = 'v?I;sbmVfyO+,:sa`m>'
        var19 = module0.search(var17, var18)
        assert var19 == 0
        var20 = 'R.'
        var21 = module0.search(var20, var20)
        assert var21 == 2
        var22 = ' j:xB.yP.I&j@,'
        var23 = module0.search(var22, var22)
        assert var23 == 1
        var24 = 'JE\r\\L**#a'
        var25 = module0.search(var22, var24)
        assert var25 == 0
        var26 = '>3aFds@'
        var27 = '-+v96PI_(\\ha'
        var28 = module0.search(var26, var27)
        assert var28 == 2
        var29 = 'rCD'
        var30 = module0.search(var29, var29)
        assert var30 == 3
        var31 = 'R.'
        var32 = module0.search(var31, var31)
        assert var32 == 2
        var33 = '-=rDJ}QB%~hIA'
        var34 = module0.search(var31, var33)
        assert var34 == 2
        var35 = 'G7dvKE3 9'
        var36 = ''
        var37 = module0.search(var35, var36)
        assert var37 == 0
        var38 = 1085.5
        var39 = module0.search(var38, var15)
    except BaseException:
        pass


def test_case_729():
    try:
        var0 = -657
        var1 = 2098.966
        var2 = module0.search(var0, var1)
    except BaseException:
        pass
