# Automatically generated by Pynguin.
import caso_covertura_005 as module0


def test_case_0():
    try:
        var0 = -2078
        var1 = 941.67377
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = True
        var1 = 680.2899
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = None
        var4 = 2633.753
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = 2872.896
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = False
        var4 = ',AuT'
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -1663
        var4 = module0.search(var3, var3)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = 'NO68>05k^f+QRW'
        var1 = 2390
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = -2290
        var4 = False
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = ']7Y\\`Q5'
        var1 = 362.195008
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = -1383
        var1 = True
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = -1518.55452
        var1 = 'zE2!\t};l}'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "v'o c\x0cPO)=9V\tea"
        var4 = '\n[|,B;j+7r2KV"v/5E7g'
        var5 = module0.search(var3, var4)
        assert var5 == 20
        var6 = -4133.082
        var7 = module0.search(var6, var6)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "v'o c\x0cPO)=9V\tea"
        var4 = '\n[|,B;j+7r2KV"v/5E7g'
        var5 = module0.search(var3, var4)
        assert var5 == 20
        var6 = -2512
        var7 = True
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = False
        var1 = None
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = True
        var4 = module0.search(var0, var3)
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = "v'o c\x0cPO)=9V\tea"
        var4 = '\n[|,B;j+7r2KV"v/5E7g'
        var5 = module0.search(var3, var4)
        assert var5 == 20
        var6 = None
        var7 = 'IFfJBz'
        var8 = module0.search(var6, var7)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = "v'o c\x0cPO)=9V\tea"
        var1 = '\n[|,B;j+7r2KV"v/5E7g'
        var2 = module0.search(var0, var1)
        assert var2 == 20
        var3 = "v'o c\x0cPO)=9V\tea"
        var4 = '\n[|,B;j+7r2KV"v/5E7g'
        var5 = module0.search(var3, var4)
        assert var5 == 20
        var6 = '#o>(P)\t *sWKoEn(}x'
        var7 = 'nI1-'
        var8 = module0.search(var6, var7)
        assert var8 == 0
        var9 = module0.search(var7, var7)
        assert var9 == 4
        var10 = '#o>(P)\t *sWKoEn(}x'
        var11 = 'nI1-'
        var12 = module0.search(var10, var11)
        assert var12 == 0
        var13 = None
        var14 = 2132.6
        var15 = module0.search(var13, var14)
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = "v'o c\x0cPO)=9V\tea"
        var1 = '\n[|,B;j+7r2KV"v/5E7g'
        var2 = module0.search(var0, var1)
        assert var2 == 20
        var3 = '#o>(P)\t *sWKoEn(}x'
        var4 = 'nI1-'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = module0.search(var4, var4)
        assert var6 == 4
        var7 = '#o>(P)\t *sWKoEn(}x'
        var8 = 'nI1-'
        var9 = module0.search(var7, var8)
        assert var9 == 0
        var10 = "v'o c\x0cPO)=9V\tea"
        var11 = '\n[|,B;j+7r2KV"v/5E7g'
        var12 = module0.search(var10, var11)
        assert var12 == 20
        var13 = False
        var14 = module0.search(var13, var7)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = '+*3, JzA(_~\ny:&*r9'
        var4 = 1613
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = True
        var1 = '\\*YNn'
        var2 = module0.search(var0, var1)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = '#o>(P)\t *sWKoEn(}x'
        var1 = 'nI1-'
        var2 = module0.search(var0, var1)
        assert var2 == 0
        var3 = True
        var4 = 'OT"0]C\rAhJ1{&6K!thaD'
        var5 = module0.search(var3, var4)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = "v'o c\x0cPO)=9V\tea"
        var1 = '\n[|,B;j+7r2KV"v/5E7g'
        var2 = module0.search(var0, var1)
        assert var2 == 20
        var3 = '#o>(P)\t *sWKoEn(}x'
        var4 = 'nI1-'
        var5 = module0.search(var3, var4)
        assert var5 == 0
        var6 = module0.search(var4, var4)
        assert var6 == 4
        var7 = False
        var8 = "R6'v(O K}\rvk2Q`!i)."
        var9 = module0.search(var7, var8)
    except BaseException:
        pass
