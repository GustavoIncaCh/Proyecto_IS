# Automatically generated by Pynguin.
import caso_covertura_153 as module0


def test_case_0():
    try:
        var0 = False
        var1 = 'c_X7]eMI<fnof(em'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = 2997
        var1 = 'qd]K{YUGpF'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = 1023.0
        var1 = 3120
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = 'ICwpp'
        var1 = '][`T`O$ibx'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = False
        var1 = 776.61
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = 'YUQp;aE:ll'
        var1 = 1865.419
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = 306
        var1 = 78
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = None
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = 'qW\\G(\x0c~'
        var1 = -675.63656
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = 2004.235492
        var1 = False
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = -927
        var1 = True
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = 75.817615
        var1 = -3306
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = -1033.426
        var1 = -184
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = True
        var1 = 'X=yAZdfvkO'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '^mnW~'
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = 358.0
        var1 = 'HbV'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 1833.53
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = module0.contains_unique_day(var0, var3)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = True
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = 'NkZN\\1:'
        var1 = 1505
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '7\n'
        var4 = '#,\x0b'
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = module0.unique_day(var3, var3)
    except BaseException:
        pass


def test_case_22():
    try:
        var0 = -2644.84023
        var1 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_23():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 172
        var4 = True
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_24():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = True
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_25():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ')a}ulGZo8;XvnhOC:'
        var4 = -3938.2637
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_26():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = module0.unique_day(var1, var3)
    except BaseException:
        pass


def test_case_27():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Y$$b"Wm`Cl!{\'f'
        var4 = 2961
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_28():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 2155.8
        var7 = -1559
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_29():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ''
        var7 = -1677
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_30():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '1\\8wkac\r&1n.vlr'
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_31():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -929
        var7 = module0.unique_day(var3, var6)
    except BaseException:
        pass


def test_case_32():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -660
        var7 = module0.contains_unique_day(var0, var6)
    except BaseException:
        pass


def test_case_33():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'G!su[+XG;q9z~AT3@'
        var7 = 2054
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_34():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -436
        var7 = 'HQTc<C7L2#&0@9[Q'
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_35():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = 2857
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_36():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 2429.2506
        var10 = module0.contains_unique_day(var7, var9)
    except BaseException:
        pass


def test_case_37():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 3868.55
        var10 = None
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_38():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = module0.unique_month(var0, var6)
    except BaseException:
        pass


def test_case_39():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'h.lm]`%\x0cT'
        var4 = True
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_40():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_day(var3, var6)
    except BaseException:
        pass


def test_case_41():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_42():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = module0.unique_month(var0, var3)
    except BaseException:
        pass


def test_case_43():
    try:
        var0 = True
        var1 = module0.contains_unique_day(var0, var0)
    except BaseException:
        pass


def test_case_44():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = True
        var7 = 4243
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_45():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 4166.9624
        var7 = -81
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_46():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'r=%J4\rV;9+.'
        var13 = 1581.557457
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_47():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1115.3
        var7 = module0.contains_unique_day(var1, var6)
    except BaseException:
        pass


def test_case_48():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'K6\n^'
        var4 = True
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_49():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.contains_unique_day(var9, var6)
    except BaseException:
        pass


def test_case_50():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1391
        var16 = 'O<~#Jc.'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -2093.6
        var22 = None
        var23 = module0.unique_month(var21, var22)
    except BaseException:
        pass


def test_case_51():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'LFap-`\n%[FnBIlVXMz'
        var4 = module0.unique_day(var3, var1)
    except BaseException:
        pass


def test_case_52():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var1, var3)
    except BaseException:
        pass


def test_case_53():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -2841
        var19 = 1377.0
        var20 = module0.unique_month(var18, var19)
    except BaseException:
        pass


def test_case_54():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -743
        var22 = 'L7\\?+cX~\rnzt6PK'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.contains_unique_day(var0, var3)
    except BaseException:
        pass


def test_case_55():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var4, var9)
    except BaseException:
        pass


def test_case_56():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_57():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '#z\\#jU"[2:'
        var22 = -2313
        var23 = module0.contains_unique_day(var21, var22)
    except BaseException:
        pass


def test_case_58():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '0giG]\tiulko7X3?>zw\x0c)'
        var4 = 489
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_59():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var4, var15)
    except BaseException:
        pass


def test_case_60():
    try:
        var0 = 1518
        var1 = None
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_61():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1889
        var7 = True
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_62():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1617
        var4 = True
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_63():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = None
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_64():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '+%z+'
        var25 = module0.contains_unique_day(var24, var3)
    except BaseException:
        pass


def test_case_65():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = module0.unique_month(var0, var9)
    except BaseException:
        pass


def test_case_66():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.contains_unique_day(var21, var6)
    except BaseException:
        pass


def test_case_67():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 3677.0
        var16 = module0.unique_day(var9, var15)
    except BaseException:
        pass


def test_case_68():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_day(var0, var9)
    except BaseException:
        pass


def test_case_69():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '_]&x;7=kM\x0bd~ht%f_\x0b2K'
        var13 = module0.unique_day(var12, var12)
    except BaseException:
        pass


def test_case_70():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -3173.54015
        var16 = module0.unique_month(var15, var3)
    except BaseException:
        pass


def test_case_71():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'I_d'
        var10 = 1863
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_72():
    try:
        var0 = 667
        var1 = False
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_73():
    try:
        var0 = 'pJ-Vm(76\nc(\r"t'
        var1 = None
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_74():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1391
        var19 = 'O<~#Jc.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = module0.unique_day(var27, var18)
    except BaseException:
        pass


def test_case_75():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 1403.0
        var16 = module0.unique_day(var3, var15)
    except BaseException:
        pass


def test_case_76():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -626.79
        var10 = 3807.7553
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_77():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -169.329504
        var25 = ''
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1087
        var28 = -301
        var29 = module0.unique_day(var27, var28)
    except BaseException:
        pass


def test_case_78():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = module0.contains_unique_day(var6, var6)
    except BaseException:
        pass


def test_case_79():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '/w$e`wl'
        var22 = module0.unique_day(var21, var15)
    except BaseException:
        pass


def test_case_80():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1391
        var19 = 'O<~#Jc.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'F.0>Pm\x0c&F^Nq-(S'
        var25 = 943.318
        var26 = module0.contains_unique_day(var24, var25)
    except BaseException:
        pass


def test_case_81():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '?DT]]__\n)7I3xX,z'
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_82():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -169.329504
        var25 = ''
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'R/Jf'
        var28 = -332
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_83():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 442.920038
        var28 = False
        var29 = module0.unique_month(var27, var28)
    except BaseException:
        pass


def test_case_84():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = module0.contains_unique_day(var16, var18)
    except BaseException:
        pass


def test_case_85():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '2Lc6EhN<%'
        var25 = ' w'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = module0.unique_day(var1, var30)
    except BaseException:
        pass


def test_case_86():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'Xys2;)(y&w=ps([GFHm='
        var31 = 'oFU/E^'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '{ZQD~)vEJYu/'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = module0.contains_unique_day(var21, var39)
    except BaseException:
        pass


def test_case_87():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'C\n`> U'
        var22 = True
        var23 = module0.contains_unique_day(var21, var22)
    except BaseException:
        pass


def test_case_88():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -169.329504
        var25 = ''
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1391
        var28 = 'O<~#Jc.'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = -743
        var31 = 'L7\\?+cX~\rnzt6PK'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1207
        var40 = module0.unique_month(var27, var39)
    except BaseException:
        pass


def test_case_89():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.contains_unique_day(var21, var21)
    except BaseException:
        pass


def test_case_90():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ',-pI8'
        var22 = 'x75[L'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = '{ZQD~)vEJYu/'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -169.329504
        var31 = ''
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 'Xys2;)(y&w=ps([GFHm='
        var34 = 'oFU/E^'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = -1391
        var37 = 'O<~#Jc.'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 1877.0
        var40 = module0.unique_day(var0, var39)
    except BaseException:
        pass


def test_case_91():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var21, var21)
    except BaseException:
        pass


def test_case_92():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '2Lc6EhN<%'
        var22 = ' w'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = -743
        var31 = 'L7\\?+cX~\rnzt6PK'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 4566.1
        var34 = module0.contains_unique_day(var33, var24)
    except BaseException:
        pass


def test_case_93():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Vg9'
        var13 = module0.contains_unique_day(var12, var9)
    except BaseException:
        pass


def test_case_94():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '\tc2d/S'
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = ',-pI8'
        var36 = 'x75[L'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = module0.unique_day(var3, var3)
    except BaseException:
        pass


def test_case_95():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1391
        var22 = 'O<~#Jc.'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '\x0b'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = '{ZQD~)vEJYu/'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = False
        var37 = "7i#c*&b7e,'"
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '\tc2d/S'
        var40 = module0.unique_month(var37, var39)
        assert var40 is False
        var41 = "blP-\x0cYP;\r='e6}{Fh[q"
        var42 = module0.unique_day(var6, var41)
    except BaseException:
        pass


def test_case_96():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = -1391
        var9 = 'O<~#Jc.'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ',-pI8'
        var15 = 'x75[L'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '\x0b'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '2Lc6EhN<%'
        var21 = ' w'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '=RCgD\x0b"x}%nQhwJFt:"'
        var24 = None
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_97():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -2155.4
        var7 = None
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_98():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'NHm/S'
        var16 = module0.unique_day(var15, var9)
    except BaseException:
        pass


def test_case_99():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -752
        var10 = True
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_100():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -1391
        var6 = 'O<~#Jc.'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ',-pI8'
        var21 = 'x75[L'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '\x0b'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = '2Lc6EhN<%'
        var27 = ' w'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = None
        var36 = None
        var37 = module0.unique_day(var35, var36)
    except BaseException:
        pass


def test_case_101():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = module0.unique_month(var27, var6)
    except BaseException:
        pass


def test_case_102():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var0, var21)
    except BaseException:
        pass


def test_case_103():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = module0.contains_unique_day(var0, var3)
    except BaseException:
        pass


def test_case_104():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '2Lc6EhN<%'
        var22 = ' w'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = ',-pI8'
        var28 = 'x75[L'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = True
        var37 = module0.unique_month(var6, var36)
    except BaseException:
        pass


def test_case_105():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '\tc2d/S'
        var31 = module0.unique_month(var28, var30)
        assert var31 is False
        var32 = -1391
        var33 = 'O<~#Jc.'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '\x0b'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = False
        var39 = '{ZQD~)vEJYu/'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -743
        var42 = 'L7\\?+cX~\rnzt6PK'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = -513.0
        var45 = 1818.42458
        var46 = module0.unique_day(var44, var45)
    except BaseException:
        pass


def test_case_106():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = False
        var6 = "7i#c*&b7e,'"
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -1391
        var12 = 'O<~#Jc.'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ',-pI8'
        var15 = 'x75[L'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -2278
        var21 = module0.contains_unique_day(var17, var20)
    except BaseException:
        pass


def test_case_107():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -169.329504
        var30 = ''
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ',-pI8'
        var36 = 'x75[L'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = -1391
        var39 = 'O<~#Jc.'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = None
        var42 = module0.unique_day(var29, var41)
    except BaseException:
        pass


def test_case_108():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'dp-^1'
        var10 = 274
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_109():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -5379
        var13 = module0.unique_day(var9, var12)
    except BaseException:
        pass


def test_case_110():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 'Xys2;)(y&w=ps([GFHm='
        var6 = 'oFU/E^'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ',-pI8'
        var18 = 'x75[L'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '2Lc6EhN<%'
        var24 = ' w'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = ',-pI8'
        var27 = 'x75[L'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -1391
        var39 = 'O<~#Jc.'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '%>=b</wa!2'
        var42 = module0.unique_day(var32, var41)
    except BaseException:
        pass


def test_case_111():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -743
        var22 = 'L7\\?+cX~\rnzt6PK'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'u#~l9p~Co<8o\n/X,Vo\x0b'
        var25 = True
        var26 = module0.unique_day(var24, var25)
    except BaseException:
        pass


def test_case_112():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = True
        var18 = module0.contains_unique_day(var17, var0)
    except BaseException:
        pass


def test_case_113():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '1'
        var10 = "8DiYVtz'"
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_114():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = '2R#,TsDX(0t|A|+?$U'
        var6 = module0.unique_day(var0, var5)
    except BaseException:
        pass


def test_case_115():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -743
        var22 = 'L7\\?+cX~\rnzt6PK'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = '{ZQD~)vEJYu/'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -169.329504
        var31 = ''
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '\tc2d/S'
        var37 = module0.unique_month(var34, var36)
        assert var37 is False
        var38 = '3Nkuq~r^,S7 n\\M<QN'
        var39 = module0.unique_day(var38, var10)
    except BaseException:
        pass


def test_case_116():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'g'
        var28 = 1917.7
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_117():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '{ZQD~)vEJYu/'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -169.329504
        var18 = ''
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'Xys2;)(y&w=ps([GFHm='
        var21 = 'oFU/E^'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'J='
        var24 = 1074
        var25 = module0.contains_unique_day(var23, var24)
    except BaseException:
        pass


def test_case_118():
    try:
        var0 = -153
        var1 = 2524.301
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_119():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ',-pI8'
        var18 = 'x75[L'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = -1391
        var27 = 'O<~#Jc.'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -169.329504
        var39 = ''
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '\\r!Evp\n~u9\t'
        var42 = True
        var43 = module0.unique_day(var41, var42)
    except BaseException:
        pass


def test_case_120():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = True
        var21 = module0.contains_unique_day(var20, var3)
    except BaseException:
        pass


def test_case_121():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = ',-pI8'
        var18 = 'x75[L'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '2Lc6EhN<%'
        var24 = ' w'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.contains_unique_day(var14, var8)
    except BaseException:
        pass


def test_case_122():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = ',-pI8'
        var15 = 'x75[L'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = ',-pI8'
        var18 = 'x75[L'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '2Lc6EhN<%'
        var24 = ' w'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -169.329504
        var39 = ''
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = -743
        var42 = 'L7\\?+cX~\rnzt6PK'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = 'l,U`;z>b\nK'
        var45 = None
        var46 = module0.unique_day(var44, var45)
    except BaseException:
        pass


def test_case_123():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -169.329504
        var28 = ''
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ',-pI8'
        var31 = 'x75[L'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '\tc2d/S'
        var37 = module0.unique_month(var34, var36)
        assert var37 is False
        var38 = -1391
        var39 = 'O<~#Jc.'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = "7i#c*&b7e,'"
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = -1993.119
        var45 = False
        var46 = module0.unique_day(var44, var45)
    except BaseException:
        pass


def test_case_124():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -1902
        var25 = '0#dYU>S-d'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_day(var10, var24)
    except BaseException:
        pass


def test_case_125():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 8
        var9 = ')}\n{W]GKE1TU46tYB'
        var10 = module0.unique_day(var8, var9)
    except BaseException:
        pass


def test_case_126():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'k>+G6n'
        var22 = 1395.0
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_127():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '3nM`Q\tv=\\K'
        var10 = module0.unique_day(var9, var4)
    except BaseException:
        pass


def test_case_128():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -169.329504
        var21 = ''
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ',-pI8'
        var27 = 'x75[L'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = '2Lc6EhN<%'
        var33 = ' w'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = "7i#c*&b7e,'"
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '\tc2d/S'
        var39 = module0.unique_month(var36, var38)
        assert var39 is False
        var40 = -743
        var41 = 'L7\\?+cX~\rnzt6PK'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = module0.contains_unique_day(var40, var38)
        assert var43 is False
        var44 = 3212
        var45 = module0.unique_month(var9, var44)
    except BaseException:
        pass


def test_case_129():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -1902
        var25 = '0#dYU>S-d'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = ',-pI8'
        var28 = 'x75[L'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '\x0b'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = '2Lc6EhN<%'
        var34 = ' w'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = '{ZQD~)vEJYu/'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -169.329504
        var43 = ''
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = -4727.3639
        var46 = module0.unique_day(var42, var45)
    except BaseException:
        pass


def test_case_130():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = ',-pI8'
        var21 = 'x75[L'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = -743
        var32 = 'L7\\?+cX~\rnzt6PK'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var29)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -2319.317683
        var39 = module0.contains_unique_day(var26, var38)
    except BaseException:
        pass


def test_case_131():
    try:
        var0 = None
        var1 = 'rjU48M\rm5<P!]!N4(qG'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_132():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = ',-pI8'
        var9 = 'x75[L'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = -1391
        var12 = 'O<~#Jc.'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = module0.contains_unique_day(var6, var3)
    except BaseException:
        pass


def test_case_133():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = "Y'K( /."
        var13 = '|+J]U+R|rXO='
        var14 = module0.unique_day(var12, var13)
    except BaseException:
        pass


def test_case_134():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = -743
        var21 = 'L7\\?+cX~\rnzt6PK'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = module0.contains_unique_day(var20, var18)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'Xys2;)(y&w=ps([GFHm='
        var28 = 'oFU/E^'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = '{ZQD~)vEJYu/'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -169.329504
        var34 = ''
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = 869.2
        var40 = False
        var41 = module0.contains_unique_day(var39, var40)
    except BaseException:
        pass


def test_case_135():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = module0.unique_day(var18, var21)
    except BaseException:
        pass


def test_case_136():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = -743
        var32 = 'L7\\?+cX~\rnzt6PK'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var29)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = 'Xys2;)(y&w=ps([GFHm='
        var39 = 'oFU/E^'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = None
        var42 = '\x0b'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = -1902
        var45 = '0#dYU>S-d'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = 'Xys2;)(y&w=ps([GFHm='
        var48 = 'oFU/E^'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = False
        var51 = '{ZQD~)vEJYu/'
        var52 = module0.unique_month(var50, var51)
        assert var52 is False
        var53 = -169.329504
        var54 = ''
        var55 = module0.contains_unique_day(var53, var54)
        assert var55 is False
        var56 = '[Qz-]~j$)z74W'
        var57 = False
        var58 = module0.contains_unique_day(var56, var57)
    except BaseException:
        pass


def test_case_137():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = True
        var16 = module0.unique_day(var15, var9)
    except BaseException:
        pass


def test_case_138():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '2Lc6EhN<%'
        var22 = ' w'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'Xys2;)(y&w=ps([GFHm='
        var28 = 'oFU/E^'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = '{ZQD~)vEJYu/'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -169.329504
        var34 = ''
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = None
        var40 = '\x0b'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -1902
        var43 = '0#dYU>S-d'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = False
        var46 = '{ZQD~)vEJYu/'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = "a(`'[$"
        var49 = module0.unique_day(var48, var24)
    except BaseException:
        pass


def test_case_139():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '\x0b'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1902
        var31 = '0#dYU>S-d'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = '{ZQD~)vEJYu/'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -169.329504
        var43 = ''
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = module0.unique_month(var13, var42)
    except BaseException:
        pass


def test_case_140():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -1902
        var24 = '0#dYU>S-d'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = ',-pI8'
        var30 = 'x75[L'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = ',-pI8'
        var33 = 'x75[L'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '\x0b'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = '2Lc6EhN<%'
        var39 = ' w'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = "7i#c*&b7e,'"
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = False
        var45 = '{ZQD~)vEJYu/'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '8u:j!{g\\2 $7'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = 'R;KN<IH\\[-$f(\\'
        var51 = True
        var52 = module0.unique_month(var50, var51)
    except BaseException:
        pass


def test_case_141():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '2B11Azdfv'
        var4 = -3707
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_142():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ',-pI8'
        var22 = 'x75[L'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'Sh6P0e!Ql!{eGQ@'
        var28 = '?r;P\\T*MZ}RM/b{S%7a'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = ',-pI8'
        var31 = 'x75[L'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = '2Lc6EhN<%'
        var37 = ' w'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = False
        var40 = "7i#c*&b7e,'"
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = False
        var43 = 'TO\x0cjj[>(LdA3^v"@'
        var44 = module0.unique_day(var42, var43)
    except BaseException:
        pass


def test_case_143():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = False
        var10 = module0.unique_month(var9, var5)
    except BaseException:
        pass


def test_case_144():
    try:
        var0 = 112.7
        var1 = '/mPT|dCdjSJt)#6'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_145():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '\x0b'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1902
        var28 = '0#dYU>S-d'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = module0.unique_month(var18, var24)
    except BaseException:
        pass


def test_case_146():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 1557.6231
        var10 = 1686
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_147():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = -743
        var27 = 'L7\\?+cX~\rnzt6PK'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = module0.contains_unique_day(var26, var24)
        assert var29 is False
        var30 = False
        var31 = '{ZQD~)vEJYu/'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = ',-pI8'
        var34 = 'x75[L'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = '2Lc6EhN<%'
        var40 = ' w'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = ',-pI8'
        var43 = 'x75[L'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = False
        var46 = "7i#c*&b7e,'"
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = 'Sh6P0e!Ql!{eGQ@'
        var49 = '?r;P\\T*MZ}RM/b{S%7a'
        var50 = module0.contains_unique_day(var48, var49)
        assert var50 is False
        var51 = -830.776809
        var52 = module0.unique_month(var51, var3)
    except BaseException:
        pass


def test_case_148():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = ',-pI8'
        var24 = 'x75[L'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '2Lc6EhN<%'
        var30 = ' w'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -169.329504
        var39 = ''
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = '{ZQD~)vEJYu/'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = "7i#c*&b7e,'"
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 'Sh6P0e!Ql!{eGQ@'
        var48 = '?r;P\\T*MZ}RM/b{S%7a'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = False
        var51 = 1167.781499
        var52 = module0.unique_month(var50, var51)
    except BaseException:
        pass


def test_case_149():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'Sh6P0e!Ql!{eGQ@'
        var21 = '?r;P\\T*MZ}RM/b{S%7a'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 490.0
        var24 = module0.unique_day(var23, var23)
    except BaseException:
        pass


def test_case_150():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'ZmL+at[ow02tN|ok$]1Y'
        var4 = 478.08166
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_151():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1246.58538
        var13 = module0.unique_month(var12, var3)
    except BaseException:
        pass


def test_case_152():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 2070.3698
        var26 = module0.contains_unique_day(var24, var25)
    except BaseException:
        pass


def test_case_153():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = False
        var15 = '{ZQD~)vEJYu/'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'Sh6P0e!Ql!{eGQ@'
        var21 = '?r;P\\T*MZ}RM/b{S%7a'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ',-pI8'
        var24 = 'x75[L'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '2Lc6EhN<%'
        var30 = ' w'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = None
        var36 = module0.unique_month(var35, var0)
    except BaseException:
        pass


def test_case_154():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = -743
        var18 = 'L7\\?+cX~\rnzt6PK'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.contains_unique_day(var17, var15)
        assert var20 is False
        var21 = -1391
        var22 = 'O<~#Jc.'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '\x0b'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1902
        var31 = '0#dYU>S-d'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = ',-pI8'
        var34 = 'x75[L'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = "7i#c*&b7e,'"
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = '\tc2d/S'
        var43 = module0.unique_month(var40, var42)
        assert var43 is False
        var44 = None
        var45 = '8u:j!{g\\2 $7'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = False
        var48 = "7i#c*&b7e,'"
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = 'iX\tZ\tH5K'
        var51 = module0.unique_day(var50, var6)
    except BaseException:
        pass


def test_case_155():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = ',f")W'
        var6 = module0.unique_day(var0, var5)
    except BaseException:
        pass


def test_case_156():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = -1554.396007
        var10 = -3743
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_157():
    try:
        var0 = '%R'
        var1 = None
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_158():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = -743
        var18 = 'L7\\?+cX~\rnzt6PK'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.contains_unique_day(var17, var15)
        assert var20 is False
        var21 = 1659.5026
        var22 = 2051
        var23 = module0.unique_month(var21, var22)
    except BaseException:
        pass


def test_case_159():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1391
        var16 = 'O<~#Jc.'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -169.329504
        var25 = ''
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'Xys2;)(y&w=ps([GFHm='
        var28 = 'oFU/E^'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '\x0b'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -1902
        var34 = '0#dYU>S-d'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = "7i#c*&b7e,'"
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = 2513
        var44 = module0.unique_month(var42, var43)
    except BaseException:
        pass


def test_case_160():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = -743
        var21 = 'L7\\?+cX~\rnzt6PK'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -169.329504
        var30 = ''
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '\tc2d/S'
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = -743
        var38 = 'L7\\?+cX~\rnzt6PK'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = module0.contains_unique_day(var37, var35)
        assert var40 is False
        var41 = -1391
        var42 = 'O<~#Jc.'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = False
        var45 = "7i#c*&b7e,'"
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 'Sh6P0e!Ql!{eGQ@'
        var48 = '?r;P\\T*MZ}RM/b{S%7a'
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = False
        var51 = None
        var52 = module0.unique_day(var50, var51)
    except BaseException:
        pass


def test_case_161():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = -743
        var24 = 'L7\\?+cX~\rnzt6PK'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = module0.contains_unique_day(var23, var21)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1391
        var31 = 'O<~#Jc.'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '{ZQD~)vEJYu/'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '8u:j!{g\\2 $7'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = '80O-\nt'
        var40 = module0.unique_day(var3, var39)
    except BaseException:
        pass


def test_case_162():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 157.0
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_163():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = False
        var6 = "7i#c*&b7e,'"
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '\tc2d/S'
        var9 = module0.unique_month(var6, var8)
        assert var9 is False
        var10 = -743
        var11 = 'L7\\?+cX~\rnzt6PK'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = module0.contains_unique_day(var10, var8)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -169.329504
        var24 = ''
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -743
        var30 = 'L7\\?+cX~\rnzt6PK'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = module0.unique_day(var15, var26)
    except BaseException:
        pass


def test_case_164():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '\tc2d/S'
        var31 = module0.unique_month(var28, var30)
        assert var31 is False
        var32 = 1013
        var33 = -1918.0
        var34 = module0.unique_day(var32, var33)
    except BaseException:
        pass


def test_case_165():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = ',-pI8'
        var27 = 'x75[L'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = '2Lc6EhN<%'
        var33 = ' w'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = -1391
        var36 = 'O<~#Jc.'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = False
        var39 = "7i#c*&b7e,'"
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'Sh6P0e!Ql!{eGQ@'
        var42 = '?r;P\\T*MZ}RM/b{S%7a'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = module0.contains_unique_day(var12, var5)
    except BaseException:
        pass


def test_case_166():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = -743
        var21 = 'L7\\?+cX~\rnzt6PK'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = module0.contains_unique_day(var20, var18)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'Sh6P0e!Ql!{eGQ@'
        var31 = '?r;P\\T*MZ}RM/b{S%7a'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '{ZQD~)vEJYu/'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = '{ZQD~)vEJYu/'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -169.329504
        var43 = ''
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = module0.unique_day(var0, var20)
    except BaseException:
        pass


def test_case_167():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'AJtm\\C?$lu2'
        var10 = module0.contains_unique_day(var3, var9)
        assert var10 is False
        var11 = -1391
        var12 = 'O<~#Jc.'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -169.329504
        var21 = ''
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = -743
        var32 = 'L7\\?+cX~\rnzt6PK'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var29)
        assert var34 is False
        var35 = None
        var36 = '\x0b'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -1681.35
        var39 = '#CI\x0c1=_"'
        var40 = module0.unique_day(var38, var39)
    except BaseException:
        pass


def test_case_168():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = module0.contains_unique_day(var0, var11)
    except BaseException:
        pass


def test_case_169():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'AJtm\\C?$lu2'
        var19 = module0.contains_unique_day(var12, var18)
        assert var19 is False
        var20 = -1391
        var21 = 'O<~#Jc.'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = module0.unique_month(var23, var24)
        assert var29 is False
        var30 = None
        var31 = '8u:j!{g\\2 $7'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = False
        var37 = "7i#c*&b7e,'"
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '\tc2d/S'
        var40 = module0.unique_month(var37, var39)
        assert var40 is False
        var41 = 'Xys2;)(y&w=ps([GFHm='
        var42 = 'oFU/E^'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = None
        var45 = '\x0b'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = -1902
        var48 = '0#dYU>S-d'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = False
        var51 = 1227.97
        var52 = module0.unique_day(var50, var51)
    except BaseException:
        pass


def test_case_170():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '\tc2d/S'
        var24 = module0.unique_month(var21, var23)
        assert var24 is False
        var25 = -743
        var26 = 'L7\\?+cX~\rnzt6PK'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.contains_unique_day(var25, var23)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = module0.unique_month(var29, var30)
        assert var35 is False
        var36 = 1298.973
        var37 = module0.unique_month(var33, var36)
    except BaseException:
        pass


def test_case_171():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = -743
        var18 = 'L7\\?+cX~\rnzt6PK'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.contains_unique_day(var17, var15)
        assert var20 is False
        var21 = 2848.99167
        var22 = module0.unique_day(var21, var9)
    except BaseException:
        pass


def test_case_172():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var15, var16)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 'AJtm\\C?$lu2'
        var29 = module0.contains_unique_day(var22, var28)
        assert var29 is False
        var30 = 'Xys2;)(y&w=ps([GFHm='
        var31 = 'oFU/E^'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = ',-pI8'
        var34 = 'x75[L'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = '2Lc6EhN<%'
        var40 = ' w'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = -743
        var43 = 'L7\\?+cX~\rnzt6PK'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = -1391
        var46 = 'O<~#Jc.'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = 'Xys2;)(y&w=ps([GFHm='
        var49 = 'oFU/E^'
        var50 = module0.unique_month(var48, var49)
        assert var50 is False
        var51 = False
        var52 = '{ZQD~)vEJYu/'
        var53 = module0.unique_month(var51, var52)
        assert var53 is False
        var54 = -169.329504
        var55 = ''
        var56 = module0.contains_unique_day(var54, var55)
        assert var56 is False
        var57 = module0.unique_day(var37, var54)
    except BaseException:
        pass


def test_case_173():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '%/Rua)yh{D@y\n%\t#$Nc'
        var7 = 'f0-=Z{@|'
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_174():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = -743
        var15 = 'L7\\?+cX~\rnzt6PK'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = module0.contains_unique_day(var14, var12)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -169.329504
        var28 = ''
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'Xys2;)(y&w=ps([GFHm='
        var31 = 'oFU/E^'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '8u:j!{g\\2 $7'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = module0.unique_month(var30, var31)
        assert var36 is False
        var37 = -1391
        var38 = 'O<~#Jc.'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = '.U94g;'
        var41 = module0.unique_day(var3, var40)
    except BaseException:
        pass


def test_case_175():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'AJtm\\C?$lu2'
        var25 = module0.contains_unique_day(var18, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 1807.04
        var33 = module0.unique_day(var21, var32)
    except BaseException:
        pass


def test_case_176():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = "7i#c*&b7e,'"
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'AJtm\\C?$lu2'
        var15 = module0.contains_unique_day(var8, var14)
        assert var15 is False
        var16 = '`'
        var17 = 5494.7697
        var18 = module0.contains_unique_day(var16, var17)
    except BaseException:
        pass


def test_case_177():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -1902
        var30 = '0#dYU>S-d'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -743
        var33 = 'L7\\?+cX~\rnzt6PK'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'Xys2;)(y&w=ps([GFHm='
        var36 = 'oFU/E^'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = False
        var39 = '{ZQD~)vEJYu/'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -169.329504
        var42 = ''
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = None
        var45 = -2846
        var46 = module0.unique_month(var44, var45)
    except BaseException:
        pass


def test_case_178():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = True
        var22 = module0.unique_month(var21, var3)
    except BaseException:
        pass


def test_case_179():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = 'Xys2;)(y&w=ps([GFHm='
        var8 = 'oFU/E^'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = ',-pI8'
        var11 = 'x75[L'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '\x0b'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = '2Lc6EhN<%'
        var17 = ' w'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = False
        var20 = "7i#c*&b7e,'"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = '\tc2d/S'
        var23 = module0.unique_month(var20, var22)
        assert var23 is False
        var24 = -743
        var25 = 'L7\\?+cX~\rnzt6PK'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.contains_unique_day(var24, var22)
        assert var27 is False
        var28 = '@E!@Rfp'
        var29 = -3648.35691
        var30 = module0.unique_day(var28, var29)
    except BaseException:
        pass


def test_case_180():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var9, var10)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '\x0b'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -1902
        var23 = '0#dYU>S-d'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = '{ZQD~)vEJYu/'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = "7i#c*&b7e,'"
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'AJtm\\C?$lu2'
        var35 = module0.contains_unique_day(var28, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = 'Xys2;)(y&w=ps([GFHm='
        var40 = 'oFU/E^'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = ',-pI8'
        var43 = 'x75[L'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = None
        var46 = '\x0b'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = '2Lc6EhN<%'
        var49 = ' w'
        var50 = module0.contains_unique_day(var48, var49)
        assert var50 is False
        var51 = False
        var52 = "7i#c*&b7e,'"
        var53 = module0.contains_unique_day(var51, var52)
        assert var53 is False
        var54 = 'Sh6P0e!Ql!{eGQ@'
        var55 = '?r;P\\T*MZ}RM/b{S%7a'
        var56 = module0.contains_unique_day(var54, var55)
        assert var56 is False
        var57 = None
        var58 = '8u:j!{g\\2 $7'
        var59 = module0.unique_month(var57, var58)
        assert var59 is False
        var60 = "-z8l\x0cg'-"
        var61 = module0.unique_day(var60, var37)
    except BaseException:
        pass


def test_case_181():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Sh6P0e!Ql!{eGQ@'
        var13 = '?r;P\\T*MZ}RM/b{S%7a'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = -743
        var24 = 'L7\\?+cX~\rnzt6PK'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = module0.contains_unique_day(var23, var21)
        assert var26 is False
        var27 = '\nWN:F\x0cxC\x0b"ur39+ l<G'
        var28 = 283
        var29 = module0.unique_day(var27, var28)
    except BaseException:
        pass


def test_case_182():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var21, var22)
        assert var27 is False
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = "7i#c*&b7e,'"
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'AJtm\\C?$lu2'
        var35 = module0.contains_unique_day(var28, var34)
        assert var35 is False
        var36 = None
        var37 = '8u:j!{g\\2 $7'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = 'yj6j\\eZ,$0tZ~Z'
        var40 = '@B\tt=xE\n,CidtY'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = False
        var43 = "7i#c*&b7e,'"
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = 'Sh6P0e!Ql!{eGQ@'
        var46 = '?r;P\\T*MZ}RM/b{S%7a'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = 'Xys2;)(y&w=ps([GFHm='
        var49 = 'oFU/E^'
        var50 = module0.unique_month(var48, var49)
        assert var50 is False
        var51 = False
        var52 = '{ZQD~)vEJYu/'
        var53 = module0.unique_month(var51, var52)
        assert var53 is False
        var54 = -169.329504
        var55 = ''
        var56 = module0.contains_unique_day(var54, var55)
        assert var56 is False
        var57 = module0.unique_month(var28, var24)
    except BaseException:
        pass


def test_case_183():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.unique_month(var12, var12)
    except BaseException:
        pass


def test_case_184():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = None
        var8 = '8u:j!{g\\2 $7'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = 'yj6j\\eZ,$0tZ~Z'
        var11 = '@B\tt=xE\n,CidtY'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -743
        var14 = 'L7\\?+cX~\rnzt6PK'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = '{ZQD~)vEJYu/'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -169.329504
        var23 = ''
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = '2zC/$\x0cMj<Gc8C4IG\x0bWZ'
        var29 = module0.unique_day(var19, var28)
    except BaseException:
        pass


def test_case_185():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'AJtm\\C?$lu2'
        var16 = module0.contains_unique_day(var9, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '\tc2d/S'
        var21 = module0.unique_month(var18, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = False
        var29 = '{ZQD~)vEJYu/'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = -169.329504
        var32 = ''
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '8u:j!{g\\2 $7'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = 'yj6j\\eZ,$0tZ~Z'
        var38 = '@B\tt=xE\n,CidtY'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 'Xys2;)(y&w=ps([GFHm='
        var41 = 'oFU/E^'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '8u:j!{g\\2 $7'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = module0.unique_month(var40, var41)
        assert var46 is False
        var47 = 'Xys2;)(y&w=ps([GFHm='
        var48 = 'oFU/E^'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = 679
        var51 = module0.unique_month(var6, var50)
    except BaseException:
        pass


def test_case_186():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = '#\x0bqP{=mqAP\x0c>-s!'
        var8 = 'ZeqxS'
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = -1391
        var11 = 'O<~#Jc.'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = -743
        var14 = 'L7\\?+cX~\rnzt6PK'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = None
        var17 = '8u:j!{g\\2 $7'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = "7i#c*&b7e,'"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'AJtm\\C?$lu2'
        var23 = module0.contains_unique_day(var16, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1751.0
        var28 = module0.unique_day(var19, var27)
    except BaseException:
        pass


def test_case_187():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = None
        var11 = '8u:j!{g\\2 $7'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = 'yj6j\\eZ,$0tZ~Z'
        var14 = '@B\tt=xE\n,CidtY'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = False
        var17 = '{ZQD~)vEJYu/'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = True
        var23 = -2143.0
        var24 = module0.unique_day(var22, var23)
    except BaseException:
        pass


def test_case_188():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = 2342.42875
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_189():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = False
        var8 = "7i#c*&b7e,'"
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = '\tc2d/S'
        var11 = module0.unique_month(var8, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1391
        var22 = 'O<~#Jc.'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'w\\oy#:JZ37r'
        var31 = module0.unique_month(var30, var24)
    except BaseException:
        pass


def test_case_190():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 'Xys2;)(y&w=ps([GFHm='
        var6 = 'oFU/E^'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.unique_month(var5, var6)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = -478
        var21 = -2550.745631
        var22 = module0.unique_day(var20, var21)
    except BaseException:
        pass


def test_case_191():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '2Lc6EhN<%'
        var25 = ' w'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'Xys2;)(y&w=ps([GFHm='
        var28 = 'oFU/E^'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '\x0b'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'Xys2;)(y&w=ps([GFHm='
        var34 = 'oFU/E^'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1902
        var40 = '0#dYU>S-d'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = '7=d9)V`KblF<0'
        var43 = module0.contains_unique_day(var42, var36)
    except BaseException:
        pass


def test_case_192():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'U9lm-S<aj&D'
        var28 = module0.contains_unique_day(var25, var27)
        assert var28 is False
        var29 = True
        var30 = module0.unique_month(var12, var29)
    except BaseException:
        pass


def test_case_193():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '{ZQD~)vEJYu/'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -169.329504
        var18 = ''
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'yj6j\\eZ,$0tZ~Z'
        var24 = '@B\tt=xE\n,CidtY'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'AJtm\\C?$lu2'
        var33 = module0.contains_unique_day(var26, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = False
        var38 = '{ZQD~)vEJYu/'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 'Xys2;)(y&w=ps([GFHm='
        var41 = 'oFU/E^'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '\x0b'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = -1902
        var47 = '0#dYU>S-d'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = 'Xys2;)(y&w=ps([GFHm='
        var50 = 'oFU/E^'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = None
        var53 = '8u:j!{g\\2 $7'
        var54 = module0.unique_month(var52, var53)
        assert var54 is False
        var55 = module0.unique_month(var49, var50)
        assert var55 is False
        var56 = ''
        var57 = True
        var58 = module0.unique_month(var56, var57)
    except BaseException:
        pass


def test_case_194():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = module0.unique_month(var8, var9)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = -2136
        var27 = 3416.9082
        var28 = module0.unique_day(var26, var27)
    except BaseException:
        pass


def test_case_195():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'AJtm\\C?$lu2'
        var21 = module0.contains_unique_day(var14, var20)
        assert var21 is False
        var22 = -743
        var23 = 'L7\\?+cX~\rnzt6PK'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = ',-pI8'
        var26 = 'x75[L'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = "7i#c*&b7e,'"
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'Xys2;)(y&w=ps([GFHm='
        var32 = 'oFU/E^'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '8u:j!{g\\2 $7'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = module0.unique_month(var31, var32)
        assert var37 is False
        var38 = False
        var39 = "7i#c*&b7e,'"
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = '\tc2d/S'
        var42 = module0.unique_month(var39, var41)
        assert var42 is False
        var43 = -743
        var44 = 'L7\\?+cX~\rnzt6PK'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = module0.contains_unique_day(var43, var41)
        assert var46 is False
        var47 = 2584
        var48 = module0.unique_month(var47, var43)
    except BaseException:
        pass


def test_case_196():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '$BOj+'
        var7 = module0.unique_day(var0, var6)
    except BaseException:
        pass


def test_case_197():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = None
        var8 = '\x0b'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = -1391
        var11 = 'O<~#Jc.'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'yj6j\\eZ,$0tZ~Z'
        var17 = '@B\tt=xE\n,CidtY'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = 'BkRN\\\x0bCW<lC'
        var23 = module0.unique_day(var13, var22)
    except BaseException:
        pass


def test_case_198():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var9, var10)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '\x0b'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -1902
        var23 = '0#dYU>S-d'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 'yj6j\\eZ,$0tZ~Z'
        var32 = '@B\tt=xE\n,CidtY'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = False
        var38 = "7i#c*&b7e,'"
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 'Sh6P0e!Ql!{eGQ@'
        var41 = '?r;P\\T*MZ}RM/b{S%7a'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = False
        var44 = '{ZQD~)vEJYu/'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = False
        var47 = "7i#c*&b7e,'"
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = ',-pI8'
        var50 = 'x75[L'
        var51 = module0.contains_unique_day(var49, var50)
        assert var51 is False
        var52 = 690
        var53 = module0.contains_unique_day(var46, var52)
    except BaseException:
        pass


def test_case_199():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = None
        var8 = '8u:j!{g\\2 $7'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = '#\x0bqP{=mqAP\x0c>-s!'
        var11 = 'ZeqxS'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = 'vPRk0H|48bBby'
        var14 = module0.unique_day(var13, var0)
    except BaseException:
        pass


def test_case_200():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ',-pI8'
        var6 = 'x75[L'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'yj6j\\eZ,$0tZ~Z'
        var12 = '@B\tt=xE\n,CidtY'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -169.329504
        var21 = ''
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = ',-pI8'
        var24 = 'x75[L'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '2Lc6EhN<%'
        var30 = ' w'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = True
        var33 = module0.unique_day(var26, var32)
    except BaseException:
        pass


def test_case_201():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'v'
        var13 = False
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_202():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = 'Xys2;)(y&w=ps([GFHm='
        var21 = 'oFU/E^'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = '{ZQD~)vEJYu/'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = -169.329504
        var27 = ''
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = ',-pI8'
        var30 = 'x75[L'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '\x0b'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = '2Lc6EhN<%'
        var36 = ' w'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = -1391
        var39 = 'O<~#Jc.'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = None
        var42 = '8u:j!{g\\2 $7'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = "7i#c*&b7e,'"
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 'AJtm\\C?$lu2'
        var48 = module0.contains_unique_day(var41, var47)
        assert var48 is False
        var49 = 'Xys2;)(y&w=ps([GFHm='
        var50 = 'oFU/E^'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = None
        var53 = '\x0b'
        var54 = module0.unique_month(var52, var53)
        assert var54 is False
        var55 = -1902
        var56 = '0#dYU>S-d'
        var57 = module0.unique_month(var55, var56)
        assert var57 is False
        var58 = None
        var59 = '\x0b'
        var60 = module0.unique_month(var58, var59)
        assert var60 is False
        var61 = module0.unique_month(var44, var15)
    except BaseException:
        pass


def test_case_203():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = -1391
        var9 = 'O<~#Jc.'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ',-pI8'
        var12 = 'x75[L'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = '2Lc6EhN<%'
        var18 = ' w'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Sh6P0e!Ql!{eGQ@'
        var24 = '?r;P\\T*MZ}RM/b{S%7a'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'Xys2;)(y&w=ps([GFHm='
        var27 = 'oFU/E^'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = '{ZQD~)vEJYu/'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -169.329504
        var33 = ''
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = "7i#c*&b7e,'"
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '#\x0bqP{=mqAP\x0c>-s!'
        var39 = 'ZeqxS'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = '{ZQD~)vEJYu/'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = ',-pI8'
        var45 = 'x75[L'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '8u:j!{g\\2 $7'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = 'U9lm-S<aj&D'
        var51 = module0.contains_unique_day(var48, var50)
        assert var51 is False
        var52 = -1944
        var53 = module0.unique_month(var20, var52)
    except BaseException:
        pass


def test_case_204():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = -2790.95933
        var19 = module0.contains_unique_day(var17, var18)
    except BaseException:
        pass


def test_case_205():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1391
        var19 = 'O<~#Jc.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '\x0b'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1902
        var28 = '0#dYU>S-d'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '\tc2d/S'
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = module0.contains_unique_day(var35, var33)
        assert var38 is False
        var39 = False
        var40 = "7i#c*&b7e,'"
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = '\tc2d/S'
        var43 = module0.unique_month(var40, var42)
        assert var43 is False
        var44 = '#\x0bqP{=mqAP\x0c>-s!'
        var45 = 'ZeqxS'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '8u:j!{g\\2 $7'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = 'U9lm-S<aj&D'
        var51 = module0.contains_unique_day(var48, var50)
        assert var51 is False
        var52 = 3440
        var53 = module0.unique_day(var52, var9)
    except BaseException:
        pass


def test_case_206():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = ',-pI8'
        var14 = 'x75[L'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = None
        var17 = '\x0b'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = '2Lc6EhN<%'
        var20 = ' w'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '\x0b'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 'Sh6P0e!Ql!{eGQ@'
        var29 = '?r;P\\T*MZ}RM/b{S%7a'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = -1391
        var32 = 'O<~#Jc.'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'Xys2;)(y&w=ps([GFHm='
        var35 = 'oFU/E^'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = module0.unique_month(var34, var35)
        assert var40 is False
        var41 = 'Xys2;)(y&w=ps([GFHm='
        var42 = 'oFU/E^'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = '{ZQD~)vEJYu/'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '8u:j!{g\\2 $7'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = module0.contains_unique_day(var16, var37)
    except BaseException:
        pass


def test_case_207():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = None
        var8 = '\x0b'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = False
        var11 = '{ZQD~)vEJYu/'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -1391
        var14 = 'O<~#Jc.'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = False
        var17 = "7i#c*&b7e,'"
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = 'Sh6P0e!Ql!{eGQ@'
        var20 = '?r;P\\T*MZ}RM/b{S%7a'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '\tc2d/S'
        var26 = module0.unique_month(var23, var25)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = module0.contains_unique_day(var27, var25)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = "7i#c*&b7e,'"
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'AJtm\\C?$lu2'
        var38 = module0.contains_unique_day(var31, var37)
        assert var38 is False
        var39 = -743
        var40 = 'L7\\?+cX~\rnzt6PK'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = None
        var43 = '8u:j!{g\\2 $7'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = 'yj6j\\eZ,$0tZ~Z'
        var46 = '@B\tt=xE\n,CidtY'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = '#\x0bqP{=mqAP\x0c>-s!'
        var49 = 'ZeqxS'
        var50 = module0.contains_unique_day(var48, var49)
        assert var50 is False
        var51 = 161.0
        var52 = -1695.693
        var53 = module0.unique_day(var51, var52)
    except BaseException:
        pass


def test_case_208():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '>@mN3\x0baJ4B&\nmbO9[fH'
        var10 = None
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_209():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 679
        var10 = module0.unique_month(var0, var9)
    except BaseException:
        pass


def test_case_210():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '{ZQD~)vEJYu/'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -169.329504
        var18 = ''
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = ',-pI8'
        var24 = 'x75[L'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.unique_day(var0, var0)
    except BaseException:
        pass


def test_case_211():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '#\x0bqP{=mqAP\x0c>-s!'
        var7 = 'ZeqxS'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = -743
        var18 = 'L7\\?+cX~\rnzt6PK'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.contains_unique_day(var17, var15)
        assert var20 is False
        var21 = 458.0
        var22 = 'F4_`lQDM'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = -743
        var33 = 'L7\\?+cX~\rnzt6PK'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = module0.contains_unique_day(var17, var24)
    except BaseException:
        pass


def test_case_212():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = None
        var14 = '\x0b'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = -2190
        var17 = module0.contains_unique_day(var13, var16)
    except BaseException:
        pass


def test_case_213():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '#\x0bqP{=mqAP\x0c>-s!'
        var7 = 'ZeqxS'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Sh6P0e!Ql!{eGQ@'
        var22 = '?r;P\\T*MZ}RM/b{S%7a'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = module0.unique_month(var24, var25)
        assert var30 is False
        var31 = 'Xys2;)(y&w=ps([GFHm='
        var32 = 'oFU/E^'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -1902
        var38 = '0#dYU>S-d'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = ',-pI8'
        var41 = 'x75[L'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = -3141
        var44 = module0.unique_day(var43, var43)
    except BaseException:
        pass


def test_case_214():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'AJtm\\C?$lu2'
        var16 = module0.contains_unique_day(var9, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '\tc2d/S'
        var21 = module0.unique_month(var18, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = -743
        var31 = 'L7\\?+cX~\rnzt6PK'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = module0.contains_unique_day(var30, var28)
        assert var33 is False
        var34 = None
        var35 = '8u:j!{g\\2 $7'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 'yj6j\\eZ,$0tZ~Z'
        var41 = '@B\tt=xE\n,CidtY'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = 458.0
        var44 = 'F4_`lQDM'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = '#\x0bqP{=mqAP\x0c>-s!'
        var47 = 'ZeqxS'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = -186
        var50 = -1420
        var51 = module0.contains_unique_day(var49, var50)
    except BaseException:
        pass


def test_case_215():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 458.0
        var12 = 'F4_`lQDM'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = -1781
        var15 = module0.unique_month(var4, var14)
    except BaseException:
        pass


def test_case_216():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'U9lm-S<aj&D'
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = False
        var24 = "7i#c*&b7e,'"
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '\tc2d/S'
        var27 = module0.unique_month(var24, var26)
        assert var27 is False
        var28 = -743
        var29 = 'L7\\?+cX~\rnzt6PK'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = module0.contains_unique_day(var28, var26)
        assert var31 is False
        var32 = ',-pI8'
        var33 = 'x75[L'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '\x0b'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = '2Lc6EhN<%'
        var39 = ' w'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'Xys2;)(y&w=ps([GFHm='
        var42 = 'oFU/E^'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = '{ZQD~)vEJYu/'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = -169.329504
        var48 = ''
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = ',-pI8'
        var51 = 'x75[L'
        var52 = module0.contains_unique_day(var50, var51)
        assert var52 is False
        var53 = -1391
        var54 = 'O<~#Jc.'
        var55 = module0.contains_unique_day(var53, var54)
        assert var55 is False
        var56 = 'sOW|p#U6dy\r/k:om'
        var57 = module0.contains_unique_day(var56, var9)
    except BaseException:
        pass


def test_case_217():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = module0.unique_day(var3, var1)
    except BaseException:
        pass


def test_case_218():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'U9lm-S<aj&D'
        var12 = module0.contains_unique_day(var9, var11)
        assert var12 is False
        var13 = False
        var14 = 1794.567
        var15 = module0.unique_day(var13, var14)
    except BaseException:
        pass


def test_case_219():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'U9lm-S<aj&D'
        var25 = module0.contains_unique_day(var22, var24)
        assert var25 is False
        var26 = -1420.627
        var27 = '(^dSLBVMDV{~~P>vT]'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '\tc2d/S'
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = 458.0
        var38 = 'F4_`lQDM'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = module0.unique_day(var0, var32)
    except BaseException:
        pass


def test_case_220():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'yj6j\\eZ,$0tZ~Z'
        var16 = '@B\tt=xE\n,CidtY'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'AJtm\\C?$lu2'
        var25 = module0.contains_unique_day(var18, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = False
        var32 = "7i#c*&b7e,'"
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = False
        var35 = '{ZQD~)vEJYu/'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = '#tE#vY'
        var38 = 1823.691
        var39 = module0.contains_unique_day(var37, var38)
    except BaseException:
        pass


def test_case_221():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -743
        var10 = 'L7\\?+cX~\rnzt6PK'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = 'Xys2;)(y&w=ps([GFHm='
        var21 = 'oFU/E^'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = module0.unique_month(var20, var21)
        assert var26 is False
        var27 = -1420.627
        var28 = '(^dSLBVMDV{~~P>vT]'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '8u:j!{g\\2 $7'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'yj6j\\eZ,$0tZ~Z'
        var34 = '@B\tt=xE\n,CidtY'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1903.186
        var40 = module0.contains_unique_day(var6, var39)
    except BaseException:
        pass


def test_case_222():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1420.627
        var7 = '(^dSLBVMDV{~~P>vT]'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.unique_month(var0, var9)
    except BaseException:
        pass


def test_case_223():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Sh6P0e!Ql!{eGQ@'
        var16 = '?r;P\\T*MZ}RM/b{S%7a'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'y)S{E'
        var19 = True
        var20 = module0.unique_day(var18, var19)
    except BaseException:
        pass


def test_case_224():
    try:
        var0 = '\x0bX'
        var1 = True
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_225():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = module0.contains_unique_day(var9, var3)
    except BaseException:
        pass


def test_case_226():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = '!K%\x0cG_\n@(9 @\x0bPxh'
        var6 = module0.unique_day(var0, var5)
    except BaseException:
        pass


def test_case_227():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 458.0
        var13 = 'F4_`lQDM'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = -1420.627
        var27 = '(^dSLBVMDV{~~P>vT]'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = '{ZQD~)vEJYu/'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = "6U[={WLa~' "
        var33 = True
        var34 = module0.unique_month(var32, var33)
    except BaseException:
        pass


def test_case_228():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 'Xys2;)(y&w=ps([GFHm='
        var6 = 'oFU/E^'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = '{ZQD~)vEJYu/'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -169.329504
        var12 = ''
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.unique_month(var14, var15)
        assert var20 is False
        var21 = "0'\\2`DkULt\\T\x0cWk1 KJV"
        var22 = module0.contains_unique_day(var21, var11)
    except BaseException:
        pass


def test_case_229():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 484
        var16 = None
        var17 = module0.unique_month(var15, var16)
    except BaseException:
        pass


def test_case_230():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'yj6j\\eZ,$0tZ~Z'
        var24 = '@B\tt=xE\n,CidtY'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'Xys2;)(y&w=ps([GFHm='
        var27 = 'oFU/E^'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'Sh6P0e!Ql!{eGQ@'
        var33 = '?r;P\\T*MZ}RM/b{S%7a'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ',-pI8'
        var36 = 'x75[L'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 2719
        var39 = module0.unique_day(var38, var20)
    except BaseException:
        pass


def test_case_231():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = "7i#c*&b7e,'"
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '\tc2d/S'
        var15 = module0.unique_month(var12, var14)
        assert var15 is False
        var16 = -743
        var17 = 'L7\\?+cX~\rnzt6PK'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = module0.contains_unique_day(var16, var14)
        assert var19 is False
        var20 = -1420.627
        var21 = '(^dSLBVMDV{~~P>vT]'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = '#\x0bqP{=mqAP\x0c>-s!'
        var24 = 'ZeqxS'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'Sh6P0e!Ql!{eGQ@'
        var36 = '?r;P\\T*MZ}RM/b{S%7a'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 1384
        var39 = 138
        var40 = module0.contains_unique_day(var38, var39)
    except BaseException:
        pass


def test_case_232():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'AJtm\\C?$lu2'
        var16 = module0.contains_unique_day(var9, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -1391
        var21 = 'O<~#Jc.'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = -3101.0
        var24 = 1297.066
        var25 = module0.unique_day(var23, var24)
    except BaseException:
        pass


def test_case_233():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = module0.unique_day(var15, var0)
    except BaseException:
        pass


def test_case_234():
    try:
        var0 = " B'I_iGW9L6I19j\\g"
        var1 = 'KrL_=t9AiM/@l)'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_235():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1391
        var22 = 'O<~#Jc.'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'yj6j\\eZ,$0tZ~Z'
        var31 = '@B\tt=xE\n,CidtY'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -1377.40339
        var34 = True
        var35 = module0.contains_unique_day(var33, var34)
    except BaseException:
        pass


def test_case_236():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '#\x0bqP{=mqAP\x0c>-s!'
        var10 = 'ZeqxS'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '\tc2d/S'
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = 1895
        var30 = True
        var31 = module0.unique_month(var29, var30)
    except BaseException:
        pass


def test_case_237():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = 'Xys2;)(y&w=ps([GFHm='
        var11 = 'oFU/E^'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -1420.627
        var14 = '(^dSLBVMDV{~~P>vT]'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = ',-pI8'
        var17 = 'x75[L'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'AJtm\\C?$lu2'
        var26 = module0.contains_unique_day(var19, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '#\x0bqP{=mqAP\x0c>-s!'
        var31 = 'ZeqxS'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = -1391
        var34 = 'O<~#Jc.'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = False
        var37 = "7i#c*&b7e,'"
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = '\tc2d/S'
        var40 = module0.unique_month(var37, var39)
        assert var40 is False
        var41 = -2278.2702
        var42 = module0.unique_month(var11, var41)
    except BaseException:
        pass


def test_case_238():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 458.0
        var16 = 'F4_`lQDM'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.unique_month(var18, var19)
        assert var24 is False
        var25 = -1420.627
        var26 = '(^dSLBVMDV{~~P>vT]'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = False
        var29 = '{ZQD~)vEJYu/'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = ',-pI8'
        var32 = 'x75[L'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = '2Lc6EhN<%'
        var38 = ' w'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = None
        var41 = '8u:j!{g\\2 $7'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = False
        var44 = "7i#c*&b7e,'"
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = 'AJtm\\C?$lu2'
        var47 = module0.contains_unique_day(var40, var46)
        assert var47 is False
        var48 = False
        var49 = True
        var50 = module0.unique_day(var48, var49)
    except BaseException:
        pass


def test_case_239():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_month(var12, var13)
        assert var18 is False
        var19 = 'Xys2;)(y&w=ps([GFHm='
        var20 = 'oFU/E^'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '\x0b'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = -1902
        var26 = '0#dYU>S-d'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = -743
        var29 = 'L7\\?+cX~\rnzt6PK'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = '{ZQD~)vEJYu/'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 1899.79
        var35 = 'rikq76e-4c_Ut;'
        var36 = module0.unique_day(var34, var35)
    except BaseException:
        pass


def test_case_240():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1420.627
        var22 = '(^dSLBVMDV{~~P>vT]'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.contains_unique_day(var13, var21)
    except BaseException:
        pass


def test_case_241():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'J^\x0b'
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_242():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 2200
        var7 = -401.94
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_243():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.unique_month(var18, var19)
        assert var24 is False
        var25 = 458.0
        var26 = 'F4_`lQDM'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = module0.unique_day(var28, var28)
    except BaseException:
        pass


def test_case_244():
    try:
        var0 = 258.3
        var1 = '7fo'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_245():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = ',-pI8'
        var21 = 'x75[L'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'AJtm\\C?$lu2'
        var30 = module0.contains_unique_day(var23, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = "7i#c*&b7e,'"
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '\tc2d/S'
        var38 = module0.unique_month(var35, var37)
        assert var38 is False
        var39 = None
        var40 = module0.unique_day(var39, var23)
    except BaseException:
        pass


def test_case_246():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Sh6P0e!Ql!{eGQ@'
        var19 = '?r;P\\T*MZ}RM/b{S%7a'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -169.329504
        var28 = ''
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '8u:j!{g\\2 $7'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'U9lm-S<aj&D'
        var34 = module0.contains_unique_day(var31, var33)
        assert var34 is False
        var35 = 'Xys2;)(y&w=ps([GFHm='
        var36 = 'oFU/E^'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = None
        var39 = '\x0b'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -1902
        var42 = '0#dYU>S-d'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = "7i#c*&b7e,'"
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = '\tc2d/S'
        var48 = module0.unique_month(var45, var47)
        assert var48 is False
        var49 = -743
        var50 = 'L7\\?+cX~\rnzt6PK'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = module0.contains_unique_day(var49, var47)
        assert var52 is False
        var53 = None
        var54 = '\x0b'
        var55 = module0.unique_month(var53, var54)
        assert var55 is False
        var56 = ',-pI8'
        var57 = 'x75[L'
        var58 = module0.contains_unique_day(var56, var57)
        assert var58 is False
        var59 = -1718
        var60 = module0.unique_day(var3, var59)
    except BaseException:
        pass


def test_case_247():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1420.627
        var13 = '(^dSLBVMDV{~~P>vT]'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_day(var3, var3)
    except BaseException:
        pass


def test_case_248():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'yj6j\\eZ,$0tZ~Z'
        var16 = '@B\tt=xE\n,CidtY'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'AJtm\\C?$lu2'
        var28 = module0.contains_unique_day(var21, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = ',-pI8'
        var33 = 'x75[L'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = ',-pI8'
        var36 = 'x75[L'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = '\x0b'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = '2Lc6EhN<%'
        var42 = ' w'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = -2306
        var45 = module0.contains_unique_day(var44, var44)
    except BaseException:
        pass


def test_case_249():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Sh6P0e!Ql!{eGQ@'
        var16 = '?r;P\\T*MZ}RM/b{S%7a'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 458.0
        var22 = 'F4_`lQDM'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'U9lm-S<aj&D'
        var36 = module0.contains_unique_day(var33, var35)
        assert var36 is False
        var37 = False
        var38 = '{ZQD~)vEJYu/'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = module0.unique_day(var30, var21)
    except BaseException:
        pass


def test_case_250():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '#\x0bqP{=mqAP\x0c>-s!'
        var10 = 'ZeqxS'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1902
        var19 = '0#dYU>S-d'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -743
        var22 = 'L7\\?+cX~\rnzt6PK'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -152.47
        var25 = -1949.0
        var26 = module0.unique_month(var24, var25)
    except BaseException:
        pass


def test_case_251():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'AJtm\\C?$lu2'
        var28 = module0.contains_unique_day(var21, var27)
        assert var28 is False
        var29 = 1070
        var30 = module0.contains_unique_day(var18, var29)
    except BaseException:
        pass


def test_case_252():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = ',-pI8'
        var12 = 'x75[L'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = '2Lc6EhN<%'
        var18 = ' w'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '\tc2d/S'
        var24 = module0.unique_month(var21, var23)
        assert var24 is False
        var25 = -743
        var26 = 'L7\\?+cX~\rnzt6PK'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.contains_unique_day(var25, var23)
        assert var28 is False
        var29 = None
        var30 = '8u:j!{g\\2 $7'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'U9lm-S<aj&D'
        var33 = module0.contains_unique_day(var30, var32)
        assert var33 is False
        var34 = '\x0c)'
        var35 = module0.unique_day(var34, var0)
    except BaseException:
        pass


def test_case_253():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 458.0
        var19 = 'F4_`lQDM'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1127.67
        var28 = -349.068
        var29 = module0.unique_day(var27, var28)
    except BaseException:
        pass


def test_case_254():
    try:
        var0 = '\n2\\;X}~A}J<^'
        var1 = None
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_255():
    try:
        var0 = True
        var1 = -1619.37769
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_256():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = -743
        var21 = 'L7\\?+cX~\rnzt6PK'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = module0.contains_unique_day(var20, var18)
        assert var23 is False
        var24 = '#\x0bqP{=mqAP\x0c>-s!'
        var25 = 'ZeqxS'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ',-pI8'
        var28 = 'x75[L'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = 'hr>p~hi'
        var32 = module0.unique_day(var30, var31)
    except BaseException:
        pass


def test_case_257():
    try:
        var0 = '1bxgkO+c\x0b09(%l-\x0cxZ~'
        var1 = -283.0
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_258():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 458.0
        var10 = 'F4_`lQDM'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Sh6P0e!Ql!{eGQ@'
        var16 = '?r;P\\T*MZ}RM/b{S%7a'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1391
        var19 = 'O<~#Jc.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -743
        var22 = 'L7\\?+cX~\rnzt6PK'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = module0.contains_unique_day(var24, var12)
    except BaseException:
        pass


def test_case_259():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 'Xys2;)(y&w=ps([GFHm='
        var6 = 'oFU/E^'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -1902
        var12 = '0#dYU>S-d'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'AJtm\\C?$lu2'
        var21 = module0.contains_unique_day(var14, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '\tc2d/S'
        var26 = module0.unique_month(var23, var25)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = module0.contains_unique_day(var27, var25)
        assert var30 is False
        var31 = ',-pI8'
        var32 = 'x75[L'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = '#\x0bqP{=mqAP\x0c>-s!'
        var35 = 'ZeqxS'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'Xys2;)(y&w=ps([GFHm='
        var38 = 'oFU/E^'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 1406.7
        var41 = module0.unique_month(var40, var8)
    except BaseException:
        pass


def test_case_260():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = -743
        var12 = 'L7\\?+cX~\rnzt6PK'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = module0.contains_unique_day(var11, var9)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'U9lm-S<aj&D'
        var25 = module0.contains_unique_day(var22, var24)
        assert var25 is False
        var26 = module0.unique_day(var9, var21)
    except BaseException:
        pass


def test_case_261():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'AJtm\\C?$lu2'
        var16 = module0.contains_unique_day(var9, var15)
        assert var16 is False
        var17 = '#\x0bqP{=mqAP\x0c>-s!'
        var18 = 'ZeqxS'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'yj6j\\eZ,$0tZ~Z'
        var24 = '@B\tt=xE\n,CidtY'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = ',-pI8'
        var27 = 'x75[L'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = '2Lc6EhN<%'
        var33 = ' w'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = "7i#c*&b7e,'"
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = 'Sh6P0e!Ql!{eGQ@'
        var39 = '?r;P\\T*MZ}RM/b{S%7a'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = "7i#c*&b7e,'"
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = '\tc2d/S'
        var45 = module0.unique_month(var42, var44)
        assert var45 is False
        var46 = 'Xys2;)(y&w=ps([GFHm='
        var47 = 'oFU/E^'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = False
        var50 = '{ZQD~)vEJYu/'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = -169.329504
        var53 = ''
        var54 = module0.contains_unique_day(var52, var53)
        assert var54 is False
        var55 = module0.unique_month(var29, var49)
    except BaseException:
        pass


def test_case_262():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = -1420.627
        var15 = '(^dSLBVMDV{~~P>vT]'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 1944
        var18 = -1472.9
        var19 = module0.unique_month(var17, var18)
    except BaseException:
        pass


def test_case_263():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'AJtm\\C?$lu2'
        var16 = module0.contains_unique_day(var9, var15)
        assert var16 is False
        var17 = None
        var18 = '\x0b'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -169.329504
        var30 = ''
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '#\x0bqP{=mqAP\x0c>-s!'
        var33 = 'ZeqxS'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = 'nf'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = False
        var39 = "7i#c*&b7e,'"
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'Sh6P0e!Ql!{eGQ@'
        var42 = '?r;P\\T*MZ}RM/b{S%7a'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 1732.032
        var45 = module0.contains_unique_day(var35, var44)
    except BaseException:
        pass


def test_case_264():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 818
        var4 = module0.unique_day(var3, var3)
    except BaseException:
        pass


def test_case_265():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '\x0b'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -1902
        var24 = '0#dYU>S-d'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = '#\x0bqP{=mqAP\x0c>-s!'
        var27 = 'ZeqxS'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '\tc2d/S'
        var33 = module0.unique_month(var30, var32)
        assert var33 is False
        var34 = ',-pI8'
        var35 = 'x75[L'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = -743
        var38 = 'L7\\?+cX~\rnzt6PK'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = None
        var41 = 'nf'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = '8'
        var44 = False
        var45 = module0.contains_unique_day(var43, var44)
    except BaseException:
        pass


def test_case_266():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var15, var16)
        assert var21 is False
        var22 = 458.0
        var23 = 'F4_`lQDM'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '#\x0bqP{=mqAP\x0c>-s!'
        var26 = 'ZeqxS'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = -1391
        var29 = 'O<~#Jc.'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = module0.contains_unique_day(var3, var28)
    except BaseException:
        pass


def test_case_267():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_month(var12, var13)
        assert var18 is False
        var19 = None
        var20 = 'nf'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 458.0
        var23 = 'F4_`lQDM'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = -743
        var26 = 'L7\\?+cX~\rnzt6PK'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = ',-pI8'
        var29 = 'x75[L'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'xSv;'
        var32 = 3477.46
        var33 = module0.contains_unique_day(var31, var32)
    except BaseException:
        pass


def test_case_268():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1902
        var22 = '0#dYU>S-d'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'U9lm-S<aj&D'
        var31 = module0.contains_unique_day(var28, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '8u:j!{g\\2 $7'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = module0.unique_month(var32, var33)
        assert var38 is False
        var39 = None
        var40 = module0.unique_month(var22, var39)
    except BaseException:
        pass


def test_case_269():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '5 Ekt^\x0c9K'
        var4 = None
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_270():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1420.627
        var16 = '(^dSLBVMDV{~~P>vT]'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'U9lm-S<aj&D'
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -1902
        var30 = '0#dYU>S-d'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -49
        var39 = None
        var40 = module0.unique_month(var38, var39)
    except BaseException:
        pass


def test_case_271():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'AJtm\\C?$lu2'
        var22 = module0.contains_unique_day(var15, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = 'nf'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '8u:j!{g\\2 $7'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'yj6j\\eZ,$0tZ~Z'
        var33 = '@B\tt=xE\n,CidtY'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 3419.355766
        var36 = module0.unique_day(var35, var12)
    except BaseException:
        pass


def test_case_272():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = False
        var11 = "7i#c*&b7e,'"
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = -1420.627
        var14 = '(^dSLBVMDV{~~P>vT]'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = '{ZQD~)vEJYu/'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -169.329504
        var23 = ''
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 'Sh6P0e!Ql!{eGQ@'
        var29 = '?r;P\\T*MZ}RM/b{S%7a'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = -1259
        var32 = module0.contains_unique_day(var31, var10)
    except BaseException:
        pass


def test_case_273():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Sh6P0e!Ql!{eGQ@'
        var22 = '?r;P\\T*MZ}RM/b{S%7a'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '#\x0bqP{=mqAP\x0c>-s!'
        var28 = 'ZeqxS'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = -1420.627
        var31 = '(^dSLBVMDV{~~P>vT]'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'Xys2;)(y&w=ps([GFHm='
        var34 = 'oFU/E^'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '\x0b'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1902
        var40 = '0#dYU>S-d'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = False
        var43 = module0.unique_month(var42, var12)
    except BaseException:
        pass


def test_case_274():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -1420.627
        var6 = '(^dSLBVMDV{~~P>vT]'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = ',-pI8'
        var9 = 'x75[L'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'yj6j\\eZ,$0tZ~Z'
        var15 = '@B\tt=xE\n,CidtY'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'nf'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Sh6P0e!Ql!{eGQ@'
        var24 = '?r;P\\T*MZ}RM/b{S%7a'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'Xys2;)(y&w=ps([GFHm='
        var27 = 'oFU/E^'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '8u:j!{g\\2 $7'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'AJtm\\C?$lu2'
        var36 = module0.contains_unique_day(var29, var35)
        assert var36 is False
        var37 = 1538
        var38 = module0.unique_day(var37, var37)
    except BaseException:
        pass


def test_case_275():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '2Lc6EhN<%'
        var25 = ' w'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_276():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = module0.contains_unique_day(var3, var9)
    except BaseException:
        pass


def test_case_277():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = ''
        var14 = module0.unique_month(var13, var5)
    except BaseException:
        pass


def test_case_278():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 3780
        var13 = 3648
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_279():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'AJtm\\C?$lu2'
        var13 = module0.contains_unique_day(var6, var12)
        assert var13 is False
        var14 = '#\x0bqP{=mqAP\x0c>-s!'
        var15 = 'ZeqxS'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 'Xys2;)(y&w=ps([GFHm='
        var21 = 'oFU/E^'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '\x0b'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = -1902
        var27 = '0#dYU>S-d'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'Sh6P0e!Ql!{eGQ@'
        var33 = '?r;P\\T*MZ}RM/b{S%7a'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '+f"b4H"8)tJ'
        var36 = module0.contains_unique_day(var35, var29)
    except BaseException:
        pass


def test_case_280():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = "c'7E$,97(j(fau'Ij"
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '{ZQD~)vEJYu/'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -169.329504
        var18 = ''
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -743
        var24 = 'L7\\?+cX~\rnzt6PK'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '\x0b'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = -1902
        var36 = '0#dYU>S-d'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = None
        var39 = module0.unique_month(var26, var38)
    except BaseException:
        pass


def test_case_281():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 'Xys2;)(y&w=ps([GFHm='
        var6 = 'oFU/E^'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -1902
        var12 = '0#dYU>S-d'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = '#\x0bqP{=mqAP\x0c>-s!'
        var15 = 'ZeqxS'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -169.329504
        var24 = ''
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = -743
        var32 = 'L7\\?+cX~\rnzt6PK'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var29)
        assert var34 is False
        var35 = False
        var36 = "7i#c*&b7e,'"
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '<@rH*'
        var39 = None
        var40 = module0.unique_month(var38, var39)
    except BaseException:
        pass


def test_case_282():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'nf'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 458.0
        var16 = 'F4_`lQDM'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_day(var15, var9)
    except BaseException:
        pass


def test_case_283():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'nf'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'uml@3gL nN.KCH`(BP'
        var10 = -2173.3617
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_284():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1391
        var13 = 'O<~#Jc.'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'AJtm\\C?$lu2'
        var22 = module0.contains_unique_day(var15, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -169.329504
        var30 = ''
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = -1420.627
        var33 = '(^dSLBVMDV{~~P>vT]'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = ',-pI8'
        var36 = 'x75[L'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '0hAZm/!\x0b09" "]Xw@a'
        var39 = False
        var40 = module0.unique_day(var38, var39)
    except BaseException:
        pass


def test_case_285():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '#\x0bqP{=mqAP\x0c>-s!'
        var10 = 'ZeqxS'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'U9lm-S<aj&D'
        var36 = module0.contains_unique_day(var33, var35)
        assert var36 is False
        var37 = None
        var38 = module0.unique_month(var37, var24)
    except BaseException:
        pass


def test_case_286():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = -743
        var11 = 'L7\\?+cX~\rnzt6PK'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = module0.unique_month(var6, var6)
    except BaseException:
        pass


def test_case_287():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1391
        var16 = 'O<~#Jc.'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -1902
        var25 = '0#dYU>S-d'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '\tc2d/S'
        var31 = module0.unique_month(var28, var30)
        assert var31 is False
        var32 = module0.contains_unique_day(var21, var21)
    except BaseException:
        pass


def test_case_288():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = ',-pI8'
        var8 = 'x75[L'
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = False
        var11 = "7i#c*&b7e,'"
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 'Sh6P0e!Ql!{eGQ@'
        var17 = '?r;P\\T*MZ}RM/b{S%7a'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = ',-pI8'
        var20 = 'x75[L'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '\x0b'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = '2Lc6EhN<%'
        var26 = ' w'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = -1420.627
        var29 = '(^dSLBVMDV{~~P>vT]'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = '#\x0bqP{=mqAP\x0c>-s!'
        var32 = 'ZeqxS'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'Xys2;)(y&w=ps([GFHm='
        var35 = 'oFU/E^'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = False
        var38 = '{ZQD~)vEJYu/'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = -169.329504
        var41 = ''
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '8u:j!{g\\2 $7'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = "c'7E$,97(j(fau'Ij"
        var47 = module0.unique_month(var44, var46)
        assert var47 is False
        var48 = module0.contains_unique_day(var43, var3)
    except BaseException:
        pass


def test_case_289():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = 458.0
        var9 = 'F4_`lQDM'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = -3542
        var12 = module0.unique_day(var11, var8)
    except BaseException:
        pass


def test_case_290():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'Sh6P0e!Ql!{eGQ@'
        var21 = '?r;P\\T*MZ}RM/b{S%7a'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = False
        var24 = '{ZQD~)vEJYu/'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'yj6j\\eZ,$0tZ~Z'
        var30 = '@B\tt=xE\n,CidtY'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = None
        var36 = 'nf'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = -743
        var39 = 'L7\\?+cX~\rnzt6PK'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = 1091.7944
        var42 = module0.unique_month(var13, var41)
    except BaseException:
        pass


def test_case_291():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = ',-pI8'
        var6 = 'x75[L'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = '2Lc6EhN<%'
        var12 = ' w'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = "7i#c*&b7e,'"
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '\tc2d/S'
        var18 = module0.unique_month(var15, var17)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = module0.contains_unique_day(var19, var17)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'yj6j\\eZ,$0tZ~Z'
        var27 = '@B\tt=xE\n,CidtY'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = -1420.627
        var33 = '(^dSLBVMDV{~~P>vT]'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = module0.unique_day(var12, var8)
    except BaseException:
        pass


def test_case_292():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Sh6P0e!Ql!{eGQ@'
        var22 = '?r;P\\T*MZ}RM/b{S%7a'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = "c'7E$,97(j(fau'Ij"
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = None
        var30 = '8u:j!{g\\2 $7'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'U9lm-S<aj&D'
        var33 = module0.contains_unique_day(var30, var32)
        assert var33 is False
        var34 = None
        var35 = 'nf'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'Xys2;)(y&w=ps([GFHm='
        var38 = 'oFU/E^'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = None
        var41 = '8u:j!{g\\2 $7'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = module0.unique_month(var37, var38)
        assert var43 is False
        var44 = -1391
        var45 = 'O<~#Jc.'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = False
        var48 = "7i#c*&b7e,'"
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = '\tc2d/S'
        var51 = module0.unique_month(var48, var50)
        assert var51 is False
        var52 = -743
        var53 = 'L7\\?+cX~\rnzt6PK'
        var54 = module0.unique_month(var52, var53)
        assert var54 is False
        var55 = module0.contains_unique_day(var52, var50)
        assert var55 is False
        var56 = 1459.0
        var57 = module0.unique_month(var52, var56)
    except BaseException:
        pass


def test_case_293():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = False
        var11 = '{ZQD~)vEJYu/'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'yj6j\\eZ,$0tZ~Z'
        var17 = '@B\tt=xE\n,CidtY'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = 'Xys2;)(y&w=ps([GFHm='
        var20 = 'oFU/E^'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '\x0b'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = -1902
        var26 = '0#dYU>S-d'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 'U9lm-S<aj&D'
        var32 = module0.contains_unique_day(var29, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = "7i#c*&b7e,'"
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = 'Sh6P0e!Ql!{eGQ@'
        var43 = '?r;P\\T*MZ}RM/b{S%7a'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = None
        var46 = '8u:j!{g\\2 $7'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = "c'7E$,97(j(fau'Ij"
        var49 = module0.unique_month(var46, var48)
        assert var49 is False
        var50 = True
        var51 = 1390.307956
        var52 = module0.unique_month(var50, var51)
    except BaseException:
        pass


def test_case_294():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = "c'7E$,97(j(fau'Ij"
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 746.6
        var12 = -396
        var13 = module0.contains_unique_day(var11, var12)
    except BaseException:
        pass


def test_case_295():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 458.0
        var12 = 'F4_`lQDM'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'AJtm\\C?$lu2'
        var21 = module0.contains_unique_day(var14, var20)
        assert var21 is False
        var22 = ',-pI8'
        var23 = 'x75[L'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = -743
        var31 = 'L7\\?+cX~\rnzt6PK'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = module0.contains_unique_day(var30, var28)
        assert var33 is False
        var34 = None
        var35 = '8u:j!{g\\2 $7'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = "c'7E$,97(j(fau'Ij"
        var38 = module0.unique_month(var35, var37)
        assert var38 is False
        var39 = '%*Uf*.'
        var40 = module0.unique_day(var30, var39)
    except BaseException:
        pass


def test_case_296():
    try:
        var0 = "q('?DF`"
        var1 = 771
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_297():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '#\x0bqP{=mqAP\x0c>-s!'
        var10 = 'ZeqxS'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 458.0
        var13 = 'F4_`lQDM'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = "c'7E$,97(j(fau'Ij"
        var31 = module0.unique_month(var28, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '\tc2d/S'
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = -1859
        var38 = module0.unique_month(var37, var27)
    except BaseException:
        pass


def test_case_298():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = 2118
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_299():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = -1391
        var9 = 'O<~#Jc.'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = -1902
        var18 = '0#dYU>S-d'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'U9lm-S<aj&D'
        var24 = module0.contains_unique_day(var21, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = module0.unique_month(var26, var28)
    except BaseException:
        pass


def test_case_300():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = 'Xys2;)(y&w=ps([GFHm='
        var8 = 'oFU/E^'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = None
        var11 = '\x0b'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -1902
        var14 = '0#dYU>S-d'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = False
        var23 = module0.unique_day(var22, var1)
    except BaseException:
        pass


def test_case_301():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'AJtm\\C?$lu2'
        var19 = module0.contains_unique_day(var12, var18)
        assert var19 is False
        var20 = 1297.5977
        var21 = module0.unique_month(var3, var20)
    except BaseException:
        pass


def test_case_302():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Sh6P0e!Ql!{eGQ@'
        var16 = '?r;P\\T*MZ}RM/b{S%7a'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var21, var22)
        assert var27 is False
        var28 = module0.unique_day(var24, var8)
    except BaseException:
        pass


def test_case_303():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '2Lc6EhN<%'
        var22 = ' w'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '\tc2d/S'
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = -743
        var30 = 'L7\\?+cX~\rnzt6PK'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = module0.contains_unique_day(var29, var27)
        assert var32 is False
        var33 = None
        var34 = '8u:j!{g\\2 $7'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = "c'7E$,97(j(fau'Ij"
        var37 = module0.unique_month(var34, var36)
        assert var37 is False
        var38 = 'Xys2;)(y&w=ps([GFHm='
        var39 = 'oFU/E^'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = None
        var42 = '8u:j!{g\\2 $7'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = module0.unique_month(var38, var39)
        assert var44 is False
        var45 = '#\x0bqP{=mqAP\x0c>-s!'
        var46 = 'ZeqxS'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = '1{_>0}\t}cs-MU('
        var49 = module0.contains_unique_day(var48, var0)
    except BaseException:
        pass


def test_case_304():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '?~\x0b$NV?zu4K0,>1'
        var22 = -433
        var23 = module0.unique_month(var21, var22)
    except BaseException:
        pass


def test_case_305():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 458.0
        var10 = 'F4_`lQDM'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = "c'7E$,97(j(fau'Ij"
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = 'l>r_\n&'
        var21 = module0.unique_day(var20, var5)
    except BaseException:
        pass


def test_case_306():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 458.0
        var10 = 'F4_`lQDM'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = 'nf'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = '\tc2d/S'
        var24 = module0.unique_month(var21, var23)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 'yj6j\\eZ,$0tZ~Z'
        var29 = '@B\tt=xE\n,CidtY'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = -1391
        var32 = 'O<~#Jc.'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ',-pI8'
        var35 = 'x75[L'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '#\x0bqP{=mqAP\x0c>-s!'
        var38 = 'ZeqxS'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 614.4098
        var41 = module0.contains_unique_day(var40, var15)
    except BaseException:
        pass


def test_case_307():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = -743
        var27 = 'L7\\?+cX~\rnzt6PK'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = module0.contains_unique_day(var26, var24)
        assert var29 is False
        var30 = 'Xys2;)(y&w=ps([GFHm='
        var31 = 'oFU/E^'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = -1902
        var37 = '0#dYU>S-d'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = -1420.627
        var40 = '(^dSLBVMDV{~~P>vT]'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = 'Xys2;)(y&w=ps([GFHm='
        var43 = 'oFU/E^'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = None
        var46 = '8u:j!{g\\2 $7'
        var47 = module0.unique_month(var45, var46)
        assert var47 is False
        var48 = module0.unique_month(var42, var43)
        assert var48 is False
        var49 = False
        var50 = '{ZQD~)vEJYu/'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = None
        var53 = '8u:j!{g\\2 $7'
        var54 = module0.unique_month(var52, var53)
        assert var54 is False
        var55 = False
        var56 = "7i#c*&b7e,'"
        var57 = module0.contains_unique_day(var55, var56)
        assert var57 is False
        var58 = 'AJtm\\C?$lu2'
        var59 = module0.contains_unique_day(var52, var58)
        assert var59 is False
        var60 = True
        var61 = module0.contains_unique_day(var60, var55)
    except BaseException:
        pass


def test_case_308():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1420.627
        var4 = '(^dSLBVMDV{~~P>vT]'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 1126
        var7 = 'Gq$b|X-O\x0c'
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_309():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 458.0
        var9 = 'F4_`lQDM'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = -743
        var12 = 'L7\\?+cX~\rnzt6PK'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -348.39118
        var15 = module0.unique_month(var8, var14)
    except BaseException:
        pass


def test_case_310():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'nf'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = 'rN/n\r\\M%?%QlTn-dE'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = "c'7E$,97(j(fau'Ij"
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = -1420.627
        var30 = '(^dSLBVMDV{~~P>vT]'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '\x0b'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = -1391
        var36 = 'O<~#Jc.'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = '?okk)k<Lr[Bo'
        var39 = 'r|{,'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = 458.0
        var42 = 'F4_`lQDM'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 'h1'
        var45 = False
        var46 = module0.contains_unique_day(var44, var45)
    except BaseException:
        pass


def test_case_311():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.unique_month(var18, var19)
        assert var24 is False
        var25 = None
        var26 = 'nf'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = module0.unique_day(var4, var3)
    except BaseException:
        pass


def test_case_312():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var9, var10)
        assert var15 is False
        var16 = -1420.627
        var17 = '(^dSLBVMDV{~~P>vT]'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = '#\x0bqP{=mqAP\x0c>-s!'
        var20 = 'ZeqxS'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = -1391
        var23 = 'O<~#Jc.'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = None
        var26 = 'nf'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = ''
        var29 = 'rN/n\r\\M%?%QlTn-dE'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = module0.contains_unique_day(var25, var16)
    except BaseException:
        pass


def test_case_313():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1902
        var16 = '0#dYU>S-d'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'b~'
        var19 = module0.unique_month(var18, var15)
    except BaseException:
        pass


def test_case_314():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Sh6P0e!Ql!{eGQ@'
        var19 = '?r;P\\T*MZ}RM/b{S%7a'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var21, var22)
        assert var27 is False
        var28 = False
        var29 = module0.unique_day(var6, var28)
    except BaseException:
        pass


def test_case_315():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = '\tc2d/S'
        var17 = module0.unique_month(var14, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.contains_unique_day(var18, var16)
        assert var21 is False
        var22 = '#\x0bqP{=mqAP\x0c>-s!'
        var23 = 'ZeqxS'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = -2666.0
        var26 = module0.contains_unique_day(var0, var25)
    except BaseException:
        pass


def test_case_316():
    try:
        var0 = None
        var1 = 3072.99905
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_317():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = "c'7E$,97(j(fau'Ij"
        var18 = module0.unique_month(var15, var17)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 'AJtm\\C?$lu2'
        var29 = module0.contains_unique_day(var22, var28)
        assert var29 is False
        var30 = '#\x0bqP{=mqAP\x0c>-s!'
        var31 = 'ZeqxS'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '{ZQD~)vEJYu/'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '8u:j!{g\\2 $7'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = 'yj6j\\eZ,$0tZ~Z'
        var40 = '@B\tt=xE\n,CidtY'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = module0.unique_month(var3, var19)
    except BaseException:
        pass


def test_case_318():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'vazqF\x0bx\x0b]AdX'
        var9 = -388.3
        var10 = module0.contains_unique_day(var8, var9)
    except BaseException:
        pass


def test_case_319():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1902
        var19 = '0#dYU>S-d'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ',-pI8'
        var22 = 'x75[L'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '\x0b'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = '2Lc6EhN<%'
        var28 = ' w'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = None
        var31 = 'nf'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = -1391
        var34 = 'O<~#Jc.'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = -1649.104
        var37 = module0.unique_day(var36, var27)
    except BaseException:
        pass


def test_case_320():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = ',-pI8'
        var11 = 'x75[L'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '\x0b'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = '2Lc6EhN<%'
        var17 = ' w'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = -1420.627
        var20 = '(^dSLBVMDV{~~P>vT]'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '\tc2d/S'
        var26 = module0.unique_month(var23, var25)
        assert var26 is False
        var27 = -743
        var28 = 'L7\\?+cX~\rnzt6PK'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = module0.contains_unique_day(var27, var25)
        assert var30 is False
        var31 = module0.unique_day(var6, var19)
    except BaseException:
        pass


def test_case_321():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'U9lm-S<aj&D'
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = ''
        var9 = 'rN/n\r\\M%?%QlTn-dE'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = -1148.72243
        var13 = module0.unique_day(var11, var12)
    except BaseException:
        pass


def test_case_322():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = -743
        var12 = 'L7\\?+cX~\rnzt6PK'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = module0.contains_unique_day(var11, var9)
        assert var14 is False
        var15 = 1930
        var16 = module0.contains_unique_day(var3, var15)
    except BaseException:
        pass


def test_case_323():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '#\x0bqP{=mqAP\x0c>-s!'
        var16 = 'ZeqxS'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -528.21004
        var19 = module0.unique_month(var18, var9)
    except BaseException:
        pass


def test_case_324():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1995
        var4 = '1eeMAz-7Q#@o|u;\nP'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = '#\x0bqP{=mqAP\x0c>-s!'
        var12 = 'ZeqxS'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = "7i#c*&b7e,'"
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'nf'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'yj6j\\eZ,$0tZ~Z'
        var24 = '@B\tt=xE\n,CidtY'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'Xys2;)(y&w=ps([GFHm='
        var27 = 'oFU/E^'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '8u:j!{g\\2 $7'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'AJtm\\C?$lu2'
        var36 = module0.contains_unique_day(var29, var35)
        assert var36 is False
        var37 = 'Xys2;)(y&w=ps([GFHm='
        var38 = 'oFU/E^'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = False
        var41 = '{ZQD~)vEJYu/'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = -169.329504
        var44 = ''
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = -2547.639
        var47 = module0.unique_day(var29, var46)
    except BaseException:
        pass


def test_case_325():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '{ZQD~)vEJYu/'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -169.329504
        var10 = ''
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 'yj6j\\eZ,$0tZ~Z'
        var21 = '@B\tt=xE\n,CidtY'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'AJtm\\C?$lu2'
        var30 = module0.contains_unique_day(var23, var29)
        assert var30 is False
        var31 = False
        var32 = '{ZQD~)vEJYu/'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = ',-pI8'
        var35 = 'x75[L'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '\x0b'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = '2Lc6EhN<%'
        var41 = ' w'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = False
        var44 = "7i#c*&b7e,'"
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = '\tc2d/S'
        var47 = module0.unique_month(var44, var46)
        assert var47 is False
        var48 = 441.48
        var49 = True
        var50 = module0.contains_unique_day(var48, var49)
    except BaseException:
        pass


def test_case_326():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Sh6P0e!Ql!{eGQ@'
        var19 = '?r;P\\T*MZ}RM/b{S%7a'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = -1995
        var22 = '1eeMAz-7Q#@o|u;\nP'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '?okk)k<Lr[Bo'
        var25 = 'r|{,'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.contains_unique_day(var6, var12)
    except BaseException:
        pass


def test_case_327():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1324.0
        var4 = 2792.2
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_328():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'bI\\Q$0l*8Cq}`\x0cZ({'
        var4 = 'hi@l_Q9'
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_329():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = module0.unique_month(var18, var19)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 'U9lm-S<aj&D'
        var29 = module0.contains_unique_day(var26, var28)
        assert var29 is False
        var30 = -353
        var31 = module0.contains_unique_day(var25, var30)
    except BaseException:
        pass


def test_case_330():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'yj6j\\eZ,$0tZ~Z'
        var16 = '@B\tt=xE\n,CidtY'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'U9lm-S<aj&D'
        var25 = module0.contains_unique_day(var22, var24)
        assert var25 is False
        var26 = 2852.43539
        var27 = -2269
        var28 = module0.unique_day(var26, var27)
    except BaseException:
        pass


def test_case_331():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '#\x0bqP{=mqAP\x0c>-s!'
        var25 = 'ZeqxS'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -3511
        var28 = module0.unique_day(var27, var18)
    except BaseException:
        pass


def test_case_332():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '#\x0bqP{=mqAP\x0c>-s!'
        var13 = 'ZeqxS'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = -743
        var21 = 'L7\\?+cX~\rnzt6PK'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = None
        var24 = module0.unique_day(var23, var3)
    except BaseException:
        pass


def test_case_333():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 1219.034
        var4 = module0.unique_day(var3, var1)
    except BaseException:
        pass


def test_case_334():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -1420.627
        var6 = '(^dSLBVMDV{~~P>vT]'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = "c'7E$,97(j(fau'Ij"
        var12 = module0.unique_month(var9, var11)
        assert var12 is False
        var13 = -1995
        var14 = '1eeMAz-7Q#@o|u;\nP'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = ',-pI8'
        var17 = 'x75[L'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '\x0b'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = '2Lc6EhN<%'
        var23 = ' w'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 458.0
        var26 = 'F4_`lQDM'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = "7i#c*&b7e,'"
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = 'AJtm\\C?$lu2'
        var35 = module0.contains_unique_day(var28, var34)
        assert var35 is False
        var36 = ''
        var37 = 'rN/n\r\\M%?%QlTn-dE'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 'Fw3,'
        var40 = module0.unique_month(var39, var8)
    except BaseException:
        pass


def test_case_335():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 706.49804
        var10 = -629
        var11 = module0.unique_month(var9, var10)
    except BaseException:
        pass


def test_case_336():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = '#\x0bqP{=mqAP\x0c>-s!'
        var14 = 'ZeqxS'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = False
        var17 = "7i#c*&b7e,'"
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = 'Sh6P0e!Ql!{eGQ@'
        var20 = '?r;P\\T*MZ}RM/b{S%7a'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'Xys2;)(y&w=ps([GFHm='
        var23 = 'oFU/E^'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.unique_month(var22, var23)
        assert var28 is False
        var29 = -1420.627
        var30 = '(^dSLBVMDV{~~P>vT]'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '\tc2d/S'
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = -2218
        var38 = module0.contains_unique_day(var37, var5)
    except BaseException:
        pass


def test_case_337():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'w"OB52D\n6X{ESza`l--'
        var4 = 2280
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_338():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 2209.653
        var4 = module0.contains_unique_day(var0, var3)
    except BaseException:
        pass


def test_case_339():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'AJtm\\C?$lu2'
        var25 = module0.contains_unique_day(var18, var24)
        assert var25 is False
        var26 = -1995
        var27 = '1eeMAz-7Q#@o|u;\nP'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = -169.329504
        var39 = ''
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 2687.5
        var42 = module0.contains_unique_day(var41, var35)
    except BaseException:
        pass


def test_case_340():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = ''
        var6 = 'rN/n\r\\M%?%QlTn-dE'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1902
        var15 = '0#dYU>S-d'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = -2379.94836
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_341():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'y>;=b=RiM^X'
        var18 = False
        var19 = module0.contains_unique_day(var17, var18)
    except BaseException:
        pass


def test_case_342():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 358.0
        var6 = '}%'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = '{ZQD~)vEJYu/'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = 'rN/n\r\\M%?%QlTn-dE'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = module0.unique_month(var3, var5)
    except BaseException:
        pass


def test_case_343():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'U9lm-S<aj&D'
        var12 = module0.contains_unique_day(var9, var11)
        assert var12 is False
        var13 = True
        var14 = '\x0c\\:9H2`y`"'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = module0.unique_day(var0, var11)
    except BaseException:
        pass


def test_case_344():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var15, var16)
        assert var21 is False
        var22 = ''
        var23 = 'rN/n\r\\M%?%QlTn-dE'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '\x0b'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = -1902
        var32 = '0#dYU>S-d'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -548
        var35 = module0.contains_unique_day(var34, var3)
    except BaseException:
        pass


def test_case_345():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = False
        var6 = "7i#c*&b7e,'"
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '\tc2d/S'
        var9 = module0.unique_month(var6, var8)
        assert var9 is False
        var10 = -743
        var11 = 'L7\\?+cX~\rnzt6PK'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = module0.contains_unique_day(var10, var8)
        assert var13 is False
        var14 = '#\x0bqP{=mqAP\x0c>-s!'
        var15 = 'ZeqxS'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = -1618.3342
        var18 = 1222
        var19 = module0.unique_day(var17, var18)
    except BaseException:
        pass


def test_case_346():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '?okk)k<Lr[Bo'
        var16 = 'r|{,'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Sh6P0e!Ql!{eGQ@'
        var22 = '?r;P\\T*MZ}RM/b{S%7a'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = 'O>V\r!\x0b'
        var33 = module0.unique_day(var3, var32)
    except BaseException:
        pass


def test_case_347():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '47'
        var4 = -1194.5712
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_348():
    try:
        var0 = -1995
        var1 = '1eeMAz-7Q#@o|u;\nP'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1902
        var22 = '0#dYU>S-d'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '\tc2d/S'
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = -743
        var30 = 'L7\\?+cX~\rnzt6PK'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = module0.contains_unique_day(var29, var27)
        assert var32 is False
        var33 = ')8IMh--~v5H^'
        var34 = module0.unique_day(var33, var21)
    except BaseException:
        pass


def test_case_349():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = '\x0c\\:9H2`y`"'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = -743
        var12 = 'L7\\?+cX~\rnzt6PK'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = module0.contains_unique_day(var11, var9)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = '#\x0bqP{=mqAP\x0c>-s!'
        var24 = 'ZeqxS'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = "c'7E$,97(j(fau'Ij"
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 'yj6j\\eZ,$0tZ~Z'
        var35 = '@B\tt=xE\n,CidtY'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = False
        var38 = "\tkqW{^)u'&7vTWVU1z"
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = -1391
        var41 = 'O<~#Jc.'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = '>MNKWNz~%.'
        var44 = module0.unique_day(var43, var0)
    except BaseException:
        pass


def test_case_350():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 358.0
        var13 = '}%'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 458.0
        var16 = 'F4_`lQDM'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = 'rN/n\r\\M%?%QlTn-dE'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'yj6j\\eZ,$0tZ~Z'
        var25 = '@B\tt=xE\n,CidtY'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "\tkqW{^)u'&7vTWVU1z"
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = ',-pI8'
        var31 = 'x75[L'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '\x0b'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = '2Lc6EhN<%'
        var37 = ' w'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = module0.unique_month(var27, var6)
    except BaseException:
        pass


def test_case_351():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '?okk)k<Lr[Bo'
        var4 = 'r|{,'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -169.329504
        var28 = ''
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '\tc2d/S'
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = module0.contains_unique_day(var35, var33)
        assert var38 is False
        var39 = -1420.627
        var40 = '(^dSLBVMDV{~~P>vT]'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = ',-pI8'
        var43 = 'x75[L'
        var44 = module0.contains_unique_day(var42, var43)
        assert var44 is False
        var45 = False
        var46 = "7i#c*&b7e,'"
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = '\tc2d/S'
        var49 = module0.unique_month(var46, var48)
        assert var49 is False
        var50 = module0.unique_month(var4, var30)
    except BaseException:
        pass


def test_case_352():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'ynoJG]qI'
        var10 = module0.unique_month(var9, var3)
    except BaseException:
        pass


def test_case_353():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = False
        var8 = "7i#c*&b7e,'"
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = 'Sh6P0e!Ql!{eGQ@'
        var11 = '?r;P\\T*MZ}RM/b{S%7a'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'U9lm-S<aj&D'
        var17 = module0.contains_unique_day(var14, var16)
        assert var17 is False
        var18 = 982
        var19 = module0.unique_day(var18, var18)
    except BaseException:
        pass


def test_case_354():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 931.288
        var6 = None
        var7 = module0.contains_unique_day(var5, var6)
    except BaseException:
        pass


def test_case_355():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 2774
        var4 = True
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_356():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'U9lm-S<aj&D'
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Sh6P0e!Ql!{eGQ@'
        var12 = '?r;P\\T*MZ}RM/b{S%7a'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 'yj6j\\eZ,$0tZ~Z'
        var18 = '@B\tt=xE\n,CidtY'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 458.0
        var21 = 'F4_`lQDM'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -1902
        var30 = '0#dYU>S-d'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '8u:j!{g\\2 $7'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = 'yj6j\\eZ,$0tZ~Z'
        var39 = '@B\tt=xE\n,CidtY'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = False
        var42 = "\tkqW{^)u'&7vTWVU1z"
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = None
        var45 = module0.unique_day(var29, var44)
    except BaseException:
        pass


def test_case_357():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '?okk)k<Lr[Bo'
        var13 = 'r|{,'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = "c'7E$,97(j(fau'Ij"
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = 458.0
        var21 = 'F4_`lQDM'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'yj6j\\eZ,$0tZ~Z'
        var27 = '@B\tt=xE\n,CidtY'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "\tkqW{^)u'&7vTWVU1z"
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = '\tc2d/S'
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = -743
        var38 = 'L7\\?+cX~\rnzt6PK'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = module0.contains_unique_day(var37, var35)
        assert var40 is False
        var41 = 'Xys2;)(y&w=ps([GFHm='
        var42 = 'oFU/E^'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = None
        var45 = '8u:j!{g\\2 $7'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = None
        var48 = module0.unique_day(var47, var29)
    except BaseException:
        pass


def test_case_358():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = "c'7E$,97(j(fau'Ij"
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -169.329504
        var15 = ''
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var17, var18)
        assert var23 is False
        var24 = 'UCTYLf/ZMBlA+r'
        var25 = -657
        var26 = module0.contains_unique_day(var24, var25)
    except BaseException:
        pass


def test_case_359():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var9, var10)
        assert var15 is False
        var16 = True
        var17 = '\x0c\\:9H2`y`"'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = 358.0
        var20 = '}%'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = ',-pI8'
        var23 = 'x75[L'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 458.0
        var26 = 'F4_`lQDM'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = '{ZQD~)vEJYu/'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = None
        var32 = '\x0b'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -1995
        var35 = '1eeMAz-7Q#@o|u;\nP'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 'yj6j\\eZ,$0tZ~Z'
        var41 = '@B\tt=xE\n,CidtY'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = False
        var44 = "\tkqW{^)u'&7vTWVU1z"
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = module0.contains_unique_day(var38, var12)
    except BaseException:
        pass


def test_case_360():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = True
        var13 = '\x0c\\:9H2`y`"'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'U9lm-S<aj&D'
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = 458.0
        var24 = 'F4_`lQDM'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '8u:j!{g\\2 $7'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = True
        var30 = module0.unique_month(var9, var29)
    except BaseException:
        pass


def test_case_361():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '#\x0bqP{=mqAP\x0c>-s!'
        var7 = 'ZeqxS'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'AJtm\\C?$lu2'
        var25 = module0.contains_unique_day(var18, var24)
        assert var25 is False
        var26 = None
        var27 = 'nf'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = module0.unique_day(var18, var18)
    except BaseException:
        pass


def test_case_362():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1391
        var15 = 'O<~#Jc.'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = 'nf'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = True
        var21 = '\x0c\\:9H2`y`"'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -1902
        var30 = '0#dYU>S-d'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = "7i#c*&b7e,'"
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'Sh6P0e!Ql!{eGQ@'
        var36 = '?r;P\\T*MZ}RM/b{S%7a'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = None
        var39 = '8u:j!{g\\2 $7'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = 'yj6j\\eZ,$0tZ~Z'
        var42 = '@B\tt=xE\n,CidtY'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = module0.unique_day(var17, var14)
    except BaseException:
        pass


def test_case_363():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'nf'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = True
        var10 = '\x0c\\:9H2`y`"'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1902
        var19 = '0#dYU>S-d'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = -311.0
        var26 = module0.unique_day(var24, var25)
    except BaseException:
        pass


def test_case_364():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = -95.0
        var8 = module0.unique_day(var6, var7)
    except BaseException:
        pass


def test_case_365():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '\x0b'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2Lc6EhN<%'
        var16 = ' w'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = '\tc2d/S'
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = module0.unique_month(var18, var3)
    except BaseException:
        pass


def test_case_366():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'yj6j\\eZ,$0tZ~Z'
        var12 = '@B\tt=xE\n,CidtY'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = module0.unique_month(var14, var15)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = -1391
        var33 = 'O<~#Jc.'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = "6'Cw:wt+5"
        var36 = module0.contains_unique_day(var35, var5)
    except BaseException:
        pass


def test_case_367():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1309.76
        var4 = module0.unique_day(var1, var3)
    except BaseException:
        pass


def test_case_368():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'U9lm-S<aj&D'
        var10 = module0.contains_unique_day(var7, var9)
        assert var10 is False
        var11 = '?83$,\ne}'
        var12 = -1131
        var13 = module0.contains_unique_day(var11, var12)
    except BaseException:
        pass


def test_case_369():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '?okk)k<Lr[Bo'
        var4 = 'r|{,'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 458.0
        var16 = 'F4_`lQDM'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'yj6j\\eZ,$0tZ~Z'
        var25 = '@B\tt=xE\n,CidtY'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -1995
        var28 = '1eeMAz-7Q#@o|u;\nP'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = module0.unique_month(var1, var18)
    except BaseException:
        pass


def test_case_370():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2Lc6EhN<%'
        var10 = ' w'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = module0.unique_day(var6, var12)
    except BaseException:
        pass


def test_case_371():
    try:
        var0 = -1995
        var1 = '1eeMAz-7Q#@o|u;\nP'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 2011
        var4 = module0.unique_day(var3, var0)
    except BaseException:
        pass


def test_case_372():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -1995
        var9 = '1eeMAz-7Q#@o|u;\nP'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = True
        var12 = '2ac6 \tO '
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'Xys2;)(y&w=ps([GFHm='
        var15 = 'oFU/E^'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '{ZQD~)vEJYu/'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -169.329504
        var21 = ''
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'AJtm\\C?$lu2'
        var30 = module0.contains_unique_day(var23, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = "c'7E$,97(j(fau'Ij"
        var35 = module0.unique_month(var32, var34)
        assert var35 is False
        var36 = False
        var37 = module0.unique_day(var20, var36)
    except BaseException:
        pass


def test_case_373():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Sh6P0e!Ql!{eGQ@'
        var13 = '?r;P\\T*MZ}RM/b{S%7a'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1995
        var16 = '1eeMAz-7Q#@o|u;\nP'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ',-pI8'
        var19 = 'x75[L'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = '2Lc6EhN<%'
        var25 = ' w'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = '\x0c\\:9H2`y`"'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 458.0
        var31 = 'F4_`lQDM'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = -1391
        var34 = 'O<~#Jc.'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 358.0
        var37 = '}%'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = ',-pI8'
        var40 = 'x75[L'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = '8u:j!{g\\2 $7'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = 'U9lm-S<aj&D'
        var46 = module0.contains_unique_day(var43, var45)
        assert var46 is False
        var47 = module0.contains_unique_day(var0, var27)
    except BaseException:
        pass


def test_case_374():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'jR\x0b>U.'
        var4 = module0.contains_unique_day(var0, var3)
        assert var4 is False
        var5 = '#\x0bqP{=mqAP\x0c>-s!'
        var6 = 'ZeqxS'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = -1420.627
        var9 = '(^dSLBVMDV{~~P>vT]'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = False
        var12 = "7i#c*&b7e,'"
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = True
        var15 = '2ac6 \tO '
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 458.0
        var18 = 'F4_`lQDM'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var21, var21)
        assert var23 is True
        var24 = 163.109
        var25 = -495
        var26 = module0.unique_month(var24, var25)
    except BaseException:
        pass


def test_case_375():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'h6`B*8Q\x0bmb'
        var4 = True
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_376():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -1420.627
        var6 = '(^dSLBVMDV{~~P>vT]'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = ''
        var9 = 'rN/n\r\\M%?%QlTn-dE'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'yj6j\\eZ,$0tZ~Z'
        var15 = '@B\tt=xE\n,CidtY'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "\tkqW{^)u'&7vTWVU1z"
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -1391
        var21 = 'O<~#Jc.'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 918.365449
        var24 = module0.unique_month(var23, var11)
    except BaseException:
        pass


def test_case_377():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1995
        var19 = '1eeMAz-7Q#@o|u;\nP'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = -169.329504
        var28 = ''
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '\tc2d/S'
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = '#\x0bqP{=mqAP\x0c>-s!'
        var39 = 'ZeqxS'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = module0.unique_day(var41, var30)
    except BaseException:
        pass


def test_case_378():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = module0.unique_month(var6, var7)
        assert var12 is False
        var13 = 458.0
        var14 = 'F4_`lQDM'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = None
        var17 = module0.unique_month(var3, var16)
    except BaseException:
        pass


def test_case_379():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = module0.unique_month(var16, var16)
        assert var18 is True
        var19 = -1207
        var20 = module0.unique_month(var0, var19)
    except BaseException:
        pass


def test_case_380():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = -743
        var15 = 'L7\\?+cX~\rnzt6PK'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = module0.contains_unique_day(var14, var12)
        assert var17 is False
        var18 = True
        var19 = '2ac6 \tO '
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'X\x0byh;Z\ny5.y&f"'
        var22 = True
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_381():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = -1995
        var15 = '1eeMAz-7Q#@o|u;\nP'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = '-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = ',-pI8'
        var21 = 'x75[L'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = "c'7E$,97(j(fau'Ij"
        var27 = module0.unique_month(var24, var26)
        assert var27 is False
        var28 = True
        var29 = '\x0c\\:9H2`y`"'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = '\npx(>\niy:jMx{qs\x0b_if'
        var32 = module0.unique_day(var0, var31)
    except BaseException:
        pass


def test_case_382():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1995
        var7 = '1eeMAz-7Q#@o|u;\nP'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Sh6P0e!Ql!{eGQ@'
        var13 = '?r;P\\T*MZ}RM/b{S%7a'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '-'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = '\x0c\\:9H2`y`"'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = module0.unique_day(var16, var21)
    except BaseException:
        pass


def test_case_383():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = False
        var13 = '-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'AJtm\\C?$lu2'
        var22 = module0.contains_unique_day(var15, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -169.329504
        var30 = ''
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '0qc40|dxYHu[W[kRN'
        var34 = module0.unique_day(var32, var33)
    except BaseException:
        pass


def test_case_384():
    try:
        var0 = 36.76
        var1 = 'a^'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_385():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1420.627
        var4 = '(^dSLBVMDV{~~P>vT]'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 358.0
        var10 = '}%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'AJtm\\C?$lu2'
        var19 = module0.contains_unique_day(var12, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Sh6P0e!Ql!{eGQ@'
        var24 = '?r;P\\T*MZ}RM/b{S%7a'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = '\x0c\\:9H2`y`"'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 458.0
        var30 = 'F4_`lQDM'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = '#\x0bqP{=mqAP\x0c>-s!'
        var33 = 'ZeqxS'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = 'GdwW.gxVl\\O$[S7Y\tN}5'
        var39 = False
        var40 = module0.unique_month(var38, var39)
    except BaseException:
        pass


def test_case_386():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var9, var10)
        assert var15 is False
        var16 = None
        var17 = '8u:j!{g\\2 $7'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = "7i#c*&b7e,'"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'AJtm\\C?$lu2'
        var23 = module0.contains_unique_day(var16, var22)
        assert var23 is False
        var24 = ',-pI8'
        var25 = 'x75[L'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'yj6j\\eZ,$0tZ~Z'
        var31 = '@B\tt=xE\n,CidtY'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "\tkqW{^)u'&7vTWVU1z"
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '8u:j!{g\\2 $7'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = "c'7E$,97(j(fau'Ij"
        var40 = module0.unique_month(var37, var39)
        assert var40 is False
        var41 = None
        var42 = 'nf'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 'Xys2;)(y&w=ps([GFHm='
        var45 = 'oFU/E^'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '\x0b'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = -1902
        var51 = '0#dYU>S-d'
        var52 = module0.unique_month(var50, var51)
        assert var52 is False
        var53 = 'l"(mAAb-_BwyFaw'
        var54 = module0.contains_unique_day(var53, var19)
    except BaseException:
        pass


def test_case_387():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = module0.unique_day(var1, var3)
    except BaseException:
        pass


def test_case_388():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'jR\x0b>U.'
        var4 = module0.contains_unique_day(var0, var3)
        assert var4 is False
        var5 = -1995
        var6 = '1eeMAz-7Q#@o|u;\nP'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'yj6j\\eZ,$0tZ~Z'
        var15 = '@B\tt=xE\n,CidtY'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "\tkqW{^)u'&7vTWVU1z"
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = "c'7E$,97(j(fau'Ij"
        var24 = module0.unique_month(var21, var23)
        assert var24 is False
        var25 = 458.0
        var26 = 'F4_`lQDM'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 358.0
        var29 = '}%'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 'Xys2;)(y&w=ps([GFHm='
        var32 = 'oFU/E^'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = '{ZQD~)vEJYu/'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -169.329504
        var38 = ''
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = ',-pI8'
        var41 = 'x75[L'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '\x0b'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = '2Lc6EhN<%'
        var47 = ' w'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = -4244
        var50 = module0.unique_day(var34, var49)
    except BaseException:
        pass


def test_case_389():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 358.0
        var10 = '}%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'yj6j\\eZ,$0tZ~Z'
        var16 = '@B\tt=xE\n,CidtY'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = module0.unique_month(var3, var21)
    except BaseException:
        pass


def test_case_390():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 358.0
        var10 = '}%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 358.0
        var13 = '}%'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'jR\x0b>U.'
        var16 = module0.contains_unique_day(var12, var15)
        assert var16 is False
        var17 = '?okk)k<Lr[Bo'
        var18 = 'r|{,'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = -3007.08
        var21 = module0.unique_month(var20, var9)
    except BaseException:
        pass


def test_case_391():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 458.0
        var6 = 'F4_`lQDM'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = False
        var9 = '-'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = module0.unique_month(var9, var9)
        assert var11 is True
        var12 = '?okk)k<Lr[Bo'
        var13 = 'r|{,'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '#\x0bqP{=mqAP\x0c>-s!'
        var16 = 'ZeqxS'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -1902
        var25 = '0#dYU>S-d'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = ''
        var31 = 'rN/n\r\\M%?%QlTn-dE'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '(gRF1\x0ct%,ad'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = ''
        var37 = 'rN/n\r\\M%?%QlTn-dE'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 358.0
        var40 = '}%'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = 'S/\nNrN'
        var43 = None
        var44 = module0.contains_unique_day(var42, var43)
    except BaseException:
        pass


def test_case_392():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 358.0
        var7 = '}%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = "c'7E$,97(j(fau'Ij"
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = '?okk)k<Lr[Bo'
        var18 = 'r|{,'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = "7i#c*&b7e,'"
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'AJtm\\C?$lu2'
        var27 = module0.contains_unique_day(var20, var26)
        assert var27 is False
        var28 = 3753.1559
        var29 = 'Pxg|'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'Xys2;)(y&w=ps([GFHm='
        var32 = 'oFU/E^'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -1902
        var38 = '0#dYU>S-d'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = ',-pI8'
        var41 = 'x75[L'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '\x0b'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = '2Lc6EhN<%'
        var47 = ' w'
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = module0.unique_month(var37, var6)
    except BaseException:
        pass


def test_case_393():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = "c'7E$,97(j(fau'Ij"
        var12 = module0.unique_month(var9, var11)
        assert var12 is False
        var13 = False
        var14 = '{ZQD~)vEJYu/'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 3753.1559
        var17 = 'Pxg|'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = '?okk)k<Lr[Bo'
        var20 = 'r|{,'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = ',-pI8'
        var23 = 'x75[L'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 358.0
        var26 = '}%'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 'jR\x0b>U.'
        var29 = module0.contains_unique_day(var25, var28)
        assert var29 is False
        var30 = 458.0
        var31 = 'F4_`lQDM'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = None
        var34 = module0.unique_day(var16, var33)
    except BaseException:
        pass


def test_case_394():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = module0.unique_month(var1, var1)
        assert var3 is True
        var4 = True
        var5 = '2ac6 \tO '
        var6 = module0.contains_unique_day(var4, var5)
        assert var6 is False
        var7 = -1420.627
        var8 = '(^dSLBVMDV{~~P>vT]'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = 458.0
        var11 = 'F4_`lQDM'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 'Sh6P0e!Ql!{eGQ@'
        var17 = '?r;P\\T*MZ}RM/b{S%7a'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = ''
        var26 = 'rN/n\r\\M%?%QlTn-dE'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = '(gRF1\x0ct%,ad'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = ',-pI8'
        var32 = 'x75[L'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '8u:j!{g\\2 $7'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = 'yj6j\\eZ,$0tZ~Z'
        var38 = '@B\tt=xE\n,CidtY'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = False
        var41 = "\tkqW{^)u'&7vTWVU1z"
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = module0.contains_unique_day(var40, var19)
    except BaseException:
        pass


def test_case_395():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var4, var4)
        assert var6 is True
        var7 = 358.0
        var8 = '}%'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = 'jR\x0b>U.'
        var11 = module0.contains_unique_day(var7, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_month(var12, var13)
        assert var18 is False
        var19 = False
        var20 = '-'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'Xys2;)(y&w=ps([GFHm='
        var23 = 'oFU/E^'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '\x0b'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = False
        var29 = "7i#c*&b7e,'"
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = '\tc2d/S'
        var32 = module0.unique_month(var29, var31)
        assert var32 is False
        var33 = -743
        var34 = 'L7\\?+cX~\rnzt6PK'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = module0.contains_unique_day(var33, var31)
        assert var36 is False
        var37 = ',-pI8'
        var38 = 'x75[L'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = None
        var41 = '\x0b'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = '2Lc6EhN<%'
        var44 = ' w'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = -1420.627
        var47 = '(^dSLBVMDV{~~P>vT]'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = '\x0b)ftlUmg\t{YY-cd'
        var50 = module0.unique_month(var49, var3)
    except BaseException:
        pass


def test_case_396():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = '?okk)k<Lr[Bo'
        var9 = 'r|{,'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = True
        var12 = '\x0c\\:9H2`y`"'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'AJtm\\C?$lu2'
        var24 = module0.contains_unique_day(var17, var23)
        assert var24 is False
        var25 = -743
        var26 = 'L7\\?+cX~\rnzt6PK'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = True
        var29 = '2ac6 \tO '
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 3743.26387
        var32 = module0.contains_unique_day(var31, var31)
    except BaseException:
        pass


def test_case_397():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -743
        var7 = 'L7\\?+cX~\rnzt6PK'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = True
        var10 = '\x0c\\:9H2`y`"'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '?okk)k<Lr[Bo'
        var13 = 'r|{,'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = '2\tl%'
        var16 = "z9w<<|.FEA{6 mGy}'t"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = "c'7E$,97(j(fau'Ij"
        var22 = module0.unique_month(var19, var21)
        assert var22 is False
        var23 = 'Xys2;)(y&w=ps([GFHm='
        var24 = 'oFU/E^'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = '{ZQD~)vEJYu/'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'YwA'
        var30 = None
        var31 = module0.unique_day(var29, var30)
    except BaseException:
        pass


def test_case_398():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = None
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_399():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'AJtm\\C?$lu2'
        var10 = module0.contains_unique_day(var3, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 'yj6j\\eZ,$0tZ~Z'
        var15 = '@B\tt=xE\n,CidtY'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '#\x0bqP{=mqAP\x0c>-s!'
        var21 = 'ZeqxS'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 358.0
        var24 = '}%'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = 'jR\x0b>U.'
        var27 = module0.contains_unique_day(var23, var26)
        assert var27 is False
        var28 = None
        var29 = '\x0b'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = "<:\n':rK;-cV"
        var32 = module0.contains_unique_day(var31, var23)
    except BaseException:
        pass


def test_case_400():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = '?okk)k<Lr[Bo'
        var9 = 'r|{,'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = -542.43
        var12 = module0.unique_day(var11, var0)
    except BaseException:
        pass


def test_case_401():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = 'nf'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 3753.1559
        var19 = 'Pxg|'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Sh6P0e!Ql!{eGQ@'
        var25 = '?r;P\\T*MZ}RM/b{S%7a'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = False
        var28 = '-'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'Xys2;)(y&w=ps([GFHm='
        var31 = 'oFU/E^'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'Y8'
        var34 = module0.unique_day(var33, var0)
    except BaseException:
        pass


def test_case_402():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '#\x0bqP{=mqAP\x0c>-s!'
        var7 = 'ZeqxS'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'nf'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1420.627
        var13 = '(^dSLBVMDV{~~P>vT]'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = True
        var16 = '2ac6 \tO '
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'yj6j\\eZ,$0tZ~Z'
        var22 = '@B\tt=xE\n,CidtY'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "\tkqW{^)u'&7vTWVU1z"
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = '?okk)k<Lr[Bo'
        var28 = 'r|{,'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = '-'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = module0.unique_month(var31, var31)
        assert var33 is True
        var34 = -743
        var35 = 'L7\\?+cX~\rnzt6PK'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -2043
        var38 = module0.unique_month(var37, var0)
    except BaseException:
        pass


def test_case_403():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '-'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var13, var13)
        assert var15 is True
        var16 = ''
        var17 = 'rN/n\r\\M%?%QlTn-dE'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = module0.unique_month(var7, var0)
    except BaseException:
        pass


def test_case_404():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = "c'7E$,97(j(fau'Ij"
        var15 = module0.unique_month(var12, var14)
        assert var15 is False
        var16 = ''
        var17 = 'rN/n\r\\M%?%QlTn-dE'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = -1420.627
        var20 = '(^dSLBVMDV{~~P>vT]'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = module0.unique_day(var19, var1)
    except BaseException:
        pass


def test_case_405():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = module0.contains_unique_day(var3, var3)
    except BaseException:
        pass


def test_case_406():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '2\tl%'
        var16 = "z9w<<|.FEA{6 mGy}'t"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 458.0
        var22 = 'F4_`lQDM'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '"-+3 k'
        var25 = module0.unique_day(var24, var21)
    except BaseException:
        pass


def test_case_407():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var4, var4)
        assert var6 is True
        var7 = '?okk)k<Lr[Bo'
        var8 = 'r|{,'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = None
        var11 = '8u:j!{g\\2 $7'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 'AJtm\\C?$lu2'
        var17 = module0.contains_unique_day(var10, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = 'rN/n\r\\M%?%QlTn-dE'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '(gRF1\x0ct%,ad'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '^/V;|/%Y,PLj/\\j~Rc(/'
        var28 = 388.333
        var29 = module0.unique_month(var27, var28)
    except BaseException:
        pass


def test_case_408():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = False
        var6 = "7i#c*&b7e,'"
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = 'Sh6P0e!Ql!{eGQ@'
        var9 = '?r;P\\T*MZ}RM/b{S%7a'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 358.0
        var12 = '}%'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = module0.unique_day(var12, var5)
    except BaseException:
        pass


def test_case_409():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 3023.0
        var11 = module0.contains_unique_day(var9, var10)
    except BaseException:
        pass


def test_case_410():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = False
        var15 = '-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = module0.unique_month(var15, var15)
        assert var17 is True
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var21, var22)
        assert var27 is False
        var28 = -2797.67557
        var29 = module0.unique_month(var24, var28)
    except BaseException:
        pass


def test_case_411():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'U9lm-S<aj&D'
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = 'j:\x0bg k^aS&'
        var9 = module0.contains_unique_day(var8, var6)
        assert var9 is False
        var10 = True
        var11 = '2ac6 \tO '
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = ''
        var17 = 'rN/n\r\\M%?%QlTn-dE'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = False
        var20 = '(gRF1\x0ct%,ad'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 3753.1559
        var23 = 'Pxg|'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 'yj6j\\eZ,$0tZ~Z'
        var29 = '@B\tt=xE\n,CidtY'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = "\tkqW{^)u'&7vTWVU1z"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = module0.unique_day(var3, var34)
    except BaseException:
        pass


def test_case_412():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = 'nf'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '\x0b'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = "7i#c*&b7e,'"
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'AJtm\\C?$lu2'
        var18 = module0.contains_unique_day(var11, var17)
        assert var18 is False
        var19 = ',-pI8'
        var20 = 'x75[L'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = '\\pq]~fP0i [%i^E'
        var23 = module0.unique_day(var8, var22)
    except BaseException:
        pass


def test_case_413():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 'j:\x0bg k^aS&'
        var6 = module0.contains_unique_day(var5, var3)
        assert var6 is False
        var7 = None
        var8 = '8u:j!{g\\2 $7'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = 'yj6j\\eZ,$0tZ~Z'
        var11 = '@B\tt=xE\n,CidtY'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = False
        var14 = "\tkqW{^)u'&7vTWVU1z"
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = False
        var17 = '{ZQD~)vEJYu/'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = -1391
        var20 = 'O<~#Jc.'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = "c'7E$,97(j(fau'Ij"
        var26 = module0.unique_month(var23, var25)
        assert var26 is False
        var27 = 358.0
        var28 = '}%'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'jR\x0b>U.'
        var31 = module0.contains_unique_day(var27, var30)
        assert var31 is False
        var32 = -743
        var33 = 'L7\\?+cX~\rnzt6PK'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'Xys2;)(y&w=ps([GFHm='
        var36 = 'oFU/E^'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = False
        var39 = '{ZQD~)vEJYu/'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -169.329504
        var42 = ''
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = ',-pI8'
        var45 = 'x75[L'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = None
        var48 = '\x0b'
        var49 = module0.unique_month(var47, var48)
        assert var49 is False
        var50 = '2Lc6EhN<%'
        var51 = ' w'
        var52 = module0.contains_unique_day(var50, var51)
        assert var52 is False
        var53 = False
        var54 = "7i#c*&b7e,'"
        var55 = module0.contains_unique_day(var53, var54)
        assert var55 is False
        var56 = '\tc2d/S'
        var57 = module0.unique_month(var54, var56)
        assert var57 is False
        var58 = 3079.8
        var59 = module0.contains_unique_day(var58, var22)
    except BaseException:
        pass


def test_case_414():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '-'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = module0.unique_month(var10, var10)
        assert var12 is True
        var13 = ''
        var14 = 'rN/n\r\\M%?%QlTn-dE'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 1793.6
        var17 = module0.unique_month(var16, var16)
    except BaseException:
        pass


def test_case_415():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -743
        var4 = 'L7\\?+cX~\rnzt6PK'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = 'j:\x0bg k^aS&'
        var15 = module0.contains_unique_day(var14, var12)
        assert var15 is False
        var16 = None
        var17 = 'nf'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = ''
        var23 = 'rN/n\r\\M%?%QlTn-dE'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = '(gRF1\x0ct%,ad'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = ''
        var29 = 'rN/n\r\\M%?%QlTn-dE'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = '2\tl%'
        var32 = "z9w<<|.FEA{6 mGy}'t"
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 'oDK~eX)'
        var35 = module0.unique_day(var20, var34)
    except BaseException:
        pass


def test_case_416():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "\tkqW{^)u'&7vTWVU1z"
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1381
        var19 = module0.unique_day(var7, var18)
    except BaseException:
        pass


def test_case_417():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = ',-pI8'
        var16 = 'x75[L'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '\x0b'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '2Lc6EhN<%'
        var22 = ' w'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'yj6j\\eZ,$0tZ~Z'
        var28 = '@B\tt=xE\n,CidtY'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -413
        var31 = module0.unique_day(var30, var12)
    except BaseException:
        pass


def test_case_418():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = 'j:\x0bg k^aS&'
        var15 = module0.contains_unique_day(var14, var12)
        assert var15 is False
        var16 = False
        var17 = '{ZQD~)vEJYu/'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = "7i#c*&b7e,'"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'Sh6P0e!Ql!{eGQ@'
        var23 = '?r;P\\T*MZ}RM/b{S%7a'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = "7i#c*&b7e,'"
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = '\tc2d/S'
        var32 = module0.unique_month(var29, var31)
        assert var32 is False
        var33 = True
        var34 = '2ac6 \tO '
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = None
        var40 = '\x0b'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -1902
        var43 = '0#dYU>S-d'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = 'f^Rl{sN\nV]dOv19l'
        var46 = module0.contains_unique_day(var45, var3)
    except BaseException:
        pass


def test_case_419():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = ''
        var8 = 729.0
        var9 = module0.contains_unique_day(var7, var8)
    except BaseException:
        pass


def test_case_420():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 3866.0716
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_421():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '\x0b'
        var4 = -1762
        var5 = module0.contains_unique_day(var3, var4)
    except BaseException:
        pass


def test_case_422():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1902
        var15 = '0#dYU>S-d'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var17, var18)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'U9lm-S<aj&D'
        var28 = module0.contains_unique_day(var25, var27)
        assert var28 is False
        var29 = 'j:\x0bg k^aS&'
        var30 = module0.contains_unique_day(var29, var27)
        assert var30 is False
        var31 = 'Xys2;)(y&w=ps([GFHm='
        var32 = 'oFU/E^'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -4706
        var35 = module0.unique_day(var3, var34)
    except BaseException:
        pass


def test_case_423():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = "c'7E$,97(j(fau'Ij"
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = False
        var12 = "7i#c*&b7e,'"
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = '\tc2d/S'
        var15 = module0.unique_month(var12, var14)
        assert var15 is False
        var16 = None
        var17 = '8u:j!{g\\2 $7'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = ''
        var20 = 'rN/n\r\\M%?%QlTn-dE'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = False
        var23 = '(gRF1\x0ct%,ad'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = False
        var29 = '{ZQD~)vEJYu/'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = -169.329504
        var32 = ''
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ',-pI8'
        var35 = 'x75[L'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '\x0b'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = '2Lc6EhN<%'
        var41 = ' w'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = None
        var44 = '8u:j!{g\\2 $7'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = False
        var47 = "7i#c*&b7e,'"
        var48 = module0.contains_unique_day(var46, var47)
        assert var48 is False
        var49 = 'AJtm\\C?$lu2'
        var50 = module0.contains_unique_day(var43, var49)
        assert var50 is False
        var51 = False
        var52 = "7i#c*&b7e,'"
        var53 = module0.contains_unique_day(var51, var52)
        assert var53 is False
        var54 = 1845
        var55 = module0.contains_unique_day(var31, var54)
    except BaseException:
        pass


def test_case_424():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var3, var3)
    except BaseException:
        pass


def test_case_425():
    try:
        var0 = -1995
        var1 = '1eeMAz-7Q#@o|u;\nP'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = -743
        var9 = 'L7\\?+cX~\rnzt6PK'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = module0.contains_unique_day(var8, var6)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1902
        var19 = '0#dYU>S-d'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'Xys2;)(y&w=ps([GFHm='
        var22 = 'oFU/E^'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var21, var22)
        assert var27 is False
        var28 = 358.0
        var29 = '}%'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = 'rN/n\r\\M%?%QlTn-dE'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = False
        var38 = '(gRF1\x0ct%,ad'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = -918.0
        var41 = module0.unique_month(var40, var18)
    except BaseException:
        pass


def test_case_426():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '2\tl%'
        var4 = "z9w<<|.FEA{6 mGy}'t"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'yj6j\\eZ,$0tZ~Z'
        var10 = '@B\tt=xE\n,CidtY'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = 'j:\x0bg k^aS&'
        var18 = module0.contains_unique_day(var17, var15)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = "c'7E$,97(j(fau'Ij"
        var23 = module0.unique_month(var20, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'AJtm\\C?$lu2'
        var31 = module0.contains_unique_day(var24, var30)
        assert var31 is False
        var32 = 458.0
        var33 = 'F4_`lQDM'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'Xys2;)(y&w=ps([GFHm='
        var36 = 'oFU/E^'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = 3753.1559
        var39 = 'Pxg|'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'i8cc2'
        var42 = module0.unique_month(var38, var41)
        assert var42 is False
        var43 = 'Xys2;)(y&w=ps([GFHm='
        var44 = 'oFU/E^'
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = -743
        var47 = 'L7\\?+cX~\rnzt6PK'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = -635.23
        var50 = False
        var51 = module0.contains_unique_day(var49, var50)
    except BaseException:
        pass


def test_case_427():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1995
        var7 = '1eeMAz-7Q#@o|u;\nP'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = '\tc2d/S'
        var13 = module0.unique_month(var10, var12)
        assert var13 is False
        var14 = -743
        var15 = 'L7\\?+cX~\rnzt6PK'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = module0.contains_unique_day(var14, var12)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = '?okk)k<Lr[Bo'
        var22 = 'r|{,'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 458.0
        var25 = 'F4_`lQDM'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = ',-pI8'
        var28 = 'x75[L'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = '2\tl%'
        var31 = "z9w<<|.FEA{6 mGy}'t"
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = None
        var34 = '8u:j!{g\\2 $7'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'yj6j\\eZ,$0tZ~Z'
        var37 = '@B\tt=xE\n,CidtY'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = False
        var40 = "\tkqW{^)u'&7vTWVU1z"
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = -2261.5646
        var43 = module0.unique_day(var33, var42)
    except BaseException:
        pass


def test_case_428():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = True
        var4 = '2ac6 \tO '
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = "7i#c*&b7e,'"
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'AJtm\\C?$lu2'
        var22 = module0.contains_unique_day(var15, var21)
        assert var22 is False
        var23 = ',-pI8'
        var24 = 'x75[L'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = '2Lc6EhN<%'
        var30 = ' w'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = 'Xys2;)(y&w=ps([GFHm='
        var33 = 'oFU/E^'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = -1995
        var36 = '1eeMAz-7Q#@o|u;\nP'
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = -743
        var39 = 'L7\\?+cX~\rnzt6PK'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = None
        var42 = '8u:j!{g\\2 $7'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = 'yj6j\\eZ,$0tZ~Z'
        var45 = '@B\tt=xE\n,CidtY'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = '*yT%P(5'
        var48 = -491
        var49 = module0.unique_day(var47, var48)
    except BaseException:
        pass


def test_case_429():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 358.0
        var7 = '}%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'Tk\\\x0bvD{iX&puw,P['
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 3753.1559
        var19 = 'Pxg|'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'AJtm\\C?$lu2'
        var28 = module0.contains_unique_day(var21, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -1420.627
        var33 = '(^dSLBVMDV{~~P>vT]'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = None
        var36 = '8u:j!{g\\2 $7'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = 'rN/n\r\\M%?%QlTn-dE'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = '(gRF1\x0ct%,ad'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = '2\tl%'
        var45 = "z9w<<|.FEA{6 mGy}'t"
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = 3403.8
        var48 = "D\x0b~P7_c0 \n'r\\*k"
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = 1899
        var51 = module0.contains_unique_day(var6, var50)
    except BaseException:
        pass


def test_case_430():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 3753.1559
        var4 = 'Pxg|'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'i8cc2'
        var7 = module0.unique_month(var3, var6)
        assert var7 is False
        var8 = 358.0
        var9 = '}%'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = False
        var15 = "7i#c*&b7e,'"
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 3753.1559
        var24 = 'Pxg|'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = 'Xys2;)(y&w=ps([GFHm='
        var27 = 'oFU/E^'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = '\x0b'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = -1902
        var33 = '0#dYU>S-d'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = -2189.234
        var36 = True
        var37 = module0.unique_day(var35, var36)
    except BaseException:
        pass


def test_case_431():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Sh6P0e!Ql!{eGQ@'
        var7 = '?r;P\\T*MZ}RM/b{S%7a'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '?okk)k<Lr[Bo'
        var13 = 'r|{,'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1420.627
        var16 = '(^dSLBVMDV{~~P>vT]'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 358.0
        var19 = '}%'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'jR\x0b>U.'
        var22 = module0.contains_unique_day(var18, var21)
        assert var22 is False
        var23 = None
        var24 = '8u:j!{g\\2 $7'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = 'AJtm\\C?$lu2'
        var30 = module0.contains_unique_day(var23, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = 'yj6j\\eZ,$0tZ~Z'
        var35 = '@B\tt=xE\n,CidtY'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = -1964.84207
        var38 = module0.unique_month(var18, var37)
    except BaseException:
        pass


def test_case_432():
    try:
        var0 = None
        var1 = '"p25nYJgYM"~@+t]!ne'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_433():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '2\tl%'
        var4 = "z9w<<|.FEA{6 mGy}'t"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 358.0
        var7 = '}%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'nf'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = 'Tk\\\x0bvD{iX&puw,P['
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'yj6j\\eZ,$0tZ~Z'
        var31 = '@B\tt=xE\n,CidtY'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 'Xys2;)(y&w=ps([GFHm='
        var34 = 'oFU/E^'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 3753.1559
        var37 = 'Pxg|'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 'i8cc2'
        var40 = module0.unique_month(var36, var39)
        assert var40 is False
        var41 = True
        var42 = '\x0c\\:9H2`y`"'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = module0.unique_month(var44, var36)
    except BaseException:
        pass


def test_case_434():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = 'nf'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = True
        var21 = '\x0c\\:9H2`y`"'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = "7i#c*&b7e,'"
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = '\tc2d/S'
        var27 = module0.unique_month(var24, var26)
        assert var27 is False
        var28 = -743
        var29 = 'L7\\?+cX~\rnzt6PK'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = module0.contains_unique_day(var28, var26)
        assert var31 is False
        var32 = True
        var33 = module0.unique_day(var3, var32)
    except BaseException:
        pass


def test_case_435():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'nf'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '2\tl%'
        var7 = "z9w<<|.FEA{6 mGy}'t"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = True
        var10 = '\x0c\\:9H2`y`"'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = module0.contains_unique_day(var12, var3)
    except BaseException:
        pass


def test_case_436():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'nf'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = '2Lc6EhN<%'
        var13 = ' w'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = '-'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = module0.unique_month(var25, var25)
        assert var27 is True
        var28 = None
        var29 = '8u:j!{g\\2 $7'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = False
        var32 = '-'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = "c'7E$,97(j(fau'Ij"
        var41 = module0.unique_month(var38, var40)
        assert var41 is False
        var42 = 'X?IIp-'
        var43 = True
        var44 = module0.unique_month(var42, var43)
    except BaseException:
        pass


def test_case_437():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '2\tl%'
        var7 = "z9w<<|.FEA{6 mGy}'t"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '(gRF1\x0ct%,ad'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 358.0
        var19 = '}%'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = None
        var22 = '\x0b'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '\x0b'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = -1902
        var31 = '0#dYU>S-d'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = 358.0
        var34 = '}%'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 'jR\x0b>U.'
        var37 = module0.contains_unique_day(var33, var36)
        assert var37 is False
        var38 = None
        var39 = '8u:j!{g\\2 $7'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = "c'7E$,97(j(fau'Ij"
        var42 = module0.unique_month(var39, var41)
        assert var42 is False
        var43 = -215.0
        var44 = False
        var45 = module0.unique_day(var43, var44)
    except BaseException:
        pass


def test_case_438():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1995
        var4 = '1eeMAz-7Q#@o|u;\nP'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = "c'7E$,97(j(fau'Ij"
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = module0.unique_month(var11, var12)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ',-pI8'
        var22 = 'x75[L'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = ''
        var25 = 'rN/n\r\\M%?%QlTn-dE'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = True
        var28 = '\x0c\\:9H2`y`"'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = False
        var31 = module0.contains_unique_day(var1, var30)
    except BaseException:
        pass


def test_case_439():
    try:
        var0 = 3852
        var1 = False
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_440():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1420.627
        var7 = '(^dSLBVMDV{~~P>vT]'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 3753.1559
        var10 = 'Pxg|'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = True
        var13 = '2ac6 \tO '
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 358.0
        var16 = '}%'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -1391
        var19 = 'O<~#Jc.'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = module0.unique_day(var18, var3)
    except BaseException:
        pass


def test_case_441():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = 'nf'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = '\tc2d/S'
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = 358.0
        var27 = '}%'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'jR\x0b>U.'
        var30 = module0.contains_unique_day(var26, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var29, var15)
    except BaseException:
        pass


def test_case_442():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = True
        var16 = 'lAfR/I\x0cJ/ DO?%KgM'
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_443():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = "c'7E$,97(j(fau'Ij"
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 3753.1559
        var12 = 'Pxg|'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '-'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = module0.unique_month(var15, var15)
        assert var17 is True
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = 'U9lm-S<aj&D'
        var22 = module0.contains_unique_day(var19, var21)
        assert var22 is False
        var23 = 'j:\x0bg k^aS&'
        var24 = module0.contains_unique_day(var23, var21)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = True
        var31 = '2ac6 \tO '
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 552
        var34 = module0.unique_month(var33, var6)
    except BaseException:
        pass


def test_case_444():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'i8cc2'
        var10 = module0.unique_month(var6, var9)
        assert var10 is False
        var11 = module0.unique_day(var0, var6)
    except BaseException:
        pass


def test_case_445():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -931
        var7 = False
        var8 = module0.contains_unique_day(var6, var7)
    except BaseException:
        pass


def test_case_446():
    try:
        var0 = True
        var1 = '\x0c\\:9H2`y`"'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = ',-pI8'
        var7 = 'x75[L'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 564.14
        var10 = False
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_447():
    try:
        var0 = 'AU,>3Epo-r^^'
        var1 = -1301
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_448():
    try:
        var0 = None
        var1 = '\x0b'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1420.627
        var4 = '(^dSLBVMDV{~~P>vT]'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'AJtm\\C?$lu2'
        var13 = module0.contains_unique_day(var6, var12)
        assert var13 is False
        var14 = -1391
        var15 = 'O<~#Jc.'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = module0.unique_day(var14, var9)
    except BaseException:
        pass


def test_case_449():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1995
        var7 = '1eeMAz-7Q#@o|u;\nP'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = 'rN/n\r\\M%?%QlTn-dE'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 3753.1559
        var19 = 'Pxg|'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 'i8cc2'
        var22 = module0.unique_month(var18, var21)
        assert var22 is False
        var23 = module0.unique_day(var18, var12)
    except BaseException:
        pass


def test_case_450():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'F.&v'
        var10 = 759
        var11 = module0.unique_day(var9, var10)
    except BaseException:
        pass


def test_case_451():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = "c'7E$,97(j(fau'Ij"
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = ''
        var9 = 'rN/n\r\\M%?%QlTn-dE'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 3753.1559
        var15 = 'Pxg|'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'i8cc2'
        var18 = module0.unique_month(var14, var17)
        assert var18 is False
        var19 = None
        var20 = '\x0b'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = 458.0
        var23 = 'F4_`lQDM'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = '{ZQD~)vEJYu/'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.contains_unique_day(var11, var19)
    except BaseException:
        pass


def test_case_452():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'AJtm\\C?$lu2'
        var10 = module0.contains_unique_day(var3, var9)
        assert var10 is False
        var11 = False
        var12 = '-'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = module0.contains_unique_day(var14, var6)
    except BaseException:
        pass


def test_case_453():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = '2ac6 \tO '
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '-'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var7, var7)
        assert var9 is True
        var10 = False
        var11 = '{ZQD~)vEJYu/'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -743
        var14 = 'L7\\?+cX~\rnzt6PK'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = None
        var17 = '8u:j!{g\\2 $7'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = ''
        var20 = 'rN/n\r\\M%?%QlTn-dE'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = False
        var23 = '(gRF1\x0ct%,ad'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = None
        var29 = '\x0b'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = -1902
        var32 = '0#dYU>S-d'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = None
        var35 = '\x0b'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = 'yj6j\\eZ,$0tZ~Z'
        var41 = '@B\tt=xE\n,CidtY'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = -862.409
        var44 = 206.301
        var45 = module0.contains_unique_day(var43, var44)
    except BaseException:
        pass


def test_case_454():
    try:
        var0 = -3141
        var1 = -2122.38
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_455():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'U9lm-S<aj&D'
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 3753.1559
        var12 = 'Pxg|'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = 'i8cc2'
        var15 = module0.unique_month(var11, var14)
        assert var15 is False
        var16 = '2\tl%'
        var17 = "z9w<<|.FEA{6 mGy}'t"
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = ''
        var20 = 'rN/n\r\\M%?%QlTn-dE'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 'Xys2;)(y&w=ps([GFHm='
        var23 = 'oFU/E^'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '8u:j!{g\\2 $7'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.unique_month(var22, var23)
        assert var28 is False
        var29 = False
        var30 = '-'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = module0.unique_month(var30, var30)
        assert var32 is True
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '\tc2d/S'
        var37 = module0.unique_month(var34, var36)
        assert var37 is False
        var38 = -743
        var39 = 'L7\\?+cX~\rnzt6PK'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = module0.contains_unique_day(var38, var36)
        assert var41 is False
        var42 = False
        var43 = '{ZQD~)vEJYu/'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = True
        var46 = module0.unique_day(var45, var38)
    except BaseException:
        pass


def test_case_456():
    try:
        var0 = -594
        var1 = ',TS_R}g\tT'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_457():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = 'j:\x0bg k^aS&'
        var6 = module0.contains_unique_day(var5, var3)
        assert var6 is False
        var7 = 1184
        var8 = 579.0
        var9 = module0.contains_unique_day(var7, var8)
    except BaseException:
        pass


def test_case_458():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 'yihGpZKBS)k6\r?|'
        var6 = 3015
        var7 = module0.unique_month(var5, var6)
    except BaseException:
        pass


def test_case_459():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = 'j:\x0bg k^aS&'
        var18 = module0.contains_unique_day(var17, var15)
        assert var18 is False
        var19 = -743
        var20 = 'L7\\?+cX~\rnzt6PK'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = 3753.1559
        var23 = 'Pxg|'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = '\tc2d/S'
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = -743
        var36 = 'L7\\?+cX~\rnzt6PK'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = module0.contains_unique_day(var35, var33)
        assert var38 is False
        var39 = -1420.627
        var40 = '(^dSLBVMDV{~~P>vT]'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = False
        var43 = module0.contains_unique_day(var35, var42)
    except BaseException:
        pass


def test_case_460():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 3753.1559
        var4 = 'Pxg|'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'i8cc2'
        var7 = module0.unique_month(var3, var6)
        assert var7 is False
        var8 = 3753.1559
        var9 = 'Pxg|'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = False
        var12 = '{ZQD~)vEJYu/'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1420.627
        var15 = '(^dSLBVMDV{~~P>vT]'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 'yj6j\\eZ,$0tZ~Z'
        var21 = '@B\tt=xE\n,CidtY'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = "\tkqW{^)u'&7vTWVU1z"
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = '2\tl%'
        var27 = "z9w<<|.FEA{6 mGy}'t"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '\x0b'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = -1902
        var36 = '0#dYU>S-d'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = True
        var39 = module0.unique_day(var11, var38)
    except BaseException:
        pass


def test_case_461():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = False
        var11 = '{ZQD~)vEJYu/'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = 'Xys2;)(y&w=ps([GFHm='
        var14 = 'oFU/E^'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = None
        var17 = '\x0b'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = -1902
        var20 = '0#dYU>S-d'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -743
        var23 = 'L7\\?+cX~\rnzt6PK'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = ',-pI8'
        var31 = 'x75[L'
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '\tc2d/S'
        var37 = module0.unique_month(var34, var36)
        assert var37 is False
        var38 = -743
        var39 = 'L7\\?+cX~\rnzt6PK'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = module0.contains_unique_day(var38, var36)
        assert var41 is False
        var42 = 1945.4
        var43 = module0.unique_month(var42, var10)
    except BaseException:
        pass


def test_case_462():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -1420.627
        var6 = '(^dSLBVMDV{~~P>vT]'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '\tc2d/S'
        var12 = module0.unique_month(var9, var11)
        assert var12 is False
        var13 = False
        var14 = '-'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = module0.unique_month(var14, var14)
        assert var16 is True
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 'U9lm-S<aj&D'
        var21 = module0.contains_unique_day(var18, var20)
        assert var21 is False
        var22 = -2807
        var23 = module0.unique_month(var0, var22)
    except BaseException:
        pass


def test_case_463():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 358.0
        var13 = '}%'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = 'j:\x0bg k^aS&'
        var21 = module0.contains_unique_day(var20, var18)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = 'Xys2;)(y&w=ps([GFHm='
        var26 = 'oFU/E^'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 3753.1559
        var29 = 'Pxg|'
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = 'i8cc2'
        var32 = module0.unique_month(var28, var31)
        assert var32 is False
        var33 = 3753.1559
        var34 = 'Pxg|'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'Xys2;)(y&w=ps([GFHm='
        var37 = 'oFU/E^'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = None
        var40 = '8u:j!{g\\2 $7'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = module0.unique_month(var36, var37)
        assert var42 is False
        var43 = 'c'
        var44 = module0.unique_month(var43, var43)
        assert var44 is True
        var45 = -1995
        var46 = '1eeMAz-7Q#@o|u;\nP'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = module0.unique_day(var45, var45)
    except BaseException:
        pass


def test_case_464():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ',-pI8'
        var13 = 'x75[L'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '\x0b'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = '2Lc6EhN<%'
        var19 = ' w'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Xys2;)(y&w=ps([GFHm='
        var25 = 'oFU/E^'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 3753.1559
        var28 = 'Pxg|'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = 'i8cc2'
        var31 = module0.unique_month(var27, var30)
        assert var31 is False
        var32 = '?okk)k<Lr[Bo'
        var33 = 'r|{,'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'Xys2;)(y&w=ps([GFHm='
        var36 = 'oFU/E^'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = None
        var39 = '\x0b'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -1902
        var42 = '0#dYU>S-d'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = '#\x0bqP{=mqAP\x0c>-s!'
        var45 = 'ZeqxS'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = None
        var48 = -2119.0
        var49 = module0.unique_day(var47, var48)
    except BaseException:
        pass


def test_case_465():
    try:
        var0 = True
        var1 = '2ac6 \tO '
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 3753.1559
        var4 = 'Pxg|'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = '\tc2d/S'
        var10 = module0.unique_month(var7, var9)
        assert var10 is False
        var11 = 'c'
        var12 = module0.unique_month(var11, var11)
        assert var12 is True
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = 'Sh6P0e!Ql!{eGQ@'
        var17 = '?r;P\\T*MZ}RM/b{S%7a'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = 'Xys2;)(y&w=ps([GFHm='
        var20 = 'oFU/E^'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = False
        var23 = '{ZQD~)vEJYu/'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = -169.329504
        var26 = ''
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = 358.0
        var29 = '}%'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = "7i#c*&b7e,'"
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '\tc2d/S'
        var38 = module0.unique_month(var35, var37)
        assert var38 is False
        var39 = -743
        var40 = 'L7\\?+cX~\rnzt6PK'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = module0.contains_unique_day(var39, var37)
        assert var42 is False
        var43 = '2\tl%'
        var44 = "z9w<<|.FEA{6 mGy}'t"
        var45 = module0.unique_month(var43, var44)
        assert var45 is False
        var46 = True
        var47 = module0.contains_unique_day(var46, var39)
    except BaseException:
        pass


def test_case_466():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '+p_g--\x0c<GRH3u'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '{ZQD~)vEJYu/'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -169.329504
        var22 = ''
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 358.0
        var25 = '}%'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'L 7#%,y3sy*\rKgh\x0cny'
        var28 = True
        var29 = module0.unique_month(var27, var28)
    except BaseException:
        pass


def test_case_467():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -169.329504
        var13 = ''
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '+p_g--\x0c<GRH3u'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.unique_day(var9, var12)
    except BaseException:
        pass


def test_case_468():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1420.627
        var10 = '(^dSLBVMDV{~~P>vT]'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Qe |h4dv74fhlb2$'
        var13 = -674
        var14 = module0.unique_month(var12, var13)
    except BaseException:
        pass


def test_case_469():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'jR\x0b>U.'
        var4 = module0.contains_unique_day(var0, var3)
        assert var4 is False
        var5 = '2\tl%'
        var6 = "z9w<<|.FEA{6 mGy}'t"
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = 3403.8
        var9 = "D\x0b~P7_c0 \n'r\\*k"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '1'
        var12 = False
        var13 = module0.contains_unique_day(var11, var12)
    except BaseException:
        pass


def test_case_470():
    try:
        var0 = False
        var1 = '{ZQD~)vEJYu/'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = "c'7E$,97(j(fau'Ij"
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = '\tc2d/S'
        var12 = module0.unique_month(var9, var11)
        assert var12 is False
        var13 = -743
        var14 = 'L7\\?+cX~\rnzt6PK'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = module0.contains_unique_day(var13, var11)
        assert var16 is False
        var17 = 'c'
        var18 = module0.unique_month(var17, var17)
        assert var18 is True
        var19 = 'hw>^VW9D'
        var20 = module0.unique_day(var19, var9)
    except BaseException:
        pass


def test_case_471():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = 458.0
        var8 = 'F4_`lQDM'
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = False
        var11 = '-'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = module0.unique_month(var11, var11)
        assert var13 is True
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = "c'7E$,97(j(fau'Ij"
        var18 = module0.unique_month(var15, var17)
        assert var18 is False
        var19 = ''
        var20 = 'rN/n\r\\M%?%QlTn-dE'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = 2837
        var23 = False
        var24 = module0.unique_month(var22, var23)
    except BaseException:
        pass


def test_case_472():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'AJtm\\C?$lu2'
        var7 = module0.contains_unique_day(var0, var6)
        assert var7 is False
        var8 = 'Xys2;)(y&w=ps([GFHm='
        var9 = 'oFU/E^'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -1902
        var15 = '0#dYU>S-d'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 358.0
        var18 = '}%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = '?okk)k<Lr[Bo'
        var21 = 'r|{,'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = True
        var24 = '2ac6 \tO '
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = -1420.627
        var27 = '(^dSLBVMDV{~~P>vT]'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -1391
        var30 = 'O<~#Jc.'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = 'nf'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = False
        var36 = '{ZQD~)vEJYu/'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = False
        var39 = "7i#c*&b7e,'"
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = 'Tk\\\x0bvD{iX&puw,P['
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 382.769193
        var45 = module0.contains_unique_day(var41, var44)
    except BaseException:
        pass


def test_case_473():
    try:
        var0 = -1995
        var1 = '1eeMAz-7Q#@o|u;\nP'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'i8cc2'
        var10 = module0.unique_month(var6, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = ',-pI8'
        var15 = 'x75[L'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = '`p\r\n%``HZ)7}lN,lQ>'
        var18 = None
        var19 = module0.contains_unique_day(var17, var18)
    except BaseException:
        pass


def test_case_474():
    try:
        var0 = True
        var1 = '\x0c\\:9H2`y`"'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 708
        var4 = '[z:zrL]rxLv6F,p+3UG'
        var5 = module0.unique_day(var3, var4)
    except BaseException:
        pass


def test_case_475():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Sh6P0e!Ql!{eGQ@'
        var4 = '?r;P\\T*MZ}RM/b{S%7a'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -1391
        var7 = 'O<~#Jc.'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = -1206.1194
        var10 = module0.unique_day(var6, var9)
    except BaseException:
        pass


def test_case_476():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '{ZQD~)vEJYu/'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -169.329504
        var16 = ''
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ''
        var19 = 'rN/n\r\\M%?%QlTn-dE'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 358.0
        var22 = '}%'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'U9lm-S<aj&D'
        var28 = module0.contains_unique_day(var25, var27)
        assert var28 is False
        var29 = 'j:\x0bg k^aS&'
        var30 = module0.contains_unique_day(var29, var27)
        assert var30 is False
        var31 = '?okk)k<Lr[Bo'
        var32 = 'r|{,'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = "7i#c*&b7e,'"
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = '\tc2d/S'
        var38 = module0.unique_month(var35, var37)
        assert var38 is False
        var39 = 'Xys2;)(y&w=ps([GFHm='
        var40 = 'oFU/E^'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = None
        var43 = '+p_g--\x0c<GRH3u'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = 'tcrM899SPn@'
        var46 = False
        var47 = module0.unique_day(var45, var46)
    except BaseException:
        pass


def test_case_477():
    try:
        var0 = True
        var1 = '\x0c\\:9H2`y`"'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 458.0
        var4 = 'F4_`lQDM'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -615.93
        var7 = False
        var8 = module0.unique_month(var6, var7)
    except BaseException:
        pass


def test_case_478():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 829.847526
        var4 = True
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_479():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '#\x0bqP{=mqAP\x0c>-s!'
        var4 = 'ZeqxS'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = ',-pI8'
        var15 = 'x75[L'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'Xys2;)(y&w=ps([GFHm='
        var18 = 'oFU/E^'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = '-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var21, var21)
        assert var23 is True
        var24 = -1399.19
        var25 = 679
        var26 = module0.unique_month(var24, var25)
    except BaseException:
        pass


def test_case_480():
    try:
        var0 = True
        var1 = '\x0c\\:9H2`y`"'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 1657.906
        var13 = module0.unique_day(var12, var7)
    except BaseException:
        pass


def test_case_481():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1420.627
        var4 = '(^dSLBVMDV{~~P>vT]'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2\tl%'
        var7 = "z9w<<|.FEA{6 mGy}'t"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ',-pI8'
        var10 = 'x75[L'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 458.0
        var13 = 'F4_`lQDM'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = 'yj6j\\eZ,$0tZ~Z'
        var24 = '@B\tt=xE\n,CidtY'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "\tkqW{^)u'&7vTWVU1z"
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = ']vbiGx'
        var30 = module0.unique_month(var29, var20)
    except BaseException:
        pass


def test_case_482():
    try:
        var0 = None
        var1 = 'nf'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = -1391
        var16 = 'O<~#Jc.'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = 'rN/n\r\\M%?%QlTn-dE'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = None
        var25 = '8u:j!{g\\2 $7'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = 'U9lm-S<aj&D'
        var28 = module0.contains_unique_day(var25, var27)
        assert var28 is False
        var29 = -1718
        var30 = module0.unique_day(var29, var0)
    except BaseException:
        pass


def test_case_483():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = 458.0
        var11 = 'F4_`lQDM'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = 358.0
        var14 = '}%'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'jR\x0b>U.'
        var17 = module0.contains_unique_day(var13, var16)
        assert var17 is False
        var18 = -5145
        var19 = module0.contains_unique_day(var16, var18)
    except BaseException:
        pass


def test_case_484():
    try:
        var0 = 3753.1559
        var1 = 'Pxg|'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'i8cc2'
        var10 = module0.unique_month(var6, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = "c'7E$,97(j(fau'Ij"
        var15 = module0.unique_month(var12, var14)
        assert var15 is False
        var16 = '#\x0bqP{=mqAP\x0c>-s!'
        var17 = 'ZeqxS'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = False
        var20 = "7i#c*&b7e,'"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = '\tc2d/S'
        var23 = module0.unique_month(var20, var22)
        assert var23 is False
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = False
        var28 = "7i#c*&b7e,'"
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = 'Tk\\\x0bvD{iX&puw,P['
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = False
        var34 = '-'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = None
        var37 = '8u:j!{g\\2 $7'
        var38 = module0.unique_month(var36, var37)
        assert var38 is False
        var39 = 'U9lm-S<aj&D'
        var40 = module0.contains_unique_day(var37, var39)
        assert var40 is False
        var41 = 't!|b|w+,nuA/j~Wa;9'
        var42 = module0.contains_unique_day(var41, var19)
    except BaseException:
        pass


def test_case_485():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var0, var1)
        assert var6 is False
        var7 = False
        var8 = "7i#c*&b7e,'"
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = '\tc2d/S'
        var11 = module0.unique_month(var8, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = module0.contains_unique_day(var12, var10)
        assert var15 is False
        var16 = 'Xys2;)(y&w=ps([GFHm='
        var17 = 'oFU/E^'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = False
        var20 = '{ZQD~)vEJYu/'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = -169.329504
        var23 = ''
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = 3753.1559
        var26 = 'Pxg|'
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '2\tl%'
        var29 = "z9w<<|.FEA{6 mGy}'t"
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 3403.8
        var32 = "D\x0b~P7_c0 \n'r\\*k"
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = 'rN/n\r\\M%?%QlTn-dE'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = module0.unique_month(var12, var25)
    except BaseException:
        pass


def test_case_486():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var4, var4)
        assert var6 is True
        var7 = None
        var8 = '8u:j!{g\\2 $7'
        var9 = module0.unique_month(var7, var8)
        assert var9 is False
        var10 = False
        var11 = "7i#c*&b7e,'"
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = 'AJtm\\C?$lu2'
        var14 = module0.contains_unique_day(var7, var13)
        assert var14 is False
        var15 = 'o.8Wb=b6L'
        var16 = -1931.0
        var17 = module0.unique_month(var15, var16)
    except BaseException:
        pass


def test_case_487():
    try:
        var0 = "IBob9}ht\tcUrK0}J'SYX"
        var1 = '`??q|H%|s'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_488():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = module0.unique_month(var1, var1)
        assert var3 is True
        var4 = False
        var5 = '{ZQD~)vEJYu/'
        var6 = module0.unique_month(var4, var5)
        assert var6 is False
        var7 = False
        var8 = "7i#c*&b7e,'"
        var9 = module0.contains_unique_day(var7, var8)
        assert var9 is False
        var10 = False
        var11 = 'Tk\\\x0bvD{iX&puw,P['
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = 'nf'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = '2\tl%'
        var17 = "z9w<<|.FEA{6 mGy}'t"
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = 3403.8
        var20 = "D\x0b~P7_c0 \n'r\\*k"
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '+p_g--\x0c<GRH3u'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.unique_month(var19, var22)
    except BaseException:
        pass


def test_case_489():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = 'U9lm-S<aj&D'
        var9 = module0.contains_unique_day(var6, var8)
        assert var9 is False
        var10 = 'j:\x0bg k^aS&'
        var11 = module0.contains_unique_day(var10, var8)
        assert var11 is False
        var12 = 831
        var13 = 752
        var14 = module0.contains_unique_day(var12, var13)
    except BaseException:
        pass


def test_case_490():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = '2\tl%'
        var10 = "z9w<<|.FEA{6 mGy}'t"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 3403.8
        var13 = "D\x0b~P7_c0 \n'r\\*k"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = module0.unique_month(var0, var5)
    except BaseException:
        pass


def test_case_491():
    try:
        var0 = False
        var1 = -1024
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_492():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 3753.1559
        var4 = 'Pxg|'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = ''
        var10 = 'rN/n\r\\M%?%QlTn-dE'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = '(gRF1\x0ct%,ad'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = 'U9lm-S<aj&D'
        var19 = module0.contains_unique_day(var16, var18)
        assert var19 is False
        var20 = False
        var21 = '-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var21, var21)
        assert var23 is True
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = 'yj6j\\eZ,$0tZ~Z'
        var31 = '@B\tt=xE\n,CidtY'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = -146
        var34 = '6'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = '#n~*96+=[jT'
        var37 = module0.unique_day(var28, var36)
    except BaseException:
        pass


def test_case_493():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = module0.unique_day(var1, var3)
    except BaseException:
        pass


def test_case_494():
    try:
        var0 = 1270
        var1 = False
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_495():
    try:
        var0 = ''
        var1 = 'rN/n\r\\M%?%QlTn-dE'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '\x0b'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = -1902
        var10 = '0#dYU>S-d'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = True
        var18 = '\x0c\\:9H2`y`"'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = "c'7E$,97(j(fau'Ij"
        var24 = module0.unique_month(var21, var23)
        assert var24 is False
        var25 = 358.0
        var26 = '}%'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = module0.unique_month(var20, var20)
    except BaseException:
        pass


def test_case_496():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = '2\tl%'
        var4 = "z9w<<|.FEA{6 mGy}'t"
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3403.8
        var7 = "D\x0b~P7_c0 \n'r\\*k"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 358.0
        var10 = '}%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'jR\x0b>U.'
        var13 = module0.contains_unique_day(var9, var12)
        assert var13 is False
        var14 = False
        var15 = module0.unique_day(var6, var14)
    except BaseException:
        pass


def test_case_497():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = 'nf'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Sh6P0e!Ql!{eGQ@'
        var16 = '?r;P\\T*MZ}RM/b{S%7a'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = ':;F%;<o>7[iK\x0c]n\t~s_'
        var19 = True
        var20 = module0.unique_month(var18, var19)
    except BaseException:
        pass


def test_case_498():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 358.0
        var10 = '}%'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'jR\x0b>U.'
        var13 = module0.contains_unique_day(var9, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = 'HO(Q3,x7gr-=G,FH1Fsk'
        var21 = module0.unique_month(var20, var17)
    except BaseException:
        pass


def test_case_499():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 358.0
        var6 = '}%'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = 'nf'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = 3753.1559
        var15 = 'Pxg|'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = False
        var18 = module0.contains_unique_day(var8, var17)
    except BaseException:
        pass


def test_case_500():
    try:
        var0 = None
        var1 = -272.97
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_501():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 3753.1559
        var6 = 'Pxg|'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = -1995
        var9 = '1eeMAz-7Q#@o|u;\nP'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = None
        var12 = module0.contains_unique_day(var11, var5)
    except BaseException:
        pass


def test_case_502():
    try:
        var0 = 1595
        var1 = None
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_503():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2Lc6EhN<%'
        var7 = ' w'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'yj6j\\eZ,$0tZ~Z'
        var13 = '@B\tt=xE\n,CidtY'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = False
        var17 = module0.unique_day(var15, var16)
    except BaseException:
        pass


def test_case_504():
    try:
        var0 = -1995
        var1 = '1eeMAz-7Q#@o|u;\nP'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = module0.unique_month(var0, var0)
    except BaseException:
        pass


def test_case_505():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = False
        var6 = "7i#c*&b7e,'"
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = '\tc2d/S'
        var9 = module0.unique_month(var6, var8)
        assert var9 is False
        var10 = ',-pI8'
        var11 = 'x75[L'
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = None
        var14 = '\x0b'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = '2Lc6EhN<%'
        var17 = ' w'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = True
        var20 = '2ac6 \tO '
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = None
        var23 = '8u:j!{g\\2 $7'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = None
        var26 = '\x0b'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = '?okk)k<Lr[Bo'
        var29 = 'r|{,'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = 358.0
        var32 = '}%'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = -1995
        var35 = '1eeMAz-7Q#@o|u;\nP'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = ',-pI8'
        var38 = 'x75[L'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = 1614
        var41 = module0.unique_day(var40, var31)
    except BaseException:
        pass


def test_case_506():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = -1420.627
        var14 = '(^dSLBVMDV{~~P>vT]'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = -146
        var17 = '6'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = None
        var20 = module0.unique_day(var19, var9)
    except BaseException:
        pass


def test_case_507():
    try:
        var0 = None
        var1 = 383
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_508():
    try:
        var0 = 358.0
        var1 = '}%'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'jR\x0b>U.'
        var4 = module0.contains_unique_day(var0, var3)
        assert var4 is False
        var5 = True
        var6 = '2ac6 \tO '
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = 'rN/n\r\\M%?%QlTn-dE'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '(gRF1\x0ct%,ad'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = 'c'
        var18 = module0.unique_month(var17, var17)
        assert var18 is True
        var19 = False
        var20 = '-'
        var21 = module0.contains_unique_day(var19, var20)
        assert var21 is False
        var22 = module0.unique_month(var20, var20)
        assert var22 is True
        var23 = None
        var24 = '+p_g--\x0c<GRH3u'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = '?okk)k<Lr[Bo'
        var27 = 'r|{,'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = None
        var30 = module0.contains_unique_day(var8, var29)
    except BaseException:
        pass


def test_case_509():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = '2\tl%'
        var10 = "z9w<<|.FEA{6 mGy}'t"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 3403.8
        var13 = "D\x0b~P7_c0 \n'r\\*k"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'Xys2;)(y&w=ps([GFHm='
        var16 = 'oFU/E^'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var15, var16)
        assert var21 is False
        var22 = False
        var23 = '-'
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = module0.unique_month(var23, var23)
        assert var25 is True
        var26 = ',-pI8'
        var27 = 'x75[L'
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = "7i#c*&b7e,'"
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 'yj6j\\eZ,$0tZ~Z'
        var36 = '@B\tt=xE\n,CidtY'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = False
        var39 = "\tkqW{^)u'&7vTWVU1z"
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = True
        var42 = '\x0c\\:9H2`y`"'
        var43 = module0.unique_month(var41, var42)
        assert var43 is False
        var44 = False
        var45 = '{ZQD~)vEJYu/'
        var46 = module0.unique_month(var44, var45)
        assert var46 is False
        var47 = False
        var48 = "7i#c*&b7e,'"
        var49 = module0.contains_unique_day(var47, var48)
        assert var49 is False
        var50 = False
        var51 = 'Tk\\\x0bvD{iX&puw,P['
        var52 = module0.contains_unique_day(var50, var51)
        assert var52 is False
        var53 = module0.contains_unique_day(var23, var12)
    except BaseException:
        pass


def test_case_510():
    try:
        var0 = None
        var1 = -662
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_511():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '?okk)k<Lr[Bo'
        var7 = 'r|{,'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 'Xys2;)(y&w=ps([GFHm='
        var10 = 'oFU/E^'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 3753.1559
        var13 = 'Pxg|'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 'i8cc2'
        var16 = module0.unique_month(var12, var15)
        assert var16 is False
        var17 = module0.contains_unique_day(var3, var3)
    except BaseException:
        pass


def test_case_512():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1995
        var4 = '1eeMAz-7Q#@o|u;\nP'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '(gRF1\x0ct%,ad'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = None
        var19 = '8u:j!{g\\2 $7'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'AJtm\\C?$lu2'
        var25 = module0.contains_unique_day(var18, var24)
        assert var25 is False
        var26 = None
        var27 = '\x0b'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = -743
        var30 = 'L7\\?+cX~\rnzt6PK'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = False
        var33 = '{ZQD~)vEJYu/'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = False
        var36 = "7i#c*&b7e,'"
        var37 = module0.contains_unique_day(var35, var36)
        assert var37 is False
        var38 = False
        var39 = 'Tk\\\x0bvD{iX&puw,P['
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = 'T'
        var42 = module0.contains_unique_day(var41, var15)
    except BaseException:
        pass


def test_case_513():
    try:
        var0 = 863
        var1 = -2835.01694
        var2 = module0.unique_month(var0, var1)
    except BaseException:
        pass


def test_case_514():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "\tkqW{^)u'&7vTWVU1z"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "7i#c*&b7e,'"
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = -1420.627
        var13 = '(^dSLBVMDV{~~P>vT]'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = None
        var16 = '8u:j!{g\\2 $7'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = "c'7E$,97(j(fau'Ij"
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = False
        var21 = '{ZQD~)vEJYu/'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = "7i#c*&b7e,'"
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = False
        var27 = 'Tk\\\x0bvD{iX&puw,P['
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -266.1681
        var30 = module0.unique_month(var29, var15)
    except BaseException:
        pass


def test_case_515():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = True
        var4 = '2ac6 \tO '
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '2\tl%'
        var7 = "z9w<<|.FEA{6 mGy}'t"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = 'Tk\\\x0bvD{iX&puw,P['
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Xys2;)(y&w=ps([GFHm='
        var19 = 'oFU/E^'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '{ZQD~)vEJYu/'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = -169.329504
        var25 = ''
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1995
        var28 = '1eeMAz-7Q#@o|u;\nP'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = False
        var31 = "7i#c*&b7e,'"
        var32 = module0.contains_unique_day(var30, var31)
        assert var32 is False
        var33 = 'Sh6P0e!Ql!{eGQ@'
        var34 = '?r;P\\T*MZ}RM/b{S%7a'
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 3753.1559
        var37 = 'Pxg|'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = ',-pI8'
        var40 = 'x75[L'
        var41 = module0.contains_unique_day(var39, var40)
        assert var41 is False
        var42 = None
        var43 = '\x0b'
        var44 = module0.unique_month(var42, var43)
        assert var44 is False
        var45 = '2Lc6EhN<%'
        var46 = ' w'
        var47 = module0.contains_unique_day(var45, var46)
        assert var47 is False
        var48 = None
        var49 = '+p_g--\x0c<GRH3u'
        var50 = module0.unique_month(var48, var49)
        assert var50 is False
        var51 = True
        var52 = module0.contains_unique_day(var51, var9)
    except BaseException:
        pass


def test_case_516():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 458.0
        var7 = 'F4_`lQDM'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = ''
        var13 = 'rN/n\r\\M%?%QlTn-dE'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '(gRF1\x0ct%,ad'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = -1995
        var19 = '1eeMAz-7Q#@o|u;\nP'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = '-'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = module0.unique_month(var22, var22)
        assert var24 is True
        var25 = 358.0
        var26 = '}%'
        var27 = module0.unique_month(var25, var26)
        assert var27 is False
        var28 = 'Xys2;)(y&w=ps([GFHm='
        var29 = 'oFU/E^'
        var30 = module0.unique_month(var28, var29)
        assert var30 is False
        var31 = None
        var32 = '8u:j!{g\\2 $7'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = False
        var35 = "7i#c*&b7e,'"
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = 'AJtm\\C?$lu2'
        var38 = module0.contains_unique_day(var31, var37)
        assert var38 is False
        var39 = None
        var40 = '+p_g--\x0c<GRH3u'
        var41 = module0.unique_month(var39, var40)
        assert var41 is False
        var42 = 389.9557
        var43 = module0.unique_day(var42, var9)
    except BaseException:
        pass


def test_case_517():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = -743
        var6 = 'L7\\?+cX~\rnzt6PK'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = module0.contains_unique_day(var5, var3)
        assert var8 is False
        var9 = -1391
        var10 = 'O<~#Jc.'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 3753.1559
        var16 = 'Pxg|'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'i8cc2'
        var19 = module0.unique_month(var15, var18)
        assert var19 is False
        var20 = None
        var21 = '8u:j!{g\\2 $7'
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = False
        var24 = module0.contains_unique_day(var1, var23)
    except BaseException:
        pass


def test_case_518():
    try:
        var0 = 444
        var1 = '%f\'4V:]"lU-|'
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_519():
    try:
        var0 = 139.8
        var1 = -1953.32675
        var2 = module0.unique_day(var0, var1)
    except BaseException:
        pass


def test_case_520():
    try:
        var0 = '$zyc>\\(T'
        var1 = 457
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_521():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'yj6j\\eZ,$0tZ~Z'
        var7 = '@B\tt=xE\n,CidtY'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = "\tkqW{^)u'&7vTWVU1z"
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -146
        var13 = '6'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = 458.0
        var16 = 'F4_`lQDM'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = True
        var19 = '2ac6 \tO '
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = module0.unique_month(var3, var12)
    except BaseException:
        pass


def test_case_522():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'Tk\\\x0bvD{iX&puw,P['
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 3753.1559
        var13 = 'Pxg|'
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = -1995
        var16 = '1eeMAz-7Q#@o|u;\nP'
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = False
        var19 = '-'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = False
        var22 = "7i#c*&b7e,'"
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = 'Sh6P0e!Ql!{eGQ@'
        var25 = '?r;P\\T*MZ}RM/b{S%7a'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = 'Xys2;)(y&w=ps([GFHm='
        var28 = 'oFU/E^'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '8u:j!{g\\2 $7'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = False
        var34 = "7i#c*&b7e,'"
        var35 = module0.contains_unique_day(var33, var34)
        assert var35 is False
        var36 = 'AJtm\\C?$lu2'
        var37 = module0.contains_unique_day(var30, var36)
        assert var37 is False
        var38 = -1420.627
        var39 = '(^dSLBVMDV{~~P>vT]'
        var40 = module0.unique_month(var38, var39)
        assert var40 is False
        var41 = -146
        var42 = '6'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = module0.unique_month(var30, var21)
    except BaseException:
        pass


def test_case_523():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'U9lm-S<aj&D'
        var4 = module0.contains_unique_day(var1, var3)
        assert var4 is False
        var5 = '>]&ePkW1f\tPor;QU:[f'
        var6 = "9I!'>XK-a"
        var7 = module0.unique_day(var5, var6)
    except BaseException:
        pass


def test_case_524():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = '2\tl%'
        var6 = "z9w<<|.FEA{6 mGy}'t"
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = ''
        var12 = 'rN/n\r\\M%?%QlTn-dE'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = False
        var15 = '(gRF1\x0ct%,ad'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = -1420.627
        var18 = '(^dSLBVMDV{~~P>vT]'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'Sh6P0e!Ql!{eGQ@'
        var24 = '?r;P\\T*MZ}RM/b{S%7a'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = True
        var27 = '2ac6 \tO '
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = -1995
        var30 = '1eeMAz-7Q#@o|u;\nP'
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '+p_g--\x0c<GRH3u'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = 715.973
        var36 = 1120
        var37 = module0.unique_day(var35, var36)
    except BaseException:
        pass


def test_case_525():
    try:
        var0 = ',-pI8'
        var1 = 'x75[L'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = "c'7E$,97(j(fau'Ij"
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 358.0
        var9 = '}%'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = None
        var12 = 'nf'
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = 'yj6j\\eZ,$0tZ~Z'
        var18 = '@B\tt=xE\n,CidtY'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "\tkqW{^)u'&7vTWVU1z"
        var22 = module0.unique_month(var20, var21)
        assert var22 is False
        var23 = -1420.627
        var24 = '(^dSLBVMDV{~~P>vT]'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = -577
        var27 = 'd%QVKrJ'
        var28 = module0.unique_day(var26, var27)
    except BaseException:
        pass


def test_case_526():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = '?okk)k<Lr[Bo'
        var9 = 'r|{,'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'Xys2;)(y&w=ps([GFHm='
        var12 = 'oFU/E^'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = None
        var15 = '8u:j!{g\\2 $7'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = module0.unique_month(var11, var12)
        assert var17 is False
        var18 = True
        var19 = '\x0c\\:9H2`y`"'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = -1447
        var22 = module0.unique_day(var18, var21)
    except BaseException:
        pass


def test_case_527():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 358.0
        var4 = '}%'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = '2\tl%'
        var7 = "z9w<<|.FEA{6 mGy}'t"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = 458.0
        var10 = 'F4_`lQDM'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = 'Xys2;)(y&w=ps([GFHm='
        var13 = 'oFU/E^'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = '{ZQD~)vEJYu/'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -169.329504
        var19 = ''
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = 'rN/n\r\\M%?%QlTn-dE'
        var23 = module0.contains_unique_day(var21, var22)
        assert var23 is False
        var24 = False
        var25 = "7i#c*&b7e,'"
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = '\tc2d/S'
        var28 = module0.unique_month(var25, var27)
        assert var28 is False
        var29 = -743
        var30 = 'L7\\?+cX~\rnzt6PK'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = module0.contains_unique_day(var29, var27)
        assert var32 is False
        var33 = 'Xys2;)(y&w=ps([GFHm='
        var34 = 'oFU/E^'
        var35 = module0.unique_month(var33, var34)
        assert var35 is False
        var36 = 3753.1559
        var37 = 'Pxg|'
        var38 = module0.contains_unique_day(var36, var37)
        assert var38 is False
        var39 = 'i8cc2'
        var40 = module0.unique_month(var36, var39)
        assert var40 is False
        var41 = 1262.0
        var42 = module0.unique_day(var41, var36)
    except BaseException:
        pass


def test_case_528():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '{ZQD~)vEJYu/'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -169.329504
        var7 = ''
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = 'U9lm-S<aj&D'
        var13 = module0.contains_unique_day(var10, var12)
        assert var13 is False
        var14 = None
        var15 = '\x0b'
        var16 = module0.unique_month(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = "7i#c*&b7e,'"
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 'AJtm\\C?$lu2'
        var24 = module0.contains_unique_day(var17, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = '\tc2d/S'
        var29 = module0.unique_month(var26, var28)
        assert var29 is False
        var30 = -743
        var31 = 'L7\\?+cX~\rnzt6PK'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = module0.contains_unique_day(var30, var28)
        assert var33 is False
        var34 = False
        var35 = '{ZQD~)vEJYu/'
        var36 = module0.unique_month(var34, var35)
        assert var36 is False
        var37 = '#\x0bqP{=mqAP\x0c>-s!'
        var38 = 'ZeqxS'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = None
        var41 = '+p_g--\x0c<GRH3u'
        var42 = module0.unique_month(var40, var41)
        assert var42 is False
        var43 = ''
        var44 = 'rN/n\r\\M%?%QlTn-dE'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = None
        var47 = '8u:j!{g\\2 $7'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = 'yj6j\\eZ,$0tZ~Z'
        var50 = '@B\tt=xE\n,CidtY'
        var51 = module0.unique_month(var49, var50)
        assert var51 is False
        var52 = module0.unique_day(var20, var17)
    except BaseException:
        pass


def test_case_529():
    try:
        var0 = -3695.744
        var1 = False
        var2 = module0.contains_unique_day(var0, var1)
    except BaseException:
        pass


def test_case_530():
    try:
        var0 = '#\x0bqP{=mqAP\x0c>-s!'
        var1 = 'ZeqxS'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1391
        var4 = 'O<~#Jc.'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = "c'7E$,97(j(fau'Ij"
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = False
        var18 = "7i#c*&b7e,'"
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = '\tc2d/S'
        var21 = module0.unique_month(var18, var20)
        assert var21 is False
        var22 = -743
        var23 = 'L7\\?+cX~\rnzt6PK'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = module0.contains_unique_day(var22, var20)
        assert var25 is False
        var26 = '?okk)k<Lr[Bo'
        var27 = 'r|{,'
        var28 = module0.unique_month(var26, var27)
        assert var28 is False
        var29 = 'Xys2;)(y&w=ps([GFHm='
        var30 = 'oFU/E^'
        var31 = module0.unique_month(var29, var30)
        assert var31 is False
        var32 = 3753.1559
        var33 = 'Pxg|'
        var34 = module0.contains_unique_day(var32, var33)
        assert var34 is False
        var35 = 'i8cc2'
        var36 = module0.unique_month(var32, var35)
        assert var36 is False
        var37 = None
        var38 = '8u:j!{g\\2 $7'
        var39 = module0.unique_month(var37, var38)
        assert var39 is False
        var40 = ''
        var41 = 'rN/n\r\\M%?%QlTn-dE'
        var42 = module0.contains_unique_day(var40, var41)
        assert var42 is False
        var43 = False
        var44 = '(gRF1\x0ct%,ad'
        var45 = module0.contains_unique_day(var43, var44)
        assert var45 is False
        var46 = 358.0
        var47 = '}%'
        var48 = module0.unique_month(var46, var47)
        assert var48 is False
        var49 = 2840
        var50 = module0.unique_day(var46, var49)
    except BaseException:
        pass


def test_case_531():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'yj6j\\eZ,$0tZ~Z'
        var4 = '@B\tt=xE\n,CidtY'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "\tkqW{^)u'&7vTWVU1z"
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -743
        var13 = 'L7\\?+cX~\rnzt6PK'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = 'Sh6P0e!Ql!{eGQ@'
        var19 = '?r;P\\T*MZ}RM/b{S%7a'
        var20 = module0.contains_unique_day(var18, var19)
        assert var20 is False
        var21 = 1353
        var22 = True
        var23 = module0.unique_day(var21, var22)
    except BaseException:
        pass


def test_case_532():
    try:
        var0 = 3753.1559
        var1 = 'Pxg|'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = 'c'
        var9 = module0.unique_month(var8, var8)
        assert var9 is True
        var10 = False
        var11 = "7i#c*&b7e,'"
        var12 = module0.contains_unique_day(var10, var11)
        assert var12 is False
        var13 = '\tc2d/S'
        var14 = module0.unique_month(var11, var13)
        assert var14 is False
        var15 = -743
        var16 = 'L7\\?+cX~\rnzt6PK'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = module0.contains_unique_day(var15, var13)
        assert var18 is False
        var19 = True
        var20 = module0.unique_day(var19, var1)
    except BaseException:
        pass


def test_case_533():
    try:
        var0 = '?okk)k<Lr[Bo'
        var1 = 'r|{,'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = module0.unique_month(var4, var4)
        assert var6 is True
        var7 = 4128
        var8 = False
        var9 = module0.contains_unique_day(var7, var8)
    except BaseException:
        pass


def test_case_534():
    try:
        var0 = None
        var1 = '+p_g--\x0c<GRH3u'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'i8cc2'
        var10 = module0.unique_month(var6, var9)
        assert var10 is False
        var11 = True
        var12 = '2ac6 \tO '
        var13 = module0.contains_unique_day(var11, var12)
        assert var13 is False
        var14 = ''
        var15 = module0.unique_month(var14, var14)
        assert var15 is False
        var16 = 'iUAjH^\\5<%'
        var17 = module0.unique_month(var16, var11)
    except BaseException:
        pass


def test_case_535():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '8u:j!{g\\2 $7'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'U9lm-S<aj&D'
        var7 = module0.contains_unique_day(var4, var6)
        assert var7 is False
        var8 = ',-pI8'
        var9 = 'x75[L'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = None
        var12 = '\x0b'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = '2Lc6EhN<%'
        var15 = ' w'
        var16 = module0.contains_unique_day(var14, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = "c'7E$,97(j(fau'Ij"
        var21 = module0.unique_month(var18, var20)
        assert var21 is False
        var22 = False
        var23 = "7i#c*&b7e,'"
        var24 = module0.contains_unique_day(var22, var23)
        assert var24 is False
        var25 = '\tc2d/S'
        var26 = module0.unique_month(var23, var25)
        assert var26 is False
        var27 = 448.46393
        var28 = module0.unique_day(var11, var27)
    except BaseException:
        pass


def test_case_536():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1823.5197
        var4 = False
        var5 = module0.unique_month(var3, var4)
    except BaseException:
        pass


def test_case_537():
    try:
        var0 = -1420.627
        var1 = '(^dSLBVMDV{~~P>vT]'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 3753.1559
        var7 = 'Pxg|'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'i8cc2'
        var10 = module0.unique_month(var6, var9)
        assert var10 is False
        var11 = None
        var12 = '8u:j!{g\\2 $7'
        var13 = module0.unique_month(var11, var12)
        assert var13 is False
        var14 = -587.1
        var15 = 110
        var16 = module0.unique_day(var14, var15)
    except BaseException:
        pass


def test_case_538():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = "c'7E$,97(j(fau'Ij"
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = None
        var6 = '8u:j!{g\\2 $7'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = "7i#c*&b7e,'"
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 'AJtm\\C?$lu2'
        var12 = module0.contains_unique_day(var5, var11)
        assert var12 is False
        var13 = -1420.627
        var14 = '(^dSLBVMDV{~~P>vT]'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = None
        var17 = '8u:j!{g\\2 $7'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = 'U9lm-S<aj&D'
        var20 = module0.contains_unique_day(var17, var19)
        assert var20 is False
        var21 = 'j:\x0bg k^aS&'
        var22 = module0.contains_unique_day(var21, var19)
        assert var22 is False
        var23 = False
        var24 = '-'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.unique_month(var24, var24)
        assert var26 is True
        var27 = ';^H.@'
        var28 = 4034
        var29 = module0.contains_unique_day(var27, var28)
    except BaseException:
        pass


def test_case_539():
    try:
        var0 = -1391
        var1 = 'O<~#Jc.'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'Xys2;)(y&w=ps([GFHm='
        var4 = 'oFU/E^'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = None
        var7 = '8u:j!{g\\2 $7'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = module0.unique_month(var3, var4)
        assert var9 is False
        var10 = None
        var11 = '+p_g--\x0c<GRH3u'
        var12 = module0.unique_month(var10, var11)
        assert var12 is False
        var13 = -1995
        var14 = '1eeMAz-7Q#@o|u;\nP'
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = ''
        var17 = 'rN/n\r\\M%?%QlTn-dE'
        var18 = module0.contains_unique_day(var16, var17)
        assert var18 is False
        var19 = '6r/m,@03'
        var20 = module0.contains_unique_day(var19, var19)
        assert var20 is False
        var21 = True
        var22 = module0.unique_month(var10, var21)
    except BaseException:
        pass


def test_case_540():
    try:
        var0 = 458.0
        var1 = 'F4_`lQDM'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = -1420.627
        var4 = '(^dSLBVMDV{~~P>vT]'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '8u:j!{g\\2 $7'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = module0.unique_month(var6, var7)
        assert var12 is False
        var13 = False
        var14 = "7i#c*&b7e,'"
        var15 = module0.contains_unique_day(var13, var14)
        assert var15 is False
        var16 = '\tc2d/S'
        var17 = module0.unique_month(var14, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = module0.contains_unique_day(var18, var16)
        assert var21 is False
        var22 = False
        var23 = '{ZQD~)vEJYu/'
        var24 = module0.unique_month(var22, var23)
        assert var24 is False
        var25 = False
        var26 = "7i#c*&b7e,'"
        var27 = module0.contains_unique_day(var25, var26)
        assert var27 is False
        var28 = False
        var29 = 'Tk\\\x0bvD{iX&puw,P['
        var30 = module0.contains_unique_day(var28, var29)
        assert var30 is False
        var31 = ',-pI8'
        var32 = 'x75[L'
        var33 = module0.contains_unique_day(var31, var32)
        assert var33 is False
        var34 = ''
        var35 = 'rN/n\r\\M%?%QlTn-dE'
        var36 = module0.contains_unique_day(var34, var35)
        assert var36 is False
        var37 = -1483
        var38 = ' :'
        var39 = module0.contains_unique_day(var37, var38)
        assert var39 is False
        var40 = '6r/m,@03'
        var41 = module0.contains_unique_day(var40, var40)
        assert var41 is False
        var42 = -1274.434
        var43 = None
        var44 = module0.contains_unique_day(var42, var43)
    except BaseException:
        pass


def test_case_541():
    try:
        var0 = None
        var1 = '8u:j!{g\\2 $7'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ''
        var4 = 'rN/n\r\\M%?%QlTn-dE'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = '(gRF1\x0ct%,ad'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = False
        var10 = '{ZQD~)vEJYu/'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = False
        var13 = "7i#c*&b7e,'"
        var14 = module0.contains_unique_day(var12, var13)
        assert var14 is False
        var15 = '\tc2d/S'
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = False
        var18 = '-'
        var19 = module0.contains_unique_day(var17, var18)
        assert var19 is False
        var20 = module0.unique_month(var18, var18)
        assert var20 is True
        var21 = None
        var22 = '8u:j!{g\\2 $7'
        var23 = module0.unique_month(var21, var22)
        assert var23 is False
        var24 = "c'7E$,97(j(fau'Ij"
        var25 = module0.unique_month(var22, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = '\tc2d/S'
        var30 = module0.unique_month(var27, var29)
        assert var30 is False
        var31 = -743
        var32 = 'L7\\?+cX~\rnzt6PK'
        var33 = module0.unique_month(var31, var32)
        assert var33 is False
        var34 = module0.contains_unique_day(var31, var29)
        assert var34 is False
        var35 = '1Nhzk+`\roiP'
        var36 = -381
        var37 = module0.unique_month(var35, var36)
    except BaseException:
        pass


def test_case_542():
    try:
        var0 = False
        var1 = "7i#c*&b7e,'"
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = '\tc2d/S'
        var4 = module0.unique_month(var1, var3)
        assert var4 is False
        var5 = 358.0
        var6 = '}%'
        var7 = module0.unique_month(var5, var6)
        assert var7 is False
        var8 = False
        var9 = 'M\x0bu_#W5HUy(>tMi'
        var10 = module0.contains_unique_day(var8, var9)
        assert var10 is False
        var11 = 299
        var12 = module0.unique_month(var3, var11)
    except BaseException:
        pass


def test_case_543():
    try:
        var0 = -1483
        var1 = ' :'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = False
        var4 = '-'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = -146
        var7 = '6'
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'c'
        var10 = module0.unique_month(var9, var9)
        assert var10 is True
        var11 = -2498.412
        var12 = module0.unique_day(var6, var11)
    except BaseException:
        pass


def test_case_544():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = 3403.8
        var4 = "D\x0b~P7_c0 \n'r\\*k"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = False
        var7 = "7i#c*&b7e,'"
        var8 = module0.contains_unique_day(var6, var7)
        assert var8 is False
        var9 = 'Sh6P0e!Ql!{eGQ@'
        var10 = '?r;P\\T*MZ}RM/b{S%7a'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = "c'7E$,97(j(fau'Ij"
        var16 = module0.unique_month(var13, var15)
        assert var16 is False
        var17 = 358.0
        var18 = '}%'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = False
        var21 = 'M\x0bu_#W5HUy(>tMi'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = 3753.1559
        var24 = 'Pxg|'
        var25 = module0.contains_unique_day(var23, var24)
        assert var25 is False
        var26 = module0.contains_unique_day(var12, var12)
    except BaseException:
        pass


def test_case_545():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = 'c'
        var4 = module0.unique_month(var3, var3)
        assert var4 is True
        var5 = ''
        var6 = 'rN/n\r\\M%?%QlTn-dE'
        var7 = module0.contains_unique_day(var5, var6)
        assert var7 is False
        var8 = -909
        var9 = module0.unique_day(var8, var0)
    except BaseException:
        pass


def test_case_546():
    try:
        var0 = '2\tl%'
        var1 = "z9w<<|.FEA{6 mGy}'t"
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = ',-pI8'
        var4 = 'x75[L'
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = 'Xys2;)(y&w=ps([GFHm='
        var7 = 'oFU/E^'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = -1902
        var13 = '0#dYU>S-d'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = False
        var16 = "7i#c*&b7e,'"
        var17 = module0.contains_unique_day(var15, var16)
        assert var17 is False
        var18 = '\tc2d/S'
        var19 = module0.unique_month(var16, var18)
        assert var19 is False
        var20 = False
        var21 = '-'
        var22 = module0.contains_unique_day(var20, var21)
        assert var22 is False
        var23 = module0.unique_month(var21, var21)
        assert var23 is True
        var24 = False
        var25 = '{ZQD~)vEJYu/'
        var26 = module0.unique_month(var24, var25)
        assert var26 is False
        var27 = None
        var28 = '8u:j!{g\\2 $7'
        var29 = module0.unique_month(var27, var28)
        assert var29 is False
        var30 = None
        var31 = '8u:j!{g\\2 $7'
        var32 = module0.unique_month(var30, var31)
        assert var32 is False
        var33 = "c'7E$,97(j(fau'Ij"
        var34 = module0.unique_month(var31, var33)
        assert var34 is False
        var35 = None
        var36 = '8u:j!{g\\2 $7'
        var37 = module0.unique_month(var35, var36)
        assert var37 is False
        var38 = ''
        var39 = 'rN/n\r\\M%?%QlTn-dE'
        var40 = module0.contains_unique_day(var38, var39)
        assert var40 is False
        var41 = False
        var42 = '(gRF1\x0ct%,ad'
        var43 = module0.contains_unique_day(var41, var42)
        assert var43 is False
        var44 = 458.0
        var45 = 'F4_`lQDM'
        var46 = module0.contains_unique_day(var44, var45)
        assert var46 is False
        var47 = 2518.7134
        var48 = module0.unique_day(var47, var27)
    except BaseException:
        pass


def test_case_547():
    try:
        var0 = -743
        var1 = 'L7\\?+cX~\rnzt6PK'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = False
        var4 = "7i#c*&b7e,'"
        var5 = module0.contains_unique_day(var3, var4)
        assert var5 is False
        var6 = '\tc2d/S'
        var7 = module0.unique_month(var4, var6)
        assert var7 is False
        var8 = None
        var9 = '8u:j!{g\\2 $7'
        var10 = module0.unique_month(var8, var9)
        assert var10 is False
        var11 = 'U9lm-S<aj&D'
        var12 = module0.contains_unique_day(var9, var11)
        assert var12 is False
        var13 = None
        var14 = '8u:j!{g\\2 $7'
        var15 = module0.unique_month(var13, var14)
        assert var15 is False
        var16 = 'yj6j\\eZ,$0tZ~Z'
        var17 = '@B\tt=xE\n,CidtY'
        var18 = module0.unique_month(var16, var17)
        assert var18 is False
        var19 = None
        var20 = '8u:j!{g\\2 $7'
        var21 = module0.unique_month(var19, var20)
        assert var21 is False
        var22 = '6r/m,@03'
        var23 = module0.contains_unique_day(var22, var22)
        assert var23 is False
        var24 = -1995
        var25 = '1eeMAz-7Q#@o|u;\nP'
        var26 = module0.contains_unique_day(var24, var25)
        assert var26 is False
        var27 = -1391
        var28 = 'O<~#Jc.'
        var29 = module0.contains_unique_day(var27, var28)
        assert var29 is False
        var30 = module0.unique_month(var27, var0)
    except BaseException:
        pass


def test_case_548():
    try:
        var0 = 'Xys2;)(y&w=ps([GFHm='
        var1 = 'oFU/E^'
        var2 = module0.unique_month(var0, var1)
        assert var2 is False
        var3 = None
        var4 = '\x0b'
        var5 = module0.unique_month(var3, var4)
        assert var5 is False
        var6 = -1902
        var7 = '0#dYU>S-d'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = None
        var10 = '\x0b'
        var11 = module0.unique_month(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'yj6j\\eZ,$0tZ~Z'
        var16 = '@B\tt=xE\n,CidtY'
        var17 = module0.unique_month(var15, var16)
        assert var17 is False
        var18 = -743
        var19 = 'L7\\?+cX~\rnzt6PK'
        var20 = module0.unique_month(var18, var19)
        assert var20 is False
        var21 = ''
        var22 = module0.unique_month(var21, var21)
        assert var22 is False
        var23 = False
        var24 = '{ZQD~)vEJYu/'
        var25 = module0.unique_month(var23, var24)
        assert var25 is False
        var26 = False
        var27 = "7i#c*&b7e,'"
        var28 = module0.contains_unique_day(var26, var27)
        assert var28 is False
        var29 = False
        var30 = 'Tk\\\x0bvD{iX&puw,P['
        var31 = module0.contains_unique_day(var29, var30)
        assert var31 is False
        var32 = None
        var33 = '8u:j!{g\\2 $7'
        var34 = module0.unique_month(var32, var33)
        assert var34 is False
        var35 = "c'7E$,97(j(fau'Ij"
        var36 = module0.unique_month(var33, var35)
        assert var36 is False
        var37 = module0.contains_unique_day(var29, var26)
    except BaseException:
        pass


def test_case_549():
    try:
        var0 = False
        var1 = '-'
        var2 = module0.contains_unique_day(var0, var1)
        assert var2 is False
        var3 = module0.unique_month(var1, var1)
        assert var3 is True
        var4 = ''
        var5 = module0.unique_month(var4, var4)
        assert var5 is False
        var6 = 358.0
        var7 = '}%'
        var8 = module0.unique_month(var6, var7)
        assert var8 is False
        var9 = False
        var10 = 'M\x0bu_#W5HUy(>tMi'
        var11 = module0.contains_unique_day(var9, var10)
        assert var11 is False
        var12 = None
        var13 = '8u:j!{g\\2 $7'
        var14 = module0.unique_month(var12, var13)
        assert var14 is False
        var15 = 'U9lm-S<aj&D'
        var16 = module0.contains_unique_day(var13, var15)
        assert var16 is False
        var17 = None
        var18 = '8u:j!{g\\2 $7'
        var19 = module0.unique_month(var17, var18)
        assert var19 is False
        var20 = 'U9lm-S<aj&D'
        var21 = module0.contains_unique_day(var18, var20)
        assert var21 is False
        var22 = 'j:\x0bg k^aS&'
        var23 = module0.contains_unique_day(var22, var20)
        assert var23 is False
        var24 = '~T'
        var25 = module0.unique_day(var24, var18)
    except BaseException:
        pass
