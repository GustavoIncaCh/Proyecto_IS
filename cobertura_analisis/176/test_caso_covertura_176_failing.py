# Automatically generated by Pynguin.
import caso_covertura_176 as module0


def test_case_0():
    try:
        var0 = -721.2
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = False
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = -2561.0
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = -249
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = None
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = -463.226406
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.remove_extras(var2)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = False
        var5 = module0.remove_extras(var4)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'l\n'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = ']ifhpZdYeE*m'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 867
        var11 = module0.remove_extras(var10)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'l\n'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 2322
        var11 = module0.remove_extras(var10)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 2930
        var3 = module0.remove_extras(var2)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = ']ifhpZdYeE*m'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 427
        var9 = module0.remove_extras(var8)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 2634.2645
        var7 = module0.remove_extras(var6)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'h]MX9d\x0cBUfOl4w>'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'l\n'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = -3596.8154
        var11 = module0.remove_extras(var10)
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = -1632
        var9 = module0.remove_extras(var8)
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = ']ifhpZdYeE*m'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = -1548.0
        var9 = module0.remove_extras(var8)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'slU{'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 64.97205
        var5 = module0.remove_extras(var4)
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = -3.268
        var7 = module0.remove_extras(var6)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'l\n'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = True
        var7 = module0.remove_extras(var6)
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = ']ifhpZdYeE*m'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'slU{'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'h]MX9d\x0cBUfOl4w>'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.remove_extras(var16)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'slU{'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 117.64758
        var5 = module0.remove_extras(var4)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'h]MX9d\x0cBUfOl4w>'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = False
        var11 = module0.remove_extras(var10)
    except BaseException:
        pass


def test_case_22():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'h]MX9d\x0cBUfOl4w>'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.remove_extras(var10)
    except BaseException:
        pass


def test_case_23():
    try:
        var0 = 611
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_24():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = ']ifhpZdYeE*m'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'l\n'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'slU{'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = False
        var17 = module0.remove_extras(var16)
    except BaseException:
        pass


def test_case_25():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'l\n'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "'Pc@?.*y_TSb"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = ']ifhpZdYeE*m'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'slU{'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = "'Pc@?.*y_TSb"
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = 'l\n'
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = 2143.779087
        var23 = module0.remove_extras(var22)
    except BaseException:
        pass


def test_case_26():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'slU{'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = module0.remove_extras(var8)
        assert var10 is not None
        var11 = "'Pc@?.*y_TSb"
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = 'h]MX9d\x0cBUfOl4w>'
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = 992.83
        var16 = module0.remove_extras(var15)
    except BaseException:
        pass


def test_case_27():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "'Pc@?.*y_TSb"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'slU{'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = module0.remove_extras(var12)
        assert var14 is not None
        var15 = 'G1\'vwZ\n2"0&~`'
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = "'Pc@?.*y_TSb"
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = 'l\n'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = "'Pc@?.*y_TSb"
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = ']ifhpZdYeE*m'
        var24 = module0.remove_extras(var23)
        assert var24 is not None
        var25 = 'slU{'
        var26 = module0.remove_extras(var25)
        assert var26 is not None
        var27 = module0.remove_extras(var25)
        assert var27 is not None
        var28 = 'l\n'
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = True
        var31 = module0.remove_extras(var30)
    except BaseException:
        pass


def test_case_28():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'h]MX9d\x0cBUfOl4w>'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 983.0
        var7 = module0.remove_extras(var6)
    except BaseException:
        pass


def test_case_29():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'slU{'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'slU{'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = module0.remove_extras(var10)
        assert var12 is not None
        var13 = 'G1\'vwZ\n2"0&~`'
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = -4161.49894
        var16 = module0.remove_extras(var15)
    except BaseException:
        pass


def test_case_30():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'l\n'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.remove_extras(var12)
    except BaseException:
        pass


def test_case_31():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'slU{'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'h]MX9d\x0cBUfOl4w>'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'l\n'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "'Pc@?.*y_TSb"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = ']ifhpZdYeE*m'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = 'l\n'
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = "'Pc@?.*y_TSb"
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = 'slU{'
        var23 = module0.remove_extras(var22)
        assert var23 is not None
        var24 = module0.remove_extras(var22)
        assert var24 is not None
        var25 = 'G1\'vwZ\n2"0&~`'
        var26 = module0.remove_extras(var25)
        assert var26 is not None
        var27 = 'slU{'
        var28 = module0.remove_extras(var27)
        assert var28 is not None
        var29 = "'Pc@?.*y_TSb"
        var30 = module0.remove_extras(var29)
        assert var30 is not None
        var31 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var32 = module0.remove_extras(var31)
        assert var32 is not None
        var33 = 'KY|]M\x0bdR1lErK*ra'
        var34 = module0.remove_extras(var33)
        assert var34 is not None
        var35 = 'slU{'
        var36 = module0.remove_extras(var35)
        assert var36 is not None
        var37 = None
        var38 = module0.remove_extras(var37)
    except BaseException:
        pass


def test_case_32():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = None
        var4 = module0.remove_extras(var3)
    except BaseException:
        pass


def test_case_33():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'h]MX9d\x0cBUfOl4w>'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'slU{'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = "'Pc@?.*y_TSb"
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = 'slU{'
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = module0.remove_extras(var18)
        assert var20 is not None
        var21 = 'G1\'vwZ\n2"0&~`'
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = 'slU{'
        var24 = module0.remove_extras(var23)
        assert var24 is not None
        var25 = module0.remove_extras(var23)
        assert var25 is not None
        var26 = 1720.0
        var27 = module0.remove_extras(var26)
    except BaseException:
        pass


def test_case_34():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'KY|]M\x0bdR1lErK*ra'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "'Pc@?.*y_TSb"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = 'slU{'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = module0.remove_extras(var16)
        assert var18 is not None
        var19 = 'G1\'vwZ\n2"0&~`'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = -840.05332
        var22 = module0.remove_extras(var21)
    except BaseException:
        pass


def test_case_35():
    try:
        var0 = 2136.569
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_36():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = ']ifhpZdYeE*m'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'slU{'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = module0.remove_extras(var10)
        assert var12 is not None
        var13 = 'G1\'vwZ\n2"0&~`'
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = 'slU{'
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = "'Pc@?.*y_TSb"
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = 'h]MX9d\x0cBUfOl4w>'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = 'slU{'
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = module0.remove_extras(var21)
        assert var23 is not None
        var24 = "'Pc@?.*y_TSb"
        var25 = module0.remove_extras(var24)
        assert var25 is not None
        var26 = 'slU{'
        var27 = module0.remove_extras(var26)
        assert var27 is not None
        var28 = "'Pc@?.*y_TSb"
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var31 = module0.remove_extras(var30)
        assert var31 is not None
        var32 = 'KY|]M\x0bdR1lErK*ra'
        var33 = module0.remove_extras(var32)
        assert var33 is not None
        var34 = 'slU{'
        var35 = module0.remove_extras(var34)
        assert var35 is not None
        var36 = "'Pc@?.*y_TSb"
        var37 = module0.remove_extras(var36)
        assert var37 is not None
        var38 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var39 = module0.remove_extras(var38)
        assert var39 is not None
        var40 = True
        var41 = module0.remove_extras(var40)
    except BaseException:
        pass


def test_case_37():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'us'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = module0.remove_extras(var4)
        assert var6 is not None
        var7 = False
        var8 = module0.remove_extras(var7)
    except BaseException:
        pass


def test_case_38():
    try:
        var0 = True
        var1 = module0.remove_extras(var0)
    except BaseException:
        pass


def test_case_39():
    try:
        var0 = 'l\n'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'h]MX9d\x0cBUfOl4w>'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'us'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'slU{'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "'Pc@?.*y_TSb"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'KY|]M\x0bdR1lErK*ra'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = 'slU{'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = "'Pc@?.*y_TSb"
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = 'l\n'
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = "'Pc@?.*y_TSb"
        var23 = module0.remove_extras(var22)
        assert var23 is not None
        var24 = ']ifhpZdYeE*m'
        var25 = module0.remove_extras(var24)
        assert var25 is not None
        var26 = "'Pc@?.*y_TSb"
        var27 = module0.remove_extras(var26)
        assert var27 is not None
        var28 = 'slU{'
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = module0.remove_extras(var28)
        assert var30 is not None
        var31 = 'G1\'vwZ\n2"0&~`'
        var32 = module0.remove_extras(var31)
        assert var32 is not None
        var33 = 'slU{'
        var34 = module0.remove_extras(var33)
        assert var34 is not None
        var35 = "'Pc@?.*y_TSb"
        var36 = module0.remove_extras(var35)
        assert var36 is not None
        var37 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var38 = module0.remove_extras(var37)
        assert var38 is not None
        var39 = 83.0
        var40 = module0.remove_extras(var39)
    except BaseException:
        pass


def test_case_40():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = module0.remove_extras(var6)
        assert var8 is not None
        var9 = 'G1\'vwZ\n2"0&~`'
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'slU{'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = "'Pc@?.*y_TSb"
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = True
        var16 = module0.remove_extras(var15)
    except BaseException:
        pass


def test_case_41():
    try:
        var0 = 'us'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'h]MX9d\x0cBUfOl4w>'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'slU{'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = module0.remove_extras(var12)
        assert var14 is not None
        var15 = 2150
        var16 = module0.remove_extras(var15)
    except BaseException:
        pass


def test_case_42():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = 'l\n'
        var4 = module0.remove_extras(var3)
        assert var4 is not None
        var5 = 'l\n'
        var6 = module0.remove_extras(var5)
        assert var6 is not None
        var7 = "'Pc@?.*y_TSb"
        var8 = module0.remove_extras(var7)
        assert var8 is not None
        var9 = ']ifhpZdYeE*m'
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'slU{'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = "'Pc@?.*y_TSb"
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = 'KY|]M\x0bdR1lErK*ra'
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = 2011
        var20 = module0.remove_extras(var19)
    except BaseException:
        pass


def test_case_43():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = ']ifhpZdYeE*m'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.remove_extras(var12)
    except BaseException:
        pass


def test_case_44():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = "'Pc@?.*y_TSb"
        var4 = module0.remove_extras(var3)
        assert var4 is not None
        var5 = -1131
        var6 = module0.remove_extras(var5)
    except BaseException:
        pass


def test_case_45():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = module0.remove_extras(var6)
        assert var8 is not None
        var9 = 'G1\'vwZ\n2"0&~`'
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'slU{'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = 'slU{'
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = "'Pc@?.*y_TSb"
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.remove_extras(var19)
    except BaseException:
        pass


def test_case_46():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = 'us'
        var4 = module0.remove_extras(var3)
        assert var4 is not None
        var5 = "'Pc@?.*y_TSb"
        var6 = module0.remove_extras(var5)
        assert var6 is not None
        var7 = 'h]MX9d\x0cBUfOl4w>'
        var8 = module0.remove_extras(var7)
        assert var8 is not None
        var9 = "'Pc@?.*y_TSb"
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'slU{'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = 'l\n'
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = 'l\n'
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = "'Pc@?.*y_TSb"
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = ']ifhpZdYeE*m'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = "'Pc@?.*y_TSb"
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = 'slU{'
        var24 = module0.remove_extras(var23)
        assert var24 is not None
        var25 = module0.remove_extras(var23)
        assert var25 is not None
        var26 = 'G1\'vwZ\n2"0&~`'
        var27 = module0.remove_extras(var26)
        assert var27 is not None
        var28 = 'slU{'
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = "'Pc@?.*y_TSb"
        var31 = module0.remove_extras(var30)
        assert var31 is not None
        var32 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var33 = module0.remove_extras(var32)
        assert var33 is not None
        var34 = 'slU{'
        var35 = module0.remove_extras(var34)
        assert var35 is not None
        var36 = "'Pc@?.*y_TSb"
        var37 = module0.remove_extras(var36)
        assert var37 is not None
        var38 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var39 = module0.remove_extras(var38)
        assert var39 is not None
        var40 = 'KY|]M\x0bdR1lErK*ra'
        var41 = module0.remove_extras(var40)
        assert var41 is not None
        var42 = True
        var43 = module0.remove_extras(var42)
    except BaseException:
        pass


def test_case_47():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'h]MX9d\x0cBUfOl4w>'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'us'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = False
        var7 = module0.remove_extras(var6)
    except BaseException:
        pass


def test_case_48():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'us'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'slU{'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = module0.remove_extras(var14)
        assert var16 is not None
        var17 = "'Pc@?.*y_TSb"
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = 'h]MX9d\x0cBUfOl4w>'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = 1627
        var22 = module0.remove_extras(var21)
    except BaseException:
        pass


def test_case_49():
    try:
        var0 = 'us'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "'Pc@?.*y_TSb"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'KY|]M\x0bdR1lErK*ra'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'slU{'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "'Pc@?.*y_TSb"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = False
        var19 = module0.remove_extras(var18)
    except BaseException:
        pass


def test_case_50():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = ']ifhpZdYeE*m'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'slU{'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = module0.remove_extras(var14)
        assert var16 is not None
        var17 = 'l\n'
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = -2476
        var20 = module0.remove_extras(var19)
    except BaseException:
        pass


def test_case_51():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = ']ifhpZdYeE*m'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'h]MX9d\x0cBUfOl4w>'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'slU{'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "'Pc@?.*y_TSb"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = 'us'
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = 'l\n'
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = 'slU{'
        var23 = module0.remove_extras(var22)
        assert var23 is not None
        var24 = "'Pc@?.*y_TSb"
        var25 = module0.remove_extras(var24)
        assert var25 is not None
        var26 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var27 = module0.remove_extras(var26)
        assert var27 is not None
        var28 = 'KY|]M\x0bdR1lErK*ra'
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = 'slU{'
        var31 = module0.remove_extras(var30)
        assert var31 is not None
        var32 = module0.remove_extras(var30)
        assert var32 is not None
        var33 = 1210
        var34 = module0.remove_extras(var33)
    except BaseException:
        pass


def test_case_52():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = -3110
        var3 = module0.remove_extras(var2)
    except BaseException:
        pass


def test_case_53():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = 'l\n'
        var4 = module0.remove_extras(var3)
        assert var4 is not None
        var5 = "'Pc@?.*y_TSb"
        var6 = module0.remove_extras(var5)
        assert var6 is not None
        var7 = ']ifhpZdYeE*m'
        var8 = module0.remove_extras(var7)
        assert var8 is not None
        var9 = "'Pc@?.*y_TSb"
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'h]MX9d\x0cBUfOl4w>'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = False
        var14 = module0.remove_extras(var13)
    except BaseException:
        pass


def test_case_54():
    try:
        var0 = 'us'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'l\n'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = ']ifhpZdYeE*m'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'slU{'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'slU{'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = 'KY|]M\x0bdR1lErK*ra'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = "'Pc@?.*y_TSb"
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = 'slU{'
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = module0.remove_extras(var20)
        assert var22 is not None
        var23 = "'Pc@?.*y_TSb"
        var24 = module0.remove_extras(var23)
        assert var24 is not None
        var25 = 'slU{'
        var26 = module0.remove_extras(var25)
        assert var26 is not None
        var27 = module0.remove_extras(var25)
        assert var27 is not None
        var28 = 'G1\'vwZ\n2"0&~`'
        var29 = module0.remove_extras(var28)
        assert var29 is not None
        var30 = "'Pc@?.*y_TSb"
        var31 = module0.remove_extras(var30)
        assert var31 is not None
        var32 = 'h]MX9d\x0cBUfOl4w>'
        var33 = module0.remove_extras(var32)
        assert var33 is not None
        var34 = -4468
        var35 = module0.remove_extras(var34)
    except BaseException:
        pass


def test_case_55():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'slU{'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "'Pc@?.*y_TSb"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'KY|]M\x0bdR1lErK*ra'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'l\n'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = ']ifhpZdYeE*m'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = 'slU{'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = module0.remove_extras(var16)
        assert var18 is not None
        var19 = 'us'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = -1012
        var22 = module0.remove_extras(var21)
    except BaseException:
        pass


def test_case_56():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'slU{'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'l\n'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'us'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = 'h]MX9d\x0cBUfOl4w>'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = False
        var17 = module0.remove_extras(var16)
    except BaseException:
        pass


def test_case_57():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = 'slU{'
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = module0.remove_extras(var8)
        assert var10 is not None
        var11 = 'l\n'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = "'Pc@?.*y_TSb"
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = ']ifhpZdYeE*m'
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = -2616.06
        var18 = module0.remove_extras(var17)
    except BaseException:
        pass


def test_case_58():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = module0.remove_extras(var0)
        assert var2 is not None
        var3 = 'slU{'
        var4 = module0.remove_extras(var3)
        assert var4 is not None
        var5 = 'slU{'
        var6 = module0.remove_extras(var5)
        assert var6 is not None
        var7 = "'Pc@?.*y_TSb"
        var8 = module0.remove_extras(var7)
        assert var8 is not None
        var9 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'KY|]M\x0bdR1lErK*ra'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = "'Pc@?.*y_TSb"
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = 'h]MX9d\x0cBUfOl4w>'
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = 'l\n'
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = "'Pc@?.*y_TSb"
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = ']ifhpZdYeE*m'
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = -478.6
        var24 = module0.remove_extras(var23)
    except BaseException:
        pass


def test_case_59():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'KY|]M\x0bdR1lErK*ra'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = '1 '
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = 'l\n'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = "'Pc@?.*y_TSb"
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = ']ifhpZdYeE*m'
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = 'slU{'
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = "'Pc@?.*y_TSb"
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = "'Pc@?.*y_TSb"
        var23 = module0.remove_extras(var22)
        assert var23 is not None
        var24 = 'slU{'
        var25 = module0.remove_extras(var24)
        assert var25 is not None
        var26 = module0.remove_extras(var24)
        assert var26 is not None
        var27 = 'G1\'vwZ\n2"0&~`'
        var28 = module0.remove_extras(var27)
        assert var28 is not None
        var29 = 'us'
        var30 = module0.remove_extras(var29)
        assert var30 is not None
        var31 = "'Pc@?.*y_TSb"
        var32 = module0.remove_extras(var31)
        assert var32 is not None
        var33 = 'slU{'
        var34 = module0.remove_extras(var33)
        assert var34 is not None
        var35 = module0.remove_extras(var33)
        assert var35 is not None
        var36 = -1105
        var37 = module0.remove_extras(var36)
    except BaseException:
        pass


def test_case_60():
    try:
        var0 = "'Pc@?.*y_TSb"
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = "'Pc@?.*y_TSb"
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'slU{'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = module0.remove_extras(var4)
        assert var6 is not None
        var7 = 'G1\'vwZ\n2"0&~`'
        var8 = module0.remove_extras(var7)
        assert var8 is not None
        var9 = 'us'
        var10 = module0.remove_extras(var9)
        assert var10 is not None
        var11 = 'slU{'
        var12 = module0.remove_extras(var11)
        assert var12 is not None
        var13 = "'Pc@?.*y_TSb"
        var14 = module0.remove_extras(var13)
        assert var14 is not None
        var15 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var16 = module0.remove_extras(var15)
        assert var16 is not None
        var17 = 'KY|]M\x0bdR1lErK*ra'
        var18 = module0.remove_extras(var17)
        assert var18 is not None
        var19 = 'l\n'
        var20 = module0.remove_extras(var19)
        assert var20 is not None
        var21 = "'Pc@?.*y_TSb"
        var22 = module0.remove_extras(var21)
        assert var22 is not None
        var23 = ']ifhpZdYeE*m'
        var24 = module0.remove_extras(var23)
        assert var24 is not None
        var25 = 1495
        var26 = module0.remove_extras(var25)
    except BaseException:
        pass


def test_case_61():
    try:
        var0 = 'slU{'
        var1 = module0.remove_extras(var0)
        assert var1 is not None
        var2 = 'us'
        var3 = module0.remove_extras(var2)
        assert var3 is not None
        var4 = 'l\n'
        var5 = module0.remove_extras(var4)
        assert var5 is not None
        var6 = 'l\n'
        var7 = module0.remove_extras(var6)
        assert var7 is not None
        var8 = "'Pc@?.*y_TSb"
        var9 = module0.remove_extras(var8)
        assert var9 is not None
        var10 = ']ifhpZdYeE*m'
        var11 = module0.remove_extras(var10)
        assert var11 is not None
        var12 = 'slU{'
        var13 = module0.remove_extras(var12)
        assert var13 is not None
        var14 = "'Pc@?.*y_TSb"
        var15 = module0.remove_extras(var14)
        assert var15 is not None
        var16 = "9(\x0c~V4'U[9^_$Dn<8Srt"
        var17 = module0.remove_extras(var16)
        assert var17 is not None
        var18 = 'KY|]M\x0bdR1lErK*ra'
        var19 = module0.remove_extras(var18)
        assert var19 is not None
        var20 = '1 '
        var21 = module0.remove_extras(var20)
        assert var21 is not None
        var22 = "'Pc@?.*y_TSb"
        var23 = module0.remove_extras(var22)
        assert var23 is not None
        var24 = "'Pc@?.*y_TSb"
        var25 = module0.remove_extras(var24)
        assert var25 is not None
        var26 = 'h]MX9d\x0cBUfOl4w>'
        var27 = module0.remove_extras(var26)
        assert var27 is not None
        var28 = False
        var29 = module0.remove_extras(var28)
    except BaseException:
        pass
